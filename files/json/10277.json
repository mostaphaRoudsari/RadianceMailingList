{"body": "\nJust back from a week in the woods, and playing catch-up....\n\n\nThis is more or less correct.  What actually happens is that rays are\nsent to multiple processes, but we need to preserve the first-in/first-\nout (FIFO) order of the rays sent to rtrace, which means buffering up\nresults on the output side.  Logically, if you have set -x to 5, then\nwe need to take 5 ordered input ray origins and directions and run in\nthrough N processes until we get all 5 results out so we can put them\nback in the same order.  In other words, throwing additional processes\nover the -x setting buys you nothing, because your queue is never\ndeeper than this number.  The default of -x 0 (infinite) is the best,\nbecause it means rtrace can continue to slurp in new rays and buffer\nthem indefinitely, outputting ordered results as they become available.\n\nIn any case, you aren't likely to see much benefit to the rtrace -n\noption if you are only computing a handful of rays.\n\nCheers,\n-Greg\n\n", "replyTo": "Subject: [Radiance-general] Re: rtrace", "sender": "Greg Ward", "isquestion": false, "tags": [], "id": "<EBC242AC-90F7-4E17-945E-01F3EFBECC57@lmi.net>", "refs": ["<AANLkTimTGpvDCx6VJE5peDHdvRSuNA6xLWQy-lg7XFJL@mail.gmail.com>", "<AANLkTinwJMwdp6HznI78giZsta-WT76PnFsYOYcuidfC@mail.gmail.com>", "<AANLkTimjHlVvMO7fywczMYWMxBsB3jZsrnLUZMMe9uUY@mail.gmail.com>"], "datetime": "Sun Jul 18 23:13:53 2010", "email": "gregoryjward at gmail.com", "subject": "[Radiance-general] Re: rtrace"}