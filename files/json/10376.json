{"body": "\nThe basic problem is that you need to have the entire scene\ndescription available to every process, and GPU's don't work that\nway.  They are optimized for SIMD (single-instruction, multiple-data)\nprocessing, meaning that you run the same operation on many operands\nsimultaneously.  This is great if you are multiplying huge matrices\ntogether, but not much use in a ray-tracing context.\n\nEven if the GPU were optimized for this problem, much of what goes on\nin Radiance is ray tree evaluation.  It all sort of happens together\n-- you need to trace rays, figure out what to do at surfaces based on\nmaterial properties, evaluate .cal files, share ambient data (reading\nand writing a shared cache) and all sorts of things that would have to\nbe completely rethought for a GPU implementation.\n\n-Greg\n\n\n", "replyTo": "Subject: [Radiance-general] Re: Physically-based rendering using OpenGL?", "sender": "Greg Ward", "isquestion": false, "tags": [], "id": "<1C0BC1CB-3567-4D0F-9722-2C1756AA0AC6@lmi.net>", "refs": ["<i1du6h$tj5$1@dough.gmane.org>\t<4C3ABA3D.3040105@aisarquitectura.com>", "<i1fi0m$ifl$1@dough.gmane.org>", "<4C3B5967.2040809@aisarquitectura.com>"], "datetime": "Sun Jul 18 23:21:05 2010", "email": "gregoryjward at gmail.com", "subject": "[Radiance-general] Re: Physically-based rendering using OpenGL?"}