{"body": "\nOn Sat, Nov 6, 2010 at 1:59 PM, David Smith <dbs176@gmail.com> wrote:\n\nGreat idea. I would be very interested in a generic Python interface\nfor Radiance. I have used functionality of the Radiance tools in some\nof my scripts and I always had to rewrite the relevant parts or use a\nsystem command and process the output. I looked at the source code\nwith the intention to expose e. g. the scene parser or image\nread/write in a Python API. Unfortunately I don't know enough C to do\nthat.\n\n\nI think that a Python API can be especially useful in interactive\napplications like image viewing/analysing or even a 3D GUI or scene\neditor. In these cases a 1:1 implementation of the functionality is\nnot so important as access to the 'raw' data (pixel values in HDR\nimage or polygons in an octree). You can display that information or\nmanipulate it Python which offers plenty of 3rd party scientific\nlibraries to do so. The API would offer you a more pythonic/object\noriented way to do so.\n\n\nThat's a pity. I was hoping for a genuine Python API based on the C source code.\n\nSo far I have used the 'subprocess' module with Radiance binaries a\nbit and I think there are a couple of problems with this:\n\n1) Some csh scripts are not available on Windows. An abstract Python\nwrapper should offer the same features on all platforms.\n\n2) Short commands take a lot longer because you have to\nconvert/process the input and output of the commands to make them\nuseable in Python.\n\n3) Long running commands do not give you more control or feedback than\nthe binaries do now (which is not a lot). Especially for GUIs it would\nbe nice to have feedback on the progress rpict or oconv makes.\n\n4) Although I can see the elegance of your Python example compared to\na bash/csh script I think that the OO approach would limit the\nfunctionality of the individual scripts. In that case you'd have to\nfall back on shell scripting and can't benefit from the Python API.\n\n\nHaving said all that I'm sure I could contribute to a Python API\nproject. You can have a look at my take on 'subprocess'ing image\nread/write here:\n\nhttp://code.google.com/p/pyrat/source/browse/tags/wxfalsecolor/0.4.1/falsecolor2.py\n\nand an OO wrapper for the HDR image here:\n\nhttp://code.google.com/p/pyrat/source/browse/tags/wxfalsecolor/0.4.1/rgbeimage.py\n\nI have also fragments of a pure Python scene parser and other bits\nthat might come in handy at some point.\n\nThomas\n\n", "replyTo": "Subject: [Radiance-general] Python Radiance Package", "sender": "Thomas Bleicher", "isquestion": false, "tags": [], "id": "<AANLkTinWhLJz2ZRkm8+JrvErj6JH_wctr3L0crOFsA13@mail.gmail.com>", "refs": ["<AANLkTimwYfk4rFE6p+xsKgkX8kv1s_rKVHp0R3+k0JwW@mail.gmail.com>"], "datetime": "Sat Nov  6 13:33:19 2010", "email": "tbleicher at googlemail.com", "subject": "[Radiance-general] Python Radiance Package"}