{"body": "\nDear Radiance community,\n\nDoes anybody have any interest in a generic Radiance wrapper package for\nPython? I think I'm going to make one (and make it open source), and was\nwondering if anybody had any interest, suggestions, advice, code they would\nbe willing to contribute, etc. I'm aiming for a 1:1 functionality but I know\nthere are going to be some things that will be tough/impossible to do.\n\nI made what I think a simple program could be like below - it imports\ngeometry, creates a series of images, manipulates and combines those images,\nthen saves them.\n\nThe benefits of this are the flexibility of working within a higher level\nscripting language. You open up the possibility of scripting complex\nproblems, parameteric geometry, iterative solutions, and ultimately,\nadaptive design. This comes at the slight disadvantage of speed and the\nflexibility of pipes, etc.\n\nWhy Python? I know it isn't as revered or speedy as C or Perl, but it has a\nvery simple syntax and a lot of the 3rd party tools as of late seem to be\nwritten in Python. It's also available on all platforms and in some modeling\npackages such as Rhino 5, Max (Py3dsMax), Blender, etc.\n\nUltimately, it could be the engine behind an OpenDX / Grasshopper like GUI\nfor Radiance. I'll leave that up to someone else though.\n\nSo, yeah. Any interest?\n\n--Dave\n\nP.S. - I posted here because it's not directly related to the Radiance code,\nit would be just calling the Radiance programs and scripts. It's possible to\nloop in C code, but I think keeping it separate and modularized is better\npractice.\n\n\n\n\n\n\n# Python Radiance\n\n# Package would be called Radiance\nfrom Radiance import rpict, obj2rad, HDRImage, RADGeometry, RadianceOptions,\nImportOBJGeometry, ViewFile, CompiledGeometry\n\nltg_zone1 = RADGeometry(\"ltg_zone1.rad\")\nltg_zone2 = RADGeometry(\"ltg_zone2.rad\")\n\n#these would be equivalent\nscene = ImportOBJGeometry(\"base_geometry.obj\")\nscene = RADGeometry(obj2rad(\"base_geometry.obj\"))\n\nview1 = ViewFile(\"view1.vf\")\n\nzone1 = CompiledGeometry(scene, ltg_zone1)\nzone2 = CompiledGeometry(scene, ltg_zone2)\nzone1and2 = CompiledGeometry(zone1, ltg_zone2) #add to an existing octree\n\nopt_hq = RadianceOptions(\"hq.opt\")\n\nhdr_zone1 = rpict(zone1, ab=3, ad=256, ps=1, vf=view1)\nhdr_zone2 = rpict(zone2, ab=3, ad=256, ps=1, vf=view1)\nhdr_all = rpict(zone1and2, opt_hq, vf=view1)\n\nfrom somewhere import specialrpictfunction\n#this could be a function that you write that analyzes over the course of a\nyear or special post processing, etc.\nhdr_special = specialrpictfunction(zone1and2)\n\nhdr_scene1 = (0.6 * hdr_zone1) + (0.4 * hdr_zone2)\nhdr_scene2 = (0.9 * hdr_zone1)\nhdr_scene3 = (0.2 * hdr_zone1) + (hdr_zone2)\n\nhdr_scene1.save(\"img1.hdr\")\nhdr_scene2.save(\"img2.hdr\")\nhdr_scene3.save(\"img3.hdr\")\n\nhdr_all.save(\"img4.hdr\")\nhdr_special.save(\"img5.hdr\")\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: http://radiance-online.org/pipermail/radiance-general/attachments/20101106/4f029160/attachment.htm\n", "replyTo": "", "sender": "David Smith", "isquestion": true, "tags": [], "id": "<AANLkTimwYfk4rFE6p+xsKgkX8kv1s_rKVHp0R3+k0JwW@mail.gmail.com>", "refs": [], "datetime": "Sat Nov  6 11:59:30 2010", "email": "dbs176 at gmail.com", "subject": "[Radiance-general] Python Radiance Package"}