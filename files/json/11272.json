{"body": "\nHi Lars,\n\nSorry again for late answer.\n\nI think it is a memory problem because I monitored it with top and memory is quickly reducing and as soon as it goes under 100 MB or so (when it probably starts swapping to the HD) processors use drops to 0.something %. I've got 8 GB memory and ambient files are big up to 1.5 GB (very high settings). In the worst case the octree is 600 MB.\n\nUnfortunately the detail is all in a shading device (it is actually a transmittance study) so, no chance for using ambient exclude. And there are no overlapping geometries in the single instances and the instances replication is done by xform using the bounding box for spacing. Also care has been taken in taking away vertical faces at the boundaries to avoid overlapping surfaces.\n\nSo what I understand from this is that if rpict loads ambient files in memory as well as octrees, in the worst case I will have for each rpict calculation 1.5 + 0.5 + some work memory in use (I don't know how to quantify this). As I cannot run more than 2 processes, the work memory is probably bigger than  [7.5(available ram  memory) / 3 (max processes before it runs out of memory)] -[1.5+0.5] = 0.5 GB, which makes sense to me.\n\nWhat do you think?\n\nAs Jack was saying I should have organized the model better, but still is good to understand what happened for future use.\n\nThanks for all your help and Merry Christmas to you both and to all the radiance community :-)\n\nLucio Boscolo Mezzopan\n\n-----Original Message-----\nSent: 13 December 2010 10:41\nTo: Radiance general discussion\nHi Lucio,\n\nI have never heard about a case where ambient data became critical memory-wise... Why do you think that there is a problem with memory in your case? How much memory does the rpict process occupy?\n\nIf you have a lot of detail geometry that does not contribute significantly to the diffuse-indirect illumination of your scene, you can use the ambient exclude parameters of rpict/rtrace (-ae and -aE).\n\nIf you use too many instances, or if you create them in a wrong way, they will slow down the rendering. Each time a ray hits an instance (passes the bounding cube it fits into), it has to check for collisions with any surface inside that instance. So if you have a lot of overlapping instances with little geometry contained in each, or instances with a bad ration of width/length/height, a lot of unnecessary intersection checks will happen. Instances improve memory efficiency at the cost of rendering time. It is important to balance the two. So only pack compact, high-res geometry into instances.\n\nCheers, Lars.\n\n13.12.2010 10:49, Lucio Boscolo wrote:\n\n____________________________________________________________\nElectronic mail messages entering and leaving Arup  business\nsystems are scanned for acceptability of content and viruses\n\n", "replyTo": "Subject: [Radiance-general] Instances", "sender": "grobe at gmx.net", "isquestion": false, "tags": [], "id": "<CC7B52EF0E443D45B11162FB554D97DF06B947B2E3@EURXMBC02.global.arup.com>", "refs": ["<1773335.454131290542592530.JavaMail.defaultUser@defaultHost>", "<4CEC21B0.6060103@visarc.com>", "<CC7B52EF0E443D45B11162FB554D97DF06B915F81C@EURXMBC02.global.arup.com>", "<4CED0866.2080807@visarc.com>", "<CC7B52EF0E443D45B11162FB554D97DF06B935FE90@EURXMBC02.global.arup.com>", "<4D05F826.5060009@gmx.net>"], "datetime": "Thu, 23 Dec 2010 12:18:25 +0000", "email": "Lars O. Grobe", "subject": "Re: [Radiance-general] Instances"}