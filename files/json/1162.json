{"refs": ["<420206AD.7000500@familyhealth.com.au>"], "id": "<75714b3918bae0ee21f504fe17f0d4ef@gmail.com>", "subject": "[Radiance-general] falsecolor and specific isocontours", "email": "gregoryjward at gmail.com", "body": "\nHi Chris,\n\nNo, falsecolor doesn't offer such an option.  However, you can do it\nyourself with pcomb:\n\npcomb -e 'incontr=eq(we*li(1),16.5,0.25)' \\\n-e 'ro=if(incontr,0,ri(1)' \\\n-e 'go=if(incontr,1,gi(1)' \\\n-e 'bo=if(incontr,0,bi(1)' \\\n-e 'and(a,b):if(a,b,a)' \\\n-e 'eq(a,b,eps):and(a-b+eps,b-a+eps)' \\\n-o input.pic > contoured.pic\n\nThis assumes you meant 16.5 lux or nits (depending on whether\n\"input.pic\" was rendered with the -i option or not).  If you meant 16.5\nwatts/sr/m^2, then take out the \"we*\" in the first expression.  I also\nused an epsilon of 0.25 about 16.5, so anything between 16.25 and 16.75\nwill be colored green.  If you want some other range, you can adjust\nthis.  If you want a perfectly sharp line, then you'll need to use the\nmore sophisticated pcomb script within falsecolor, which I won't\nreproduce here.  Other options, such as placing a contour over a\ntone-mapped (pcond output) image are easily accommodated by altering\nthe command above.\n\n-Greg\n\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] falsecolor and specific isocontours", "tags": [], "sender": "Gregory J. Ward", "datetime": "Thu Feb  3 15:46:52 2005"}