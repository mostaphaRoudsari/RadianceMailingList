{"body": "\nI found this little Python classlet useful when I was running a heap of\nrenderings and thought someone else might, too.  Take it as a fragment,\nsuitable for modification.\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nfrom datetime import datetime\nimport sys\nimport subprocess\n\nRIFFMT =\"\"\"# {note}\nmaterials = {matfiles}\nscene = {scenefiles}\n\nZONE = {zone} {bounds}\nVARIABILITY = {var}\nQUALITY = {qual}\nINDIRECT = {ind}\nDETAIL = {detail}\nAMBFILE = {ambfile}\n\n{views}\n\"\"\"\n\nclass radrif:\ndef __init__(\nself, matfiles, scenefiles,\nnote = None,\nzone = \"E\", bounds = None,\nvar = \"H\", qual = \"M\", ind = 0, detail = \"M\",\nambfile = \"\",\nviews = \"\"):\n\nif note is None:\nnote = datetime.today().ctime()\nif zone[0].upper() not in \"EI\":\nraise Exception(\"Zone must begin with E or I\", zone)\nif bounds is None:\nbounds = self.getbounds(scenefiles)\n\nself.matfiles = matfiles\nself.scenefiles = scenefiles\nself.note = note\nself.zone = zone\nself.bounds = bounds\nself.var = var\nself.qual = qual\nself.ind = ind\nself.detail = detail\nself.ambfile = ambfile\nself.views = views\n\n\ndef __str__(self):\nreturn RIFFMT.format(**self.__dict__)\n\ndef getbounds(self,scenefiles):\n\"\"\"Get the bounding box of a model\"\"\"\ncmd = ['getbbox', '-h'] + scenefiles.split()\nPIPE = subprocess.PIPE\ngetbb = subprocess.Popen(cmd, stdout = PIPE, stderr = PIPE)\n(out,err) = getbb.communicate()\nif getbb.returncode != 0:\nraise Exception(\n'Can\\'t get bounds of {0}, error {1}: {2}'.format(\nself.scenefiles, getbb.returncode, err))\nreturn out\n\ndef main():\nprint str(radrif(sys.argv[1],sys.argv[2]))\n\nif __name__ == \"__main__\":\nmain()\n\n\n--\nRandolph M. Fritz\n\n\n\n\n", "replyTo": "", "sender": "Randolph M. Fritz", "isquestion": true, "tags": [], "id": "<iocv5o$dlj$1@dough.gmane.org>", "refs": [], "datetime": "Sat, 16 Apr 2011 13:45:44 -0700", "email": "RFritz at lbl.gov", "subject": "[Radiance-general] RIF file generator class"}