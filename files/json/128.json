{"refs": [], "id": "", "subject": "[Radiance-general] Re: Color appearance and color temperatur", "email": "adiance-general@radiance-online.org", "body": "Message-ID: <F434536F-1DF1-11D6-826D-00306540F848@lmi.net>\n\nThe pcomb program provides for arbitrary color transforms, among other\nthings.  It's not the most efficient way to apply a 3x3 color matrix to\nan image, but it works.  You just have to write out the equations for\nit, for example:\n\npcomb -f myclrmat.cal -e 'ro=Mrr*ri(1)+Mrg*gi(1)+Mrb*bi(1)' \\\n-e 'go=Mgr*ri(1)+Mgg*gi(1)+Mgb*bi(1)' \\\n-e 'bo=Mbr*ri(1)+Mbg*gi(1)+Mbb*bi(1)' inp.pic > out.pic\n\nThe file myclrmat.cal contains the above coefficients, something like:\n\n{ Color transformation coefficients }\nMrr : 1.25; Mrg : .21; Mrb : -.07;\nMgr: .10; Mgg : 1.13; Mgb : .10;\nMbr: -.11; Mbg : .03; Mbb : .97;\n\nThese values are totally made up -- use whatever you like.  The ':'\nmakes the calculation slightly more efficient since it declares the\nvalues are constant, and is preferred unless you want the coefficients\nto vary somehow over the image.  It's probably better to put the\nformulas I have on the pcomb command line directly into the myclrmat.cal\nfile.  I just wrote it this way for illustration purposes.\n\nThere are of course a million things you can do with pcomb, at least.\nColor transforms are among the more mundane applications of a\nprogrammable image filter, but the are useful.  If you have many such\ntransforms to do, you might want to write a special-purpose program that\nwould be faster at it.\n\n-Greg\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Re: Color appearance and color temperatur", "tags": [], "sender": "Greg Ward", "datetime": "Sat, 9 Feb 2002 22:46:47 -0800"}