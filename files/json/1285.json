{"body": "\nHi Nick,\n\nYou should be able to do what you want using pinterp and falsecolor.\nI'll assume that you desire isolux contours on vertical surfaces in my\ninstructions, below.\n\n1) Generate an irradiance image using a parallel view to render the\nvertical surfaces you are interested in with the -i option.  This will\nexclude surfaces perpendicular (horizontal surfaces in particular), but\nmay include surfaces at odd angles.  Hopefully, this is OK.  At the\nsame time, you should use the -z option of rpict to create a z-buffer\nto go with your rendering, and set -pj 0.  Let's call this\n\"irradiance.pic\", and call the z-buffer \"irradiance.zbf\".\n\n2) Generate a standard image of the same size but without the -i or -z\noptions.  (Actually, you may use the -z option with either rendering --\nyou just don't need it for both as it will be the same.)  Again, set\n-pj 0 as before, so your pixels line up.  Let's call this\n\"standard.pic\".  You will probably want to pass this image through\npcomb or pfilt to optimize the exposure for display, but don't alter\nthe resolution or the z-buffer won't be valid.\n\n3) Run these two renderings through falsecolor to generate a contour\nplot, using Rob Guglielmetti's new -lw option to set the label width to\n0.  You must do this in a special way to preserve the view string\nneeded in Step 5:\n\n% getinfo < standard.pic | grep '^VIEW=' > contour.pic\n% falsecolor -cl -lw 0 -i irradiance.pic -p standard.pic [other\noptions] >> contour.pic\n\n4) Generate a standard image from the view you actually want to see,\nwhich I'll assume is either a perspective view or one coming from a\ndifferent angle to include some vertical surfaces.  You must also\ngenerate a z-buffer for this image using rpict's -z option.  Let's call\nthis \"view.pic\", and the z-buffer \"view.zbf\".  You will probably want\nto pass this image through pcomb or pfilt to optimize the exposure for\ndisplay, but follow the same procedure as in Step 2.\n\n5) Use pinterp to combine the two images, giving the contour image\nfirst and using the -q option to avoid averaging:\n\n% pinterp -x 1024 -y 1024 -q -f0 -vf view.pic contour.pic\nirradiance.zbf view.pic view.zbf > combined.pic\n\nThe -x 1024 -y 1024 options are to set the output resolution, which\nshould match the resolutions of the input images.  If you want to\nproduce an anti-aliased result, then go through with resolutions that\nare twice or three times what you desire in the end, then pass\n\"combined.pic\" through pfilt with options to filter down the result.\nAny filtering earlier in the pipeline will break everything.\n\nI hope this works -- let me know how it turns out.  (And you thought it\nwas a simple question!)\n\n-Greg\n\nDear All,\n\nA simple question ? I suspect to the more able (then me) of you out\nthere?. Is it possible to exclude planes in a certain orientations from\nan rpict calculation. For example, I would like to use radiance to\ncreate a picture showing the vertical sky component on vertical\nsurfaces. Therefore I would like to exclude the horizontal surfaces to\nprevent them from cluttering up the image.\n\nIdeally, I would anticipate being able to overlay a contour image which\nexcludes the horizontal surfaces over a luminance image which includes\nthem. I suppose I could generate this from two separate sets of\ngeometry, but this is a little clunky and may result in some inaccurate\nresults, where the inter-reflections may be important and or\nsignificant. Any thoughts would be gratefully received.\n\nMany thanks\n\nNick\n\n? XCO2 conisbee ?Ltd\n1-5  Offord Street\nLondon N1 1DH\nTel: + 44 (0)20 7700 1000\nFax: + 44 (0)20 7700 4455\nEmail: nickd@xco2.com\nWeb: http://www.xco2.com\n\nengineering sustainability\n\n\n", "replyTo": "Subject: [Radiance-general] Rendering exclude options", "sender": "Greg Ward", "isquestion": false, "tags": [], "id": "<CF5A89A0-2765-11D9-8218-000A95BB392A@lmi.net>", "refs": ["<000001c4bb37$8d89a4e0$2568a8c0@Nick>"], "datetime": "Tue Oct 26 17:44:55 2004", "email": "gward at lmi.net", "subject": "[Radiance-general] Rendering exclude options"}