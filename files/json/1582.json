{"refs": ["<a932f51195d061d856d96814b21d928e@gmx.net>", "<A5662C01-B0B1-4B30-92C2-D098CA4D51F7@gmail.com>", "<4469a270441082ca2a06e1860a55bcb6@gmx.net>", "<BE949BCD-9EBF-4F7C-9D1F-906487F14017@gmail.com>"], "id": "<a21064ffac25d2264e0e62cade2f3820@gmx.net>", "subject": "[Radiance-general] rvu: too many modifiers in ambient lis", "email": "grobe at gmx.net", "body": "\nHi Greg!\n\nI guess the problem arises somewhere else. I get this problem even with\nonly on -ae modifier now. I think the problem is that I simply have too\nmany materials defined. The check in ambient.c is done if I use the -ae\nswitch, but I don't think it is the number of -ae modifiers.\n\nThe background is that I do something stupid at the first look: I\ninclude my global material library with every object of my scene, than\nassemble the scene with replmarks. The reason for that (including into\neach object instead using the library at the final oconv run) is that\nmy materials have to undergo all the transformations I apply to the\nobjects (because I use image maps massively). Before, I had precompiled\nall these objects and used them as instances, so there was no need in\nhaving the material definitions in all objects, but this gave a bad\noverhead (the point is that a rotated instances still has its mapping,\nbut a rotated rad-scene has wrong mappings, cause the mapping is\nrotated only if the material definition is IN the scene).\n\nSo I guess I will have to find a way to filter the materials better (so\nthat only the materials actually used are included into an object file)\nor live with the instance overhead.\n\nThanks, CU Lars.\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] rvu: too many modifiers in ambient list", "tags": [], "sender": "Lars O. Grobe", "datetime": "Mon Jul 11 11:50:55 2005"}