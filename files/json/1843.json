{"refs": [], "id": "<4383A575.9050902@pab-opto.de>", "subject": "[Radiance-general] Linux,multi-cpu,NFS,Mosix,PVM,MPI", "email": "apian at pab-opto.de", "body": "\nDear Nick,\n\nfollowing your question about Radiance on multi-cpu systems:\nYou've probably found the many postings on radiance-online (search for\n'mosix' or 'parallel'). My two-cent thoughts on this from my experiences\nover the years at an institute (50 Linux machines) and at my office (6\nmachines):\n\n* Having the CPUs on one board is a lot easier than over the network\ndual Pentium or AMDs are easy to get and relatively cheap, quad\nboards are a bit more expensive, but might be worth it if you're\nreally digging into it.\nSharing the scene and ambient data in RAM is build into rpict\n(rather crude and simple, but it works). Both animations and large\nimages use the CPUs in parallel. Parametric studies with different\noctrees require multiple copies of the geometry, of course, but I\nhaven't found a scene which is limited by RAM yet (typically other\nlimits like ambient rendering times, function files, etc. limit\nrendering before that).\nWith a few GB of RAM, RAID-1 or RAID-5 disks, a dual power supply\nand an UPS,  the machine constitutes a reliable and fast\nproduction system.\n* Distributing over the network via NFS works too\nhttp://www.ise.fhg.de/alt-aber-aktiv/radiance/animation/ shows an\nanimation from my Fhg-ISE days and was rendered on the 50 or so\nLinux machines we had at that time. They shared all data via NFS,\nwhich works, contrary to an apparent common subliminal feeling.\n(well, you have to use nfs-3 and the kernel NFS server on Linux to\nget file locking, which is essential for the sharing of ambient\ndata). Distribution across the machines was done by a small but\neffective and failsafe job distribution system I wrote.\nWe had tried Open-Mosix, but never used it for productions. The\nmain drawback in my view is that the process 'swims' between\nnon-homogeneous machines and this adds an extra layer to keep\ntrack of. E.g. rpict's logfile will not tell where the process has\nrun or is running. In case some machine has faulty hardware it\ngets increasingly hard to track, and that's not really what one\nwants or needs when rendering a few thousand images under time\nconstraints. Your mileage may vary, maybe folks out there do use\nMosix happily for production now.\n* PVM (parallel virtual machine) is a library and system to\ndistributed parts of a program across machines (MPI, message\nparsing interface is similar, with different concepts). It\nrequires modifying the source (as far as I recall from the times\nwhen porting to LBNL's Cray-T3 had been a pending idea). Carsten\nBauer ported Radiance to PVM and others checked out MPI/PVM as\nearly as 1997 (see\nhttp://radsite.lbl.gov/radiance/pub/digest/no_Z/v3n2 and seach for\nPVM).\nIf anyone uses an MPI/PVM enhanced Radiance for commercial or\nresearch grade production I (and others) would be delighted and\nenlighted to hear about.\n\nopen to all new facts and insights-\ncheers\nPeter\n\n--\npab-opto, Freiburg, Germany, http://www.pab-opto.de\n[see web page to check digital email signature]\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: http://radiance-online.org/pipermail/radiance-general/attachments/20051123/64a3ddb7/attachment.htm\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "Peter Apian-Bennewitz", "datetime": "Wed Nov 23 00:12:33 2005"}