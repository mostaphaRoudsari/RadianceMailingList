{"body": "\nI'm starting to use Radiance in research on visual perception of 3D\nshape.  The .pic file format assigns each colour channel one byte, plus\na common exponent for all three, resulting in about 1% precision.  When\ntesting peoples' ability to detect faint patterns, 1% isn't precise\nenough, e.g., humans can detect sine wave patterns at less than 1%\ncontrast, but in the .pic format, a 1% amplitude sine wave would come\nout more like a square wave.\n\nFrom a quick look through rpmain.c and rpict.c, it looks like the the\nfloating-point COLOR struct is used throughout the rendering\ncalculations, and that the conversion to COLR is made at the very end,\nin fwritescan(), when writing the .pic file.  This suggests that I\ncould just replace fwritescan() with a routine that writes the file at\na higher precision.\n\nMy question is this:  are there other factors in the rendering\ncalculations (rounding, etc.) that limit the precision to around 1%\nanyway?\n\nThanks,\n\nRichard\n\n\n", "replyTo": "", "sender": "Richard Murray", "isquestion": true, "tags": [], "id": "<2c9687d65fc194d04b8d35e88a63d5fa@sas.upenn.edu>", "refs": [], "datetime": "Thu Feb 24 23:26:37 2005", "email": "rfmurray at sas.upenn.edu", "subject": "[Radiance-general] .pic precision"}