{"refs": [], "id": "<8E7D2A23-F0E5-4B93-9AB6-F0681311AD00@gmail.com>", "subject": "[Radiance-general] No more Mr. Nice Guy", "email": "gregoryjward at gmail.com", "body": "\nHi All,\n\nThis message is most relevant to Mac users, but introduces a change\nthat may affect rpict and rtrace performance in future releases on\nall platforms.  Specifically, I have taken out the NICE= macro\nsettings from the Rmakefile in src/rt, so future builds will run all\nRadiance programs at the standard user priority.\n\nI made a fortuitous discovery whilst playing around with the very\ncool (no pun intended) TemperatureMonitor freeware <http://\nwww.bresink.com/osx/TemperatureMonitor.html> on my new PowerMac G5\nquad.  It's lots of fun to watch the processor temps go up and down\nwith load.  The funny thing I noticed was that changing the Energy\nSavings settings had an unexpected effect on temperatures, which are\nin turn related to power consumption and (presumably) processor\nperformance.\n\nThe Energy Saver options lists three processor performance settings,\n\"Highest,\" \"Automatic,\" and \"Reduced.\"  With the machine idle, there\nwere only slight differences between the three; I had expected to see\nmore, especially on the \"Highest\" setting...  The biggest difference\nwas between \"Highest\" and \"Reduced\" with all four processors busy,\nand that was no surprise.  What was a surprise was that when I had\nfour rpict jobs going in parallel, there was a big difference between\nthe temperatures using the \"Highest\" versus \"Automatic\" settings.\nApple documentation states that the performance penalty for using\n\"Automatic\" should be very small, so I figured the temperature change\nwould also be small.  That's when I decided to measure actual\nperformance.\n\nWhat a difference!  Between the \"Highest\" and \"Automatic\" settings, I\nnoticed a performance difference of over 60%, where I expected to see\nlittle or none.  What I did expect was a performance hit moving to\nthe \"Reduced\" setting, which indeed there was, but it was only\nanother 13% worse than \"Automatic.\"  This really seemed wrong to me.\nThat's when I decided to start playing around with the \"nice\" level\nof rpict.\n\nThe \"nice\" setting on a process is a way to tell Unix that a job is\nnot a top priority, and interactive processes should be given more of\nthe CPU if there are any running.  However, in the past, it hasn't\nmuch affected the performance of a process if there are no other jobs\nto contend with.  I put nice() calls in Radiance way back when multi-\nuser Unix's were the rule, and we had to peacefully coexist with a\nlot of other people who might get annoyed if I hogged all the system\nresources, as Radiance is wont to do.\n\nIn short, I found out that removing the nice() system call from rpict\nachieved the \"Highest\" performance figure even when the Energy Saver\nprocessor speed was set to \"Automatic.\"  (The \"Reduced\" performance\nwas not affected.)  Apparently, Mac OS X 10.4 (at least) uses the\nprocess \"nice\" setting to decide whether or not to kick the CPU speed\nup a notch.  This might be a new feature of the OS, as I don't have\naccess to a maching running Jaguar or Panther to try it there.\n\nThe bottom line in all this is that if you own a Mac and you're\nrunning Radiance on it, be sure to use the \"Highest\" setting in the\nEnergy Saver control panel, because if you don't, your rendering\nmight just be running 60% slower than you would like it to.  Option B\nis to remove the -DNICE= arguments from the build lines in src/rt/\nRmakefile and remove the affected object files (rpmain.o and\nrtmain.o) then rerun \"rmake install\" in the rt directory.  Or,\ndownload Saturday's HEAD release and build that.  (I think I'm too\nlate for tomorrow.)  Then, you can leave the processor performance on\n\"Automatic,\" which is the default for normal operation.\n\nI wish I had made this discovery a couple of years ago....\n\n-Greg\n\n\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "Greg Ward", "datetime": "Fri Dec 16 05:53:02 2005"}