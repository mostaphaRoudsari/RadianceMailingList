{"body": "\nHi Axel,\n\nThe mixpict primitive uses the indicated function of the red, green and\nblue channels of an image to determine how much of one material to use\nversus another.  One of these materials may be \"void\", which I\nrecommend instead of the \"glass\" primitive that you're using in your\ncurrent example.  A \"void\" material is the same as a perfectly\ntransparent surface, which glass is not.  I would also recommend using\n\"glow\" instead of plastic to show up your falsecolor lines as something\nnot truly belonging to the scene.\n\nHere is a more complete example:\n\nvoid colorpict fc_val\n7 red green blue sp.pic fc.cal fc_u fc_v\n0\n0\n\nfc_val glow fc_glow\n0\n0\n4 1 1 1 0\n\nvoid mixpict mp\n7 fc_glow void nonzero sp.pic fc.cal fc_u fc_v\n0\n0\n--------\nThe file \"fc.cal\" looks like so:\n\n{ Use false color contour image as selector }\nnonzero(r,g,b) = if(max(r,max(g,b))-FTINY, 1, 0);\nfc_u = Px;\nfc_v = Py;\n------\nThe mapping for fc_u and fc_v may need to be a little more\nsophisticated if your image and space don't match, or you can try\ntransforming the colorpict and mixpict primitives to match these\ncoordinates, similar to how it's done for picture.cal.  Let me know if\nyou need help with this part, and be specific with your questions (it\nhelps a lot).\n\n-Greg\n\n\n\n", "replyTo": "Subject: [Radiance-general] Transparent textures (again)", "sender": "Gregory J. Ward", "isquestion": false, "tags": [], "id": "<5514a0e8e894d7e10db151b1683ba7d3@gmail.com>", "refs": ["<422637B8.2000305@t-online.de>", "<10201.213.58.101.145.1109805605.squirrel@213.58.101.145>"], "datetime": "Thu Mar  3 02:30:55 2005", "email": "gregoryjward at gmail.com", "subject": "[Radiance-general] Transparent textures (again)"}