{"refs": [], "id": "<BAY102-F198EF7F777CF434858D064A4F30@phx.gbl>", "subject": "[Radiance-general] Mesh Rendering Performan", "email": "arcdevon at hotmail.com", "body": "\nDear Group\n\nI have been using obj2mesh to convert my 3D scene to the Radiance triangular\nmesh (rtm) format for the last 6-8 months. Although I do prefer using this\nmethod to convert my scenes, a recent test confirmed that the performance\nsuffers greatly when using a mesh when compared to using a scene consisting\nof polygonal objects (i.e. void polygon triangle1 ......) . Case in point,\none rendering took 8.7 for the scene consisting of a mesh primitive and 3.7\nhours to render for the scene consisting of triangular polygon primitives.\nThis is with the -n option set to 6, which should yield the best performance\n(actually, its about the same whether I leave -n to the default or if I use\na lower value). A slight performance decrease (5%-10%) would be acceptable\nbut 135% is extreme. On top of that, I have some modified source code for\no_face that can yield a 10%-20%+ performance increase without any additional\nmemory cost (It's just an implementation of Moller-Trumbore ray/triangle\nintersection). What is surprising to me is that I would normally assume that\nthe mesh primitive would be more efficient due to its caching of the\nray/edge comparisons during ray tracing but this does not seem to be the\ncase. Out of curiosity, has anyone here experienced the same? Does anyone\nhere know if Radiance sees the rtm file as one huge mesh or as several\nsmaller meshes? If this is the case, does anyone know if breaking each scene\nobject as a separate mesh primitive would improve performance?\n\nThanks\n\nMarcus\n\n\n\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "Marcus Jacobs", "datetime": "Fri Feb 24 22:20:57 2006"}