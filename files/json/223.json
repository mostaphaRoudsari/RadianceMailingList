{"refs": [], "id": "", "subject": "[Radiance-general] Linux installation", "email": "adiance-general@radiance-online.org", "body": "Message-ID: <200207191530.IAA01997@ix.cs.uoregon.edu>\n\nBruce,\n\nSome comments below on your questions.\n\nThere are two styles of shells on most UNIX (and Linux) systems: those\nderived from the original bourne shell (sh) which include bash, ksh, etc.\nand those derived from the C shell (csh, tsch, etc.). The difficulty for\nmany beginners is that these two families of shells support different\nsyntax for setting variables in the environment along with different\ncontrol flow commands.\n\nUnder sh or bash, you set an environment variable as follows:\nRAYPATH=/usr/local/radiance/lib\nexport RAYPATH\n\nThe first line sets the RAYPATH environment variable only for the current\noperating shell. If you start another shell from the current shell, then\nthe RAYPATH environment variable will not exist. The second line\nexports or sets the RAYPATH variable in the environment so it will be\ninherited by other shells. These two commands can be combined into a single\nline as follows:\n\nRAYPATH=/usr/local/radiance/lib; export RAYPATH\n\nThe semicolon allows multiple commands to issued on the same command line.\nNOTE: make sure the RAYPATH environment variable points to where you\nactually installed the radiance lib files.\n\nNormally, this command would be placed in the .profile file located in your\nhome directory. The .profile file is read when the sh, bash, or ksh shell\nstarts.  It acts as an initialization file where you can set all kinds of\nenvironment variables, change behaviors of the shells, etc. The bash shell\nwill also read a .bshrc resource file in your home directory if it exists.\nThis .bshrc file is for commands that only the bash shell understands. A\nsimilar .bash_profile file can be used for bash-only startup commands. If\nthese files don't exist in your home directory, then the system uses some\nsystem-wide files in the /etc (/etc/profile, for example). These system-wide\nfiles should not be changed (except by very experienced administrators).\n\nTo set the RAYPATH environment variable and add the radiance bin folder\nto your path in your .profile file might look something like the following.\nNote comment lines begin with a # character.\n\n# set a RAYPATH if this environment variable does not exist\nif [ ${RAYPATH:-\"\"} = \"\" ] ; then\nRAYPATH=/usr/local/radiance/lib\nexport RAYPATH\nfi\n\n# add the radiance binaries to the PATH (note we added at front of path)\nPATH=/usr/local/radiance/bin:$PATH\n\n# set a MANPATH environment variable if it doesn't exist\nif [ ${MANPATH:-\"\"} = \"\" ] ; then\nMANPATH=/usr/share/man\nexport MANPATH\nfi\n\n# Add the radiance man pages to the MANPATH\nMANPATH=$MANPATH:/usr/local/radiance/man\nexport MANPATH\n\nIf you set these environment variables for bash in the .profile file, then\nthey will be inherited by any shells that you start (spawn) from this\nshell including c shells.\n\nThe \"set\" command will display all of your current environment variables.\nYou may need to pipe this command through less or more to see all of the\nvariables if you aren't in anm X window:\nset |less\n\nNote that the SHELL variable is confusing since this variable indicates the\nlogin shell, not the shell that you may be using if you started a csh from\nbash.\n\nNow we switch to the C shell side of things. The syntax to set enviroment\nvariables in the csh (and tcsh) is different. In this case, there is a\nsingle command to set an environment variable.\n\nsetenv RAYPATH /usr/local/radiance/lib\nsetenv PATH /usr/local/radiance/bin:$PATH\n\nThe \"setenv\" command will display the environment variables. These commands\ncould be placed in a .cshrc file in your home directory that is read\nwhenever a c shell starts. The .login file is read after the .cshrc file\nwhen this is a login script.\n\nThe choice of shells is a personal preference. You will find that most books\non Linux will discuss and provide examples for sh and bash, not csh. So I\nwould suggest that you stick with bash for the time being. In any case,\nyou would be better to use tcsh than csh as your csh shell since it\nsupports a similar syntax for history (executing previous commands again).\nBoth bash and tcsh support using control-p and control-n or the up-arrow\nand down-arrow to move through a list of previous commands. They also\nsupport very similar syntax for editing a previous command line. The\nleft-arrow and right-arrow move left or right one character at a time,\nwhile the home and end keys move to the beginning or end of the line. The\ndelete and backspace delete characters from the command line and any\nother characters are inserted. Both bash and tcsh support similar syntax\nfor filename completion.\n\nOnce you have logged into Linux you can start another shell easily (just type\ncsh or tcsh to start a C shell). This new shell will inherit all of the\nenvironment variables from the previous shell\n\nThe radiance developers were familiar with the C shell, so the examples that\nthey provide are written using the C shell syntax.\n\nThe command to change your login shell is chsh. If this command is given\nby itself, it will prompt you for the shell you which to use for login.\nNote that you have to provide the full path to the shell you wish to use.\nThe following command will list the command shells that Linux knows about\n(the command shells listed in /etc/shells):\nchsh -l\n\nThe chsh program edits the /etc/passwd file in a safe way and changes the\nprogram (command shell) that the operating system runs when you login.\n\nYour choice of scripts for running radiance are a personal preference. Note\nthat the first line of a shell script file indicates what shell or command is\nto execute the commands. Take a look at the rlux or xyzimage shell scripts\nlocated in the radiance bin directory. These scripts begin with the following:\n\n#!/bin/csh -f\n\nThis could just as well have been a perl scripti starting with a first line:\n#!/usr/bin/perl\n\nNote that shell script files need to be marked as executable (chmod +x) if\nyou want to be able to just type the shell file name and have them execute.\nOtherwise you have to give the name of the file to the shell:\ncsh /usr/local/radiance/bin/rlux\n\nI built and installed radiance from the sources, so ignore the locations\nin the examples above for where the radiance files are installed. I\ncustomized my installation so all of the radiance files where placed in\ndirectories under /usr/local/radiance. This likely differs from the\nlocation where these files are placed when installing the Linux binaries\ndownloaded from LBL.\n\nRegards,\n-Steve\n\nBruce Sounes writes:\n[ Charset ISO-8859-1 unsupported, converting... ]\n\n\nSteven Baker                      Contributing Editor, Unix Review\n(541) 683-5927                    360 East 15th Avenue\nmsbaker@cs.uoregon.edu            Eugene, OR 97401\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Linux installati", "tags": [], "sender": "Mark Steven Baker", "datetime": "Fri, 19 Jul 2002 08:30:46 -0700 (PDT)"}