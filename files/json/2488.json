{"refs": ["<20060525071350.6631.qmail@web54614.mail.yahoo.com>", "<C1706414-8780-4652-8F8A-A10DC267E0D2@gmail.com>", "<4475D06C.2050701@rumblestrip.org>", "<19C1B2EB-03AE-4426-86B1-CFB3F32443C8@gmail.com>", "<4475D730.5080601@rumblestrip.org>", "<79949B3F-B6AB-44BC-9F97-224DC6FF7CC3@biomechanicsinc.com>", "<20060526110305.97470@gmx.net>"], "id": "<D8DD8BA3-A989-4147-A7AC-F9FD5D279048@gmail.com>", "subject": "[Radiance-general] another water question", "email": "gregoryjward at gmail.com", "body": "\nHi Lars,\n\nThe way I'd recommend creating such a scene is to regenerate the\nwater mesh, then add the little bit of geometry containing the \"mesh\"\nprimitive that references to an existing octree, a la:\n\nobj2mesh water.obj > water.rtm\noconv -f -i scene-water.oct water.rad > scene+water.oct\n\nWhere water.rad contains the mesh primitive and maybe a material.\nThe oconv command only takes as long as it takes to read and write\nback out the octree -- best if it's frozen for that reason.\n\nIf you know for certain that your mesh always ends up with the same\noverall dimensions, you don't even need to rerun oconv, technically.\n\n-Greg\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] another water questi", "tags": [], "sender": "Gregory J. Ward", "datetime": "Fri May 26 16:14:27 2006"}