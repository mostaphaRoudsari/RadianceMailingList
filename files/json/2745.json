{"refs": ["<CC0B19F4C6132F4D9FDDEBF194200FB5018C43A9@ldcexc02.global.arup.com>", "<1223049047.20060907232027@audice.com>"], "id": "<49844AE8-4E50-4B13-A97A-296105671E3D@gmail.com>", "subject": "[Radiance-general] BRDF material description", "email": "gregoryjward at gmail.com", "body": "\nLooks like no one replied to this one...\n\n\nSome measured and fitted data sets may be found on Wojceich Matusik's\npages at MERL:\n\nhttp://people.csail.mit.edu/wojciech/BRDFAnalysis/\n\nGo to the \"Supplemental Material\" PDF to find a set of isotropic\nBRDFs with Ward reflectance model parameters.  Use thew Ward-Duer\nfits if you have the latest version of Radiance with Duer's\ncorrections (vers. 3.6 and later).\n\n\nThe best way is to fit the data to the existing reflectance model in\nRadiance.  This way, you will avoid problems with sampling errors and\nget the full BRDF behavior.  If the measured data does not fit the\nexisting isotropic or anisotropic models, then you will have to enter\nit as (preferably smoothed) data or create your own model.  In either\ncase, you will get the correct behavior only for reflections from\nlight sources, and reflections from other (non-source) objects will\nbe approximated as diffuse.\n\n\nThe \"plasdata\" type has a white specular component and \"metdata\" has\na specular component that matches the RGB color given.  These will be\nvery close to real materials -- in general it's one or the other.\nVariations between would arise if you mixed two such materials, like\na metallic car paint with a clear coat.  In such cases, you could\nemploy a mixfunc to obtain the desired behavior, or go whole-hog with\nthe BRTDfunc type, though this would be rather more work as you would\nneed to incorporate your data into the associated *.cal file using\nnested select() functions (not fun).\n\nIgnoring color, both \"plastdata\" and \"metdata\" both provide the means\nto specify a full BRDF, since the indices to the N-dimensional data\nare actually functions of the incident light direction vector.  For\nexample, you could give:\n\nvoid plasdata bad_example\n7 noop bad.dat brdfang.cal inc_alt inc_azi refl_alt refl_azi\n0\n4 0.5 0.7 0.3 0.05\n\nWhere \"brdfang.cal\" is something like:\n\n{ Compute incident and reflected altitude and azimuth angles in\ndegrees }\ninc_alt(sx,sy,sz) = asin(sz) / DEGREE;\ninc_azi(sx,sy,sz) = atan2(sy,sx) / DEGREE;\nrefl_alt(sx,sy,sz) = asin(Dz) / DEGREE;\nrefl_azi(sx,sy,sz) = atan2(Dy,Dx) / DEGREE;\n\nThese variables then would serve as indices to your 4-dimensional\ndata in \"bad.dat\":\n\n# BRDF measurements, incident altitude and azimuth first, then\nreflected alt & azi\n4\n-90 90  22\n-180 180  44\n-90 90  15\n-180 180  30\n# 22 * 44 * 15 * 30 == 435,600 data points\n...\n\nPerhaps at this point you are beginning to see why no examples of\nplasdata and metdata have appeared on the mailing list.\n\n\nThe diffuse component would the minimum value of your BRDF, which you\nwould subtract from every point as a constant Lambertian component.\nSince the BRDF of a diffuse surface is everywhere rho/pi, you would\nmultiply this constant by pi and specify it as your diffuse\nreflectance.  For proper normalization, you would further divide your\nremaining directional BRDF by the specular component value, since it\nwill be remultiplied by the specularity in plasdata and metdata.\n\n\nI'm not sure this question has been properly answered before.  I'm\nnot sure it has now, either.\n\n-Greg\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] BRDF material descripti", "tags": [], "sender": "Gregory J. Ward", "datetime": "Fri Sep 15 11:18:18 2006"}