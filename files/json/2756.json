{"body": "\nAnother vote for Python here - you could certainly do what I've done\nhere in a shell script, but I chose to use (and learn) Python. If you\nstick with Python you can eventually add a GUI relatively easily to your\nscripts using Glade and pyGTK.\n\nI used Python to automate the creation of illuminance calculation grids.\nThis is a budget example, but this snippet is what I've done in the past\nto calculate illuminance by repeated calls to rtrace. I used the\nos.popen() call in Python to call rtrace as I would on the command line.\nMy apologies if this example is too trivial, but here it is anyways, in\ncase you find it useful:\n\nfor i in range(len(Grid1.CalcPoints)):\n#call to rtrace returns 3 values, each representing the\nirradiance for r,g,b.\n#first prepare the string representation of the point:\npoint_str = \"\\'\" + str(Grid1.CalcPoints[i].x) + \" \" +\nstr(Grid1.CalcPoints[i].y) + \\\n\" \" + str(Grid1.CalcPoints[i].z) + \"  \" +\nstr(Grid1.CalcPoints[i].xdir) + \\\n\" \" + str(Grid1.CalcPoints[i].ydir) + \" \" +\nstr(Grid1.CalcPoints[i].zdir) + \"\\'\"\nrtrace_str = \"echo \" + point_str + \" | rtrace -I -ab \" +\nstr(options.ab) + rad_opts + \" -h -w \" + options.octfile\nprint rtrace_str\nfd = os.popen( rtrace_str, 'r', -1 )\n\nbuffer = fd.readline()\nrgb_irrad = buffer.split()\nilluminance = 179*(float(rgb_irrad[0])*0.265 +\nfloat(rgb_irrad[1])*0.670 + float(rgb_irrad[2])*0.065)\nGrid1.CalcPoints[i].illuminance = illuminance\nprint \"( \" + str(Grid1.CalcPoints[i].x) + \", \" +\nstr(Grid1.CalcPoints[i].y) + \", \" + \\\nstr(Grid1.CalcPoints[i].z) + \" ): \" + str(illuminance)\n+ \" lux\"\n\nIt's ugly but seems to work OK.  This snippet is part of a larger script\nthat takes in some user options, grid size, and prints out illuminance\nvalues.\n\nCheers,\n\nMark Shewfelt\nElectrical Engineering Intern\nEnermodal Engineering Ltd.\nph: 519 743 8777 x232\nfx: 519 743-8778\nmshewfelt@enermodal.com\n\n\n\n-----Original Message-----\n[mailto:radiance-general-bounces@radiance-online.org] On Behalf Of Jack\nde Valpine\nSent: September 29, 2005 2:05 PM\nTo: Radiance general discussion\nHey Rob,\n\nI follow-up on that. I probably could have used a more robust cup of jo\nthis morning as I repeated the word in every darn sentence. Ack!\n\nIn general, I think that if you learn one of these things then entry\ninto the next becomes easier. I started out with csh, sed and awk, ages\nago, and while it worked it is ugly, I had to learn how to use three\ndifferent tools (heck, I think that you can by an O'Reilly book for each\nof these). Nevertheless, shell scripting is definitely the most quick\nand dirty way to get things done.\n\nRob is correct. A hugely confusing element to Perl (for which you can\nbuy a lot more than 3 O'Reilly books) is the fact that there are lots\nand lots of way to do things, this can be both a pro and a con. Though I\nthink in general looking at other peoples code is always painful unless\nit is extremely well documented. I cannot really speak for Python,\nthough I think it is probably a bit \"cleaner\" than Perl.\n\nI think the crux of it all though is having an actual problem that you\nare trying to solve and access to some good books with examples. This is\nthe best way to learn that I have found.\n\n-Jack\n\nRob Guglielmetti wrote:\n\n\n\n\n\n\n_______________________________________________\nRadiance-general mailing list\nRadiance-general@radiance-online.org\nhttp://www.radiance-online.org/mailman/listinfo/radiance-general\n\n", "replyTo": "", "sender": "radiance-general-bounces@radiance-online.or", "isquestion": true, "tags": [], "id": "<EB65303B6C7EBA4996382AA5E0806BF40ACC86@soleil.EEL.local>", "refs": [], "datetime": "Thu Sep 29 20:37:35 2005", "email": "radiance-general-bounces@radiance-online.org", "subject": "Re: [Radiance-general] RADIANCE and Unix shells"}