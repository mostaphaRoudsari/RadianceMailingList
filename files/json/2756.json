{"refs": ["<CC0B19F4C6132F4D9FDDEBF194200FB5018C43A9@ldcexc02.global.arup.com>", "<1223049047.20060907232027@audice.com>", "<49844AE8-4E50-4B13-A97A-296105671E3D@gmail.com>"], "id": "<56953764.20060920113446@audice.com>", "subject": "[Radiance-general] BRDF material description", "email": "webmaster at audice.com", "body": "\nDear Greg,\n\nThank you very much for your highly detailed answer to my question!\nUnfortunately, I'd like to ask you another (this time Ward model\nrelated).\n\nWhere can I enter these Ward-Duer fits in Radiance? I have not\nfound any Ward model associated .cal scripts in Radiance. There is\nonly He-Torrence (He.cal, He3.cal) model.\n\nThe Radiance materials themself are based on a Ward model I suppose?!\nBut where can I enter these values? BRTDfunc material description\nneeds a corresponding .cal script file to work?! Other material types,\nlike anisotrophic version of plastic, do not have enough parameters to\nspecify associated data.\n\nI use Radiance v3.7.2 (cygwin/X build).\n\nI'm sorry for taking your time!\n\nGJW> Looks like no one replied to this one...\n\n\nGJW> Some measured and fitted data sets may be found on Wojceich Matusik's\nGJW> pages at MERL:\n\nGJW>         http://people.csail.mit.edu/wojciech/BRDFAnalysis/\n\nGJW> Go to the \"Supplemental Material\" PDF to find a set of isotropic\nGJW> BRDFs with Ward reflectance model parameters.  Use thew Ward-Duer\nGJW> fits if you have the latest version of Radiance with Duer's\nGJW> corrections (vers. 3.6 and later).\n\n\nGJW> The best way is to fit the data to the existing reflectance model in\nGJW> Radiance.  This way, you will avoid problems with sampling errors and\nGJW> get the full BRDF behavior.  If the measured data does not fit the\nGJW> existing isotropic or anisotropic models, then you will have to enter\nGJW> it as (preferably smoothed) data or create your own model.  In either\nGJW> case, you will get the correct behavior only for reflections from\nGJW> light sources, and reflections from other (non-source) objects will\nGJW> be approximated as diffuse.\n\n\nGJW> The \"plasdata\" type has a white specular component and \"metdata\" has\nGJW> a specular component that matches the RGB color given.  These will be\nGJW> very close to real materials -- in general it's one or the other.\nGJW> Variations between would arise if you mixed two such materials, like\nGJW> a metallic car paint with a clear coat.  In such cases, you could\nGJW> employ a mixfunc to obtain the desired behavior, or go whole-hog with\nGJW> the BRTDfunc type, though this would be rather more work as you would\nGJW> need to incorporate your data into the associated *.cal file using\nGJW> nested select() functions (not fun).\n\nGJW> Ignoring color, both \"plastdata\" and \"metdata\" both provide the means\nGJW> to specify a full BRDF, since the indices to the N-dimensional data\nGJW> are actually functions of the incident light direction vector.  For\nGJW> example, you could give:\n\nGJW> void plasdata bad_example\nGJW> 7 noop bad.dat brdfang.cal inc_alt inc_azi refl_alt refl_azi\nGJW> 0\nGJW> 4 0.5 0.7 0.3 0.05\n\nGJW> Where \"brdfang.cal\" is something like:\n\nGJW> { Compute incident and reflected altitude and azimuth angles in\nGJW> degrees }\nGJW> inc_alt(sx,sy,sz) = asin(sz) / DEGREE;\nGJW> inc_azi(sx,sy,sz) = atan2(sy,sx) / DEGREE;\nGJW> refl_alt(sx,sy,sz) = asin(Dz) / DEGREE;\nGJW> refl_azi(sx,sy,sz) = atan2(Dy,Dx) / DEGREE;\n\nGJW> These variables then would serve as indices to your 4-dimensional\nGJW> data in \"bad.dat\":\n\nGJW> # BRDF measurements, incident altitude and azimuth first, then\nGJW> reflected alt & azi\nGJW> 4\nGJW> -90 90  22\nGJW> -180 180  44\nGJW> -90 90  15\nGJW> -180 180  30\nGJW> # 22 * 44 * 15 * 30 == 435,600 data points\nGJW> ...\n\nGJW> Perhaps at this point you are beginning to see why no examples of\nGJW> plasdata and metdata have appeared on the mailing list.\n\n\nGJW> The diffuse component would the minimum value of your BRDF, which you\nGJW> would subtract from every point as a constant Lambertian component.\nGJW> Since the BRDF of a diffuse surface is everywhere rho/pi, you would\nGJW> multiply this constant by pi and specify it as your diffuse\nGJW> reflectance.  For proper normalization, you would further divide your\nGJW> remaining directional BRDF by the specular component value, since it\nGJW> will be remultiplied by the specularity in plasdata and metdata.\n\n\nGJW> I'm not sure this question has been properly answered before.  I'm\nGJW> not sure it has now, either.\n\nGJW> -Greg\n\n--\nBest Regards,\nIlya A. Zimnovich                          mailto:webmaster@audice.com\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] BRDF material descripti", "tags": [], "sender": "webmaster@audice.com", "datetime": "Wed Sep 20 09:39:05 2006"}