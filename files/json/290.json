{"body": "\nGreg Ward wrote:\n\nGeometry exported from CAD is often complex and uses Radiance primitives\nnot very efficiently, e.g. everything is tesselated into polygons, even\nif the surface could be described as sphere, cone etc. Mostly\nhierarchical structures are left intact, e.g. a line of complex carved\nposts is known to the exporting routine as \"instances\" of the same\nelement.\nThen, IMHO, there's no generaly sound way to reorganize geometry to fill\nRADIANCE instances with cube like geometry.\n\nIf I get this right, the penalty for non-cubical bounding boxes with\nnon-thin geometry distribution would be nil, with the advantage that it\nwould allow placing \"thinny\" instances next to another without\noverlapping bounding cubes.\nCode for checking ray intersections with non-cubical boxes would be as\nefficient as checking cubical boxes ? If not, would that be\ncounterweight by the speedup as rays close to the bounding box miss the\nnon-cubical box completely whereas they hit (and trigger at least one\noctree lookup) a cubical now ?\n\nAs always, any insights very much welcome\n-Peter\n--\npab-opto, Freiburg, Germany, www.pab-opto.de\n\n", "replyTo": "", "sender": "Peter Apian-Bennewitz", "isquestion": true, "tags": [], "id": "<3CDE8B5A.F0F35697@pab-opto.de>", "refs": [], "datetime": "Sun, 12 May 2002 17:33:46 +0200", "email": "radiance-general@radiance-online.org", "subject": "[Radiance-general] Octree blocksReferences: <2F03A82F-64EA-11D6-81A5-00306540F848@lmi.net>"}