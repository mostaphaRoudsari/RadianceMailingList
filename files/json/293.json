{"body": "\nHi Peter,\n\n\nThen use \"xform\" rather than instances.\n\n\nI shouldn't have said \"subcubes\" when I meant \"sub-boxes.\"  Ray\nintersection tests in long, thin sub-boxes would be inefficient, and\nthe only way to make it efficient again is using a kd-tree, which\nis more complicated to code.  I originally implemented cubical\noctrees because they were simpler and just as fast as kd-trees\naccording to other people's research on the subject, and when\nI added instances later, I was too lazy to reimplement everything\njust so I could have non-cubical bounding boxes for instances.\nI barely got it to work properly as it was -- you wouldn't believe\nhow much stuff is going on \"behind the scenes\" to make instancing\nwork right.  (Well, maybe you would.)\n\nI wouldn't trust the octree code with long, thin boxes.  It's too likely\nto run into floating point inaccuracies in extreme cases.  A lot of\nthe design of Radiance is based on my intuition of what will work\nand what won't, and you're welcome to try things out\nand prove me wrong.  I really don't mind, or take it personally.\n\n-Greg\n\n\n", "replyTo": "Subject: [Radiance-general] Re: Octree blocks", "sender": "Greg Ward", "isquestion": false, "tags": [], "id": "<12BA835C-6694-11D6-93EC-00306540F848@lmi.net>", "refs": [], "datetime": "Mon, 13 May 2002 10:08:40 -0700", "email": "radiance-general@radiance-online.org", "subject": "[Radiance-general] Re: Octree blocks"}