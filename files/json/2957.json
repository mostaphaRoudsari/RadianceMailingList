{"refs": [], "id": "", "subject": "[Radiance-general] Stencil method to reduce light leaks fromadjacent spaces", "email": "jm at dmu.ac.uk", "body": "Message-ID: <FBA1E321-69FC-44AA-BDA6-0B2B582BCE7E@dmu.ac.uk>\n\nScenario:  Creation of images showing the distribution of illuminance\nacross a workplane from a high viewpoint and using the fore clipping\nplane to remove foreground objects.\n\nProblem: With arbitrary shaped/orientated workplanes it is generally\nnot possible to avoid including adjacent spaces and wall voids etc.\nin the final image. I usually create a stencil rendering for the same\nview parameters showing just the workplane (now set to \"glow\") and\nuse those pixels to pick-out the pixels I want in the illuminance\nrendering (say, to profile the illuminance distribution across the\nworkplane).  See the top two images in this PDF:\nhttp://www.iesd.dmu.ac.uk/~jm/pickup/stencil.pdf\n\nNow, this method works fine most of the time provided that you can\ncrank-up the ambient parameters to avoid light leaks.  These can be\nfairly nasty when they do occur -- the pixels affected by a leak can\nhave an illuminance much higher than nearby unaffected pixels.  In\nthe example shown, the leaky pixels have a value >1000x (!) that of\ntheir non-leaky neighbours.  Needless to say, these affected pixels\nplay havoc with any numerical measure of illuminance that you might\nwant to get from your image.  The computational cost of leak\nprevention can be expensive [1].\n\nI've long had this hunch that the propensity for leaks might be\nreduced if we could prevent rpict from doing any initial sampling\noff the workplane, and so avoid populating the ambient file with\noutside and wall-void values at the zero level.  It turns out that it\ncan't be done directly with rpict.  However there is a way using\nrtrace and potpourri of other Radiance programs.  I couldn't figure\nout how to do it.  Fortunately, Greg could -- he came up with this\nsuggestion:\n\n------------------------------------------------------------------------\n----\n\nRpict isn't very good about working on subimages, unless they're\nperfectly rectangular.  However, you can use rtrace to accomplish\nthis, with a little effort.  Basically, you need to zero out the ray\ndirections on all pixels you don't want computed.  Something like:\n\nvwrays -ff -x 512 -y 512 -vf best.vf \\\n| rlam -if6 - -if1 '\\!pvalue -h -H -df -b stencil.pic' \\\n| rcalc -if7 -of -e '$1=$1;$2=$2;$3=$3' -e 'out(v)=if($7-.5,v,0)' \\\n-e '$4=out($4);$5=out($5);$6=out($6)' \\\n| rtrace -ffc `vwrays -d -x 512 -y 512 -vf best.vf` -i scene.oct \\\n\nIf I didn't mess up, irradiances should be calculated wherever the\nstencil pixels are greater than 0.5, and zeros will be written to the\noutput picture everywhere else.  You can tweak the definition of the\nout(v) function to get a range of values, instead.\n\n------------------------------------------------------------------------\n----\n\nWhich worked first time!  Indeed, the approach does seem to be very\neffective.  The lower two images in the PDF show the \"usual rpict\nmethod\" and the \"stencil method\" renderings set to the same\nfalsecolor scale (in Photosphere).  In addition to preventing the\nleak, the stencil method was four times faster (I expected it to be\nquicker, but not by this much).  Both renderings were, of course,\ngenerated using the same ambient parameters -- in this case:\n\n-ab 2 -ad 2048 -ar 128 -aa 0.2 -as 512\n\nThese need to be included in the rtrace command for the stencil\nmethod.  The effectiveness in terms of leak prevention and increased\nspeed will be highly dependent on the scene, the view and the ambient\nsettings.  As ever, some testing is advised.\n\nFor me at least, this is a very useful technique.  And thanks to Greg\nfor figuring out the command.\n\nA (slightly belated) Happy (Chinese) New Year to you all.\n\n-John\n\n[1] Much like watery leaks as anyone who has recently had dealings\nwith a plumber will know.  Sadly, my plumber will not accept payment\nin CPU cycles.\n\n-----------------------------------------------\nDr. John Mardaljevic\nSenior Research Fellow\nInstitute of Energy and Sustainable Development\nDe Montfort University\nThe Gateway\nLeicester\nLE1 9BH, UK\n+44 (0) 116 257 7972\n+44 (0) 116 257 7981 (fax)\n\njm@dmu.ac.uk\nhttp://www.iesd.dmu.ac.uk/~jm\n\n\n\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "John Mardaljevic", "datetime": "Sat Mar  3 10:34:24 2007"}