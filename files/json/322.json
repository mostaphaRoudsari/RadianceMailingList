{"refs": [], "id": "", "subject": "[Radiance-general] Re: multiprocessor systems, Radiance, and yo", "email": "adiance-general@radiance-online.org", "body": "Message-ID: <Pine.BSF.4.44.0301180640540.90303-100000@emancholl.pair.com>\n\nCarsten Bauer wrote:\n\n\n\nIn a thread on the dev list from Wed, 12 Jun 2002\nhttp://www.radiance-online.org/pipermail/radiance-dev/2002-June/000001.html\nI said the following, which was received with quite a bit\nof scepticism:\n\nSince Windows doesn't support NFS file locking\n(and neither did cygwin, last time I looked), we'll need to find\na better solution for concurrent access to ambient files. I can\nthink of two portable ways to do this: Either we invent a file\nbased locking mechanism, or we establish a seperate server\nprocess that accepts network store and retreival requests by the\nactual simulation processes. The latter would be more technicall\ninvolved, but probably a lot more robust. Any thoughts?\n\nAnd now, half a year later, you tell us that you already have such\na server implemented? Only that you call it \"slave\"... ;)\nDoes your \"slave\" require PVM? If yes, then that would probably make\nit platform independent, otherwise you'd have to tell us some more\ndetails. Personally, I think that this alone would be worth adding\nto the ANSified Radiance core, with the management stuff up for\ndiscussion.\n\nBut maybe we can now really move the details to the dev list. I'm\ncross-posting this, so there's no need to reply on the general list.\n\n\n-schorsch\n\n--\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Re: multiprocessor systems, Radiance, and you", "tags": [], "sender": "Georg Mischler", "datetime": "Sat, 18 Jan 2003 06:44:43 -0500 (EST)"}