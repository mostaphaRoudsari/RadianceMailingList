{"refs": ["<37fac3b90711050200u9367c2eo3fa6c97eb6ab940a@mail.gmail.com>", "<37fac3b90711050208pf575ce6m936ea2f789174ad2@mail.gmail.com>", "<37fac3b90711050209m9dd0999oaea8f6573e670fa5@mail.gmail.com>", "<E2B74F52-0673-44BA-B7ED-247C9DBFCE4D@arcor.de>"], "id": "<FA92A793-CE01-4012-B97C-B45F5D0DA549@lmi.net>", "subject": "[Radiance-general] Re: per-vertex coloring", "email": "gward at lmi.net", "body": "\nHi Jelle,\n\nI lost this thread in some e-mail difficulties I was having with my\nonline service.  These seem to be sorted out, now...\n\nA quick look at the ra_xyz man page will confirm that this program is\nfor converting between RGB and XYZ color space, nothing to do with\nthe pixel coordinates on an image.  (Confusing, I know.)\n\nIs your mesh grid regular?  If not, you're sort of stuck because you\nneed to resample the colors onto a grid, which is a hard problem.  If\nyou have a grid to begin with, it may be as simple as establishing a\ncorrespondence between the local (u,v) coordinates and a dump of\nvalues into a Radiance picture (using pvalue -r ...).\n\nIf you feel like hacking C-code, the program src/hd/rhpict will take\na set of point values and resample them into an image.  It wouldn't\ntake that much to get it to accept colors and positions rather than\ntaking a holodeck as input, I don't think.\n\n-Greg\n\n---------------\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Re: per-vertex coloring", "tags": [], "sender": "Greg Ward", "datetime": "Tue Nov 13 21:25:14 2007"}