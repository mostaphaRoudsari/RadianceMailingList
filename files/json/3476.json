{"refs": [], "id": "", "subject": "[Radiance-general] Re: falsecolor's isolux on observer'sluminance.", "email": "loscotec at libero.it", "body": "Message-ID: <JVYWAI$3F23E7B8F589F6E51541AE480189A3D5@libero.it>\n\nWow Greg, that's amazing !\n\nThat solution is simple and powerfull at the same time. And Indeed it helped me much in learning how to behave with Radiance's programs.\n\nTHANK YOU\n\nBut let me annoy you a little further. Going on thinking about this problem, I realized that what I really need is something different. I don't actually need ray to be traced from close to the point, 'couse this point aren't actually seen from the observer.. Neither I need ,as it was before, to have wrong informations. Then probably the best option would be to mark the 'wrong' points to understand them are not seen from the observer. A good way could probably be to paint them with an unreal color (or luminance level if postprocessed by falsecolor).\n\nThe method could be to check if ray intersection points with surfaces are different from the ones requested, and, in that case, to paint that area with given values. This could probably be achieved also building up some kind of mask image to combine later with pcomb ... ?\n\nWell, I'm sure it is possible, and it is probably simpler than I figure it out, but I have no idea on how to achieve it.\n\nWell, I'n neither in a hurge now of building such system, so don't worry if you cannot answer.\n\nLucio\n\n\n\n.Hi Lucio,\n.\n.I'm glad that the basic idea works.  The command I sent you does\n.literally what you asked, which is to show the luminance in the\n.direction of the desired point.  As you noticed, the ray does not\n.necessarily get there.  To ensure that it does, you could simply\n.start the ray closer to the target point by replacing the rcalc\n.command with:\n.\n.\trcalc -if3 -of -e '$1=$1-nrm*Dx;$2=$2-nrm*Dy;$3=$3-nrm*Dz;$4=Dx;\n.$5=Dy;$6=Dz' \\\n.\t\t\t-e 'Dx=$1-OX;Dy=$2-OY;Dz=$3-OZ;nrm=0.001/sqrt(Dx*Dx+Dy*Dy+Dz*Dz)'\n.\n.What this does is start each ray a short distance (0.001 in world\n.units) from the target point, ensuring that no intervening geometry\n.obstructs the view.\n.\n.I hope this helps.\n.-Greg\n.\n.> From: \"loscotec\\@libero\\.it\" <loscotec@libero.it>\n.> Date: February 8, 2008 5:26:38 AM PST\n.>\n.> I finally tried the isolux plot from a different view as you\n.> suggested me, Greg .\n.>\n.> Thank you very very very much for your help !\n.>\n.> it does wark properly and I did not even had to correct formula\n.> \"wrays..\" as it was already correct !\n.>\n.> I tried aslo the pinterp strategy, but, having my observer a very\n.> small angle of view on the street, the requested resolution of the\n.> first image would have been far to big.\n.>\n.> I figured out that the vwrays method does not work correctly if\n.> there are some obstructions between observer and calculated point .\n.> As I'm feeding rtrace view view directions.. !\n.>\n.> Is there a stratagem to control this in some way? I dont really\n.> need it right now, but i could in the future and I'm really\n.> interested in trying to build up some solid calculation program.. !\n.>\n.> Thank you very much again !\n.>\n.> Lucio\n.\n._______________________________________________\n.Radiance-general mailing list\n.Radiance-general@radiance-online.org\n.http://www.radiance-online.org/mailman/listinfo/radiance-general\n.\n\n.. Caminante no hay\ncamino, solo se hace\ncamino al andar ..\n\n\n---   o\nmeglio   ---\n\n.. Caminante el\ndestino no es al\nfinal de el viaje,\npero en todo el\nandar ..\n\n\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "loscotec@libero.it", "datetime": "Sat Feb  9 02:40:02 2008"}