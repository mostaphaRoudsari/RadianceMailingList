{"body": "\nHi Lars,\n\nThe only part that is common between a Radiance triangle mesh and an\noctree (as used for an instance primitive) is the octree data\nstructure itself.  The mesh is stored very differently from a set of\nRadiance primitives -- a quick look at src/common/mesh.h should\nconvince you of that.  I had to add a function pointer to the RAY\nstructure in order that the specialized intersection routine would be\ncalled, interpreting the OBJECT id's as indices into the mesh patch\nlist.\n\nOther than the different primitive name, you can treat meshes just\nlike instances.  Is it so inconvenient to swap the primitive name?\nIt was a bit of work to get them to look and behave the same...  Now\nyou want them to be the same?\n\nI'm confused.\n-Greg\n\n\n", "replyTo": "Subject: [Radiance-general] Mesh Rendering Performance", "sender": "Greg Ward", "isquestion": false, "tags": [], "id": "<C0A1DB89-D2A1-40D9-9C45-4CE21056C94C@gmail.com>", "refs": ["<BAY102-F198EF7F777CF434858D064A4F30@phx.gbl>", "<68969C85-9DC0-4BFC-A087-650AE3F3C321@gmail.com>", "<def92f2f604d36d9234bfb8fd3b9ad64@gmx.net>"], "datetime": "Sun Feb 26 18:08:20 2006", "email": "gregoryjward at gmail.com", "subject": "[Radiance-general] Mesh Rendering Performance"}