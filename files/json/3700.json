{"refs": ["<100441490805021446hf63b5f9i9c3a0153dd258665@mail.gmail.com>", "<07CC9FF7-3E04-4DE8-9FC2-122D43ABFEA5@mac.com>", "<124b40400805070332y5417083brea5f0819c740309c@mail.gmail.com>"], "id": "<D95037EF-1A12-4077-A365-BCCC858D5D76@lmi.net>", "subject": "[Radiance-general] applied material to all faces of a genbox", "email": "gregoryjward at gmail.com", "body": "\nHello Marija,\n\nWithout address your problem specifically, let me suggest three\napproaches to handling material orientations:\n\n1) If your material definition cares only about orientation, and not\nposition, and your surfaces tend to take on only a few principal\norientations (such as the three coordinate planes), then create one\nmaterial definition for each principal orientation.  This method is\nused for the \"woodpat.cal\" file, for example.\n\n2) If you have many orientations and/or your material definition\ndepends also on position, then include your material in a file with\nyour canonical surface, then transform the two together using xform.\nThe surface will be moved, and the transformation added appropriately\nto your material definition.  E.g:\n\n!xform [xf args] mat+obj.rad\n\n3) If the above technique does not work because you are applying your\nmaterial to different objects each time, then you can put the\nmaterial definition in a file by itself and include it with your\ntransform, along with the object file.  E.g:\n\n!xform [xf args] matdef.mat objdef.rad\n\nThere is no need to worry about the material name being the same but\nmeaning something different each time, as the most recent definition\nin a stream is always the one used.\n\nDoes this help at all, or am I missing your point?\n\n-Greg\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] applied material to all faces of a genbox", "tags": [], "sender": "Greg Ward", "datetime": "Wed May  7 08:43:27 2008"}