{"refs": ["<d5d7d3120807261524n5522585dp218c832d7078ec67@mail.gmail.com>\t<756BE29B-A4B1-4BA5-91DF-990D0184E698@lmi.net>\t<9C75DB7C51A54E9DAC5A99A13B174083@PC4Core>\t<29549F7B-CA89-4677-9D3A-CD22C652DAE3@lmi.net>\t<488D8421.7030406@gmx.net>", "<5464A32D-02AB-49C1-892C-44610E89346C@lmi.net>"], "id": "<48901FCA.10807@gmx.net>", "subject": "[Radiance-general] Slow rendering with transparant textures", "email": "grobe at gmx.net", "body": "\n\n\nYes, it does ;-) thank you for the explanation Greg! You know that I\nhave a model making rather intensive use of textures here (the Hagia\nSophia model), and I was wondering if there were some techniques to\napply for a speed-up. But as we do not combine cal-files at all, just\nmap one image per object, I do not see such a possibility any more. It\nmight make sense to have simplified colorpict modifiers doing the most\nfrequently used transformations hard-coded, without calling to the\ncal-file interpreter - e.g. a colorpictxy, colorpict xz and colorpict yz\nmodifier which would allow to do all mapping in orthogonal models\nwithout cal-files. But it would break e.g. xform for such modifiers, and\ncreate a mess in the scene language while few models really have a\nproblem with too many mappings. So we have to live with slow mappings ;-)\n\nBTW, as it is related to textures and came to my mind some days ago - it\nshould be quite doable to modify the source of mkillum in a way that it\noutputs polygons with a prerendered ambient calculation mapped onto\nthem, right? It would be one step towards a nice vrml/x3d-export from\nradiance scenes, as the x3d- / vrml-viewer could render the direct\nlight, while the view-point independent ambient calculation would be\nleft to radiance. The only problem would be the need of correct surface\nnormals for the whole model.\n\n\nCU Lars.\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Slow rendering with transparant textures", "tags": [], "sender": "Lars O. Grobe", "datetime": "Wed Jul 30 01:01:31 2008"}