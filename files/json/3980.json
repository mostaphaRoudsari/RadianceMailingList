{"refs": ["<d5d7d3120807261524n5522585dp218c832d7078ec67@mail.gmail.com>\t<756BE29B-A4B1-4BA5-91DF-990D0184E698@lmi.net>\t<9C75DB7C51A54E9DAC5A99A13B174083@PC4Core>\t<29549F7B-CA89-4677-9D3A-CD22C652DAE3@lmi.net>\t<488D8421.7030406@gmx.net>\t<5464A32D-02AB-49C1-892C-44610E89346C@lmi.net>\t<48901FCA.10807@gmx.net>", "<0C34D20A-57C1-4B7F-A44B-20F8ECB969CB@lmi.net>"], "id": "<4890425F.1070506@gmx.net>", "subject": "[Radiance-general] Slow rendering with transparant textures", "email": "grobe at gmx.net", "body": "\n\n\nI thought that calling rtrace for each supported surface type using a\nfixed resolution and writing the surface with a colorpict modifier\nlinking to the generated pixel image would be enough? Of course this\napproach would be incredible slow for large models.\n\nRenderparks supported this kind of export. But as it imported only mgf,\nnot native radiance, all texture information was lost.\n\nWell, maybe I imagined this being easier then it actually is...CU Lars.\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Slow rendering with transparant textures", "tags": [], "sender": "Lars O. Grobe", "datetime": "Wed Jul 30 03:29:06 2008"}