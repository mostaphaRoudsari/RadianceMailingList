{"refs": [], "id": "<694e132c0808110608p23be2929t8e3105a97086cff3@mail.gmail.com>", "subject": "[Radiance-general] Another rpiece question", "email": "dbs176 at gmail.com", "body": "\nJack,\n\nThe shell script I used is below, adapted from Mark Stock's reference\ncode. It runs rpiece -PP four times, each calling corresponding\nrpicts, but the fourth rpiece/rpict instance is the only one where the\nrpict does anything. From what I can tell, the rpict from the last\nrpiece will fork and take over any available cores (making NCPU rpicts\nfor this rpiece, two rpicts for the other rpieces), leaving the rpict\ninstances of the other rpieces useless. That doesn't seem like the\nright way to go about breaking up a picture, it seems like there are 4\nrpicts but they are only working one segment of the 8x8 grid at a\ntime.\n\nI guess what I'm asking is this: Aside from the order in which the\npicture gets processed, does rpiece x 4 == rpict -PP ?\n\n--Dave\n\n----------------------\n\nNCPU=4\nCOLS=8\nROWS=8\n\necho \"-vf 6.vf\" > viewpoint\necho \"-w -i -bv -ab 4 -ar 128 -ad 1024 -as 512 -aa 0.15 -av 0.0 0.0\n0.0 -aw 0 -lr -10 -lw 0.004 -x 2048 -y 2048 -af ambfile -ps 1 -ds .1\n-dj .6 -t 120\" > options\necho \"-o smp.unf model.oct\" > arguments\n\necho $COLS $ROWS > syncfile\nrm -f pp\n\nwhile [ \"$NCPU\" -gt 0 ]\ndo\necho \"running proc $NCPU\"\nrpiece -v -PP pp -F syncfile @viewpoint @options @arguments &\nNCPU=`expr $NCPU - 1`\ndone\nwait\n\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "David Smith", "datetime": "Mon Aug 11 06:08:57 2008"}