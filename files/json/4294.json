{"body": "\nNick,\nChristoph Reinhart has a little script that allows you to input your desired transmissivity, and you can extract the correct Radiance definition from the output. I think that may be the way to go for your purposes. I would contact Christoph to see if you can get your hands on the script. Your other option is to select a few actual glasses with the transmissivity that you desire, and test to make sure that they all produce similar results.\n\nJohn\n\n\n\nNick Doylend wrote:\n\nThanks very much for your suggestions.\n\nI looked briefly at outputting glazing data from Optics.  It's probably the\nway to go if I want to model a 'real' glazing type.  I don't really\nunderstand how the BRTDfunc is used; it sets the surface reflectance as well\nas transmittance doesn't it?  At the moment I'm only considering a\n'notional' glazing so I'm just calculating the transmissivity and editing\nthe Radiance file output from Ecotect by hand.  For typical glass types, how\nmuch difference would using the BRTDfunc definitions make to my internal\ndaylight calculations?\n\nAs far as reliability of results is concerned, It seems Radiance (in the\nhands of an expert user) is more capable of realistic results than Ecotect.\nI've noticed that Ecotect's speed of calculation is influenced quite\nsignificantly by the number of windows.  It doesn't appear to make much\ndifference to Radiance's calculation time.  I guess it's down to the\ndifferences in calculation method but it does make me wonder how well\nEcotect handles models with many windows.\n\nOn the other hand, I find Radiance doesn't seem to behave quite as expected.\nFor example, for an equal glazed area I would expect fewer, larger\nrooflights to give the same average %DF across the whole floor as more,\nsmaller rooflights.  In this case, Ecotect seems to behave as I expect, but\nRadiance suggests fewer, larger rooflights give the better average %DF.  I\nwonder why this should be.  Maybe my assumption is incorrect.\n\nNick\n\n\n---------\nJohn An\nEnvironmental Designer\nAtelier Ten\n-----Original Message-----\nSent: Friday, May 12, 2006 6:01 AM\nTo: radiance-general@radiance-online.org\nSend Radiance-general mailing list submissions to\nradiance-general@radiance-online.org\n\nTo subscribe or unsubscribe via the World Wide Web, visit\nhttp://www.radiance-online.org/mailman/listinfo/radiance-general\nor, via email, send a message with subject or body 'help' to\nradiance-general-request@radiance-online.org\n\nYou can reach the person managing the list at\nradiance-general-owner@radiance-online.org\n\nWhen replying, please edit your Subject line so it is more specific than \"Re: Contents of Radiance-general digest...\"\n\n\nToday's Topics:\n\n1. Re: water simulation (Ignacio Mun?rriz)\n2. Re: Glass & MTL file troubles... (or how to go\tfrom Revit to\nRadiance with little pain...) (Jeffrey McGrew)\n3. Re: Glass & MTL file troubles... (or how to go\tfrom Revit to\nRadiance with little pain...) (Jeffrey McGrew)\n4. Re: Glass & MTL file troubles... (or how to go\tfrom Revit to\nRadiance with little pain...) (Jeffrey McGrew)\n5. Re: Glass & MTL file troubles... (or how to go\tfrom Revit to\nRadiance with little pain...) (Lars Grobe)\n6. Re: water simulation (Gregory J. Ward)\n\n\n----------------------------------------------------------------------\n\nMessage: 1\n<radiance-general@radiance-online.org>\nContent-Type: text/plain;\tcharset=\"iso-8859-1\"\n\nThanks Greg, i think i'm near to get it, but there is something that is not working, i dont know if Rdot is the DOT product or the -DOT product, i tried the two but it is still not working, i?ve been trying to do some tests with calc and it seems to work but something must be wrong because rpict gives the aiming error, what is the best tool in radiance to test this kind of things, i say, testing cal files while sending rays\n\nvoid prism2 water\n9 transm dx dy dz reflect dxx dyy dzz water.cal\n0\n3 1 1 1\n\n####water.cal#####\nnrwater=1.3;\n\ncos1=if(Rdot,Rdot,-Rdot);\nnratio=if(Rdot,1/nrwater,nrwater);\ndnormx=if(Rdot,Nx,-Nx);\ndnormy=if(Rdot,Ny,-Ny);\ndnormz=if(Rdot,Nz,-Nz);\n\nd3=1.0-(nratio*nratio*(1.0 -(cos1*cos1))); cos2=sqrt(d3); d1bis=cos1; d2bis=nratio*cos2; d1t=(d1bis-d2bis)/(d1bis+d2bis); reflpp=d1t*d1t; d1p=1.0/cos1; d2=nratio/cos2; d1=(d1p-d2)/(d1p+d2); reflp=reflpp+(d1*d1); refl=reflp*.5; transp=1.0 -refl; trans=transp*nratio*nratio;\n\n\nreflect=if(d3,refl,1.0);\ntransm=if(d3,trans,0.0);\n\ndm=nratio*cos1 - cos2;\n\ndx=nratio*Dx+dm*dnormx;\ndy=nratio*Dy+dm*dnormy;\ndz=nratio*Dz+dm*dnormz;\n\ndxx=Dx+2.0*cos1*dnormx;\ndyy=Dy+2.0*cos1*dnormy;\ndzz=Dz+2.0*cos1*dnormz;\n\n\n\n\n----- Original Message -----\nTo: \"Radiance general discussion\" <radiance-general@radiance-online.org>\nSent: Wednesday, May 10, 2006 10:02 PM\n\nHi Ignacio,\n\nYour problem stems from the fact that your modified angles do not\nobey reciprocity, which says that if you reverse the ray (light)\ndirection, then the angles remain the same on either side.  Both\nprisma and prism2 require this property to function.  Implementing\nSnell's law correctly, you should get a working material.\n\nThe vector version of Snell's law may be found in ray/src/\ndielectric.c, or in an easier-to-read form on Wikipedia:\n\nhttp://en.wikipedia.org/wiki/Snell's_law\n\nNote that the roles of the inside and outside indices of refraction,\nn1 and n2, reverse when you come from one side of the water verses\nthe other.  The n of water is about 1.3, and air is of course 1.0.\n(OK, quibblers, air is really 1.0003)\n\n-Greg\n\n\n_______________________________________________\nRadiance-general mailing list\nRadiance-general@radiance-online.org\nhttp://www.radiance-online.org/mailman/listinfo/radiance-general\n\n\n\n\n------------------------------\n\nMessage: 2\nTo: Radiance general discussion <radiance-general@radiance-online.org>\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\n\nRob Guglielmetti wrote:\nOK, that's what I thought. I'm not using Mkillum yet, just trying to\nmake the windows into a Illum source with Skyfunc and not having much luck.\nI'll look that up. Thanks for the confirmation.\n\nI'm able to flatten the planes in Max via the 'Edit Poly' modifier.\nThankfully, all of those 6-sided polys have their Y-axis pointing the\nsame way it appears, even if tilted/turned, so I can flatten them all\nwith a single tool. However, this doesn't remove the side polys, and\nleaves you with two flat faces I suspect, so I'll have to research this\nmethod more.\nYeah, my unix god friend pointed me towards AWK as a simple solution.\nI'm just lazy, and can't write code quickly (not a programmer) so I was\nhoping that there might be a solution out there already.\nDidn't know that. Huh. Well, Revit produces very good models (other than\nthis glass thing) so I'm halfway there I guess.\n\nJeffrey\n\n\n\n------------------------------\n\nMessage: 3\nTo: Radiance general discussion <radiance-general@radiance-online.org>\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\n\nBleicher, Thomas wrote:\nThat's what we've got going, it's a building with lots of glass and\nskylights and such. So do you think just having the windows be glass\nwould be enough to get somewhat-close numbers? I fear that not making\nthe glass a secondary light source, and just having it be, well, glass\nand only having the ray of sunlight bouncing around is going to give me\nbad numbers.\nThat's what I'm doing, I can edit them in Max via the 'Edit Poly'\nmodifier, but I'll need to research this more. I want to stay away from\nhand-editing much of anything, for I want to be able to go back and edit\nthe Revit model, re-export to Max, and from there re-export to OBJ2RAD\nfor quick revisions. So far, so good on that front, but this glass thing\nis leaving me stumped.\nI saw that. I was hoping there was a way to use the .MTL file that's\nalready generated by Max. Basically, I'm just being lazy, and hoping\nthere was an existing solution out there.\nNow that doesn't sound like a bad idea! ;-)\n\n--\n\nJeffrey McGrew\n\nBecause We Can, LLC\n(415) 505-4689\nwww.becausewecan.org\n\n\n\n\n------------------------------\n\nMessage: 4\nTo: Radiance general discussion <radiance-general@radiance-online.org>\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\n\nLars Grobe wrote:\n'Nicer' is good, but I'm worried about the actual numbers. We want\nrenderings as well as falsecolor images. If we just wanted nice\nrenderings, we'd probably go to vRay, which is kind of our unofficial\nstandard for 'sexy' images. If I can get 'ok' renderings but decent\nfalsecolor images without having to edit the glass or use it as a\nlightsource I could make this whole process very, very easy.\nYeah, when I export to OBJ I'm picking the 'poly' option which seems to\nproduce polygons and rectangles. Revit produces rectangles/polys as\nwell, it doesn't render everything to triangles like some modelers. So I\nthink I'm ok there.\nYeah, just being lazy, and hoping for an easy solution.\n\nWhat would be the best is to use the new Revit API to write an Radiance exporter, and skip Max altogether. However, this is beyond my abilities and available time currently (and sadly).\n\nJeffrey McGrew\n\nBecause We Can, LLC\n(415) 505-4689\nwww.becausewecan.org\n\n\n\n\n------------------------------\n\nMessage: 5\nTo: Radiance general discussion <radiance-general@radiance-online.org>\nContent-Type: text/plain; charset=\"us-ascii\"\n\nHi!\n\n\nI think you are worried too much here. The numbers should not change so much\nbecause of mkillum, the image will look nicer in many cases. But the main\nreason for mkillum is the following.\n\nIf you have a model where most of the indirect light enters the room through\nsmall windows, the probability that the (random) indirect rays, which are\nsend from the surface to several (random) directions to find out its\nindirect contribution hits the (small) light source is getting low. You can\nincrease the number of random rays, but that won't help sometimes and takes\na lot of rendering time. So, in these cases, it is better to bring the light\nsource closer. Bt as it sounds to me, your model is not the typical case\nwith shading devices etc, right? So, if you have simple, large windows, at\nleast your numbers should be fine.\n\nLars.\n\n\n\n------------------------------\n\nMessage: 6\nContent-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed\n\nHi Ignacio,\n\nRegrettably, I don't have time to debug your function file at the\nmoment.  You can try using the debugcal script that comes with\nRadiance, giving it ray origins and directions on the standard input\nor using ximage:\n\nximage test.pic | debugcal test.oct -f water.cal -e '$1=dx;$2=dy;\n$3=dz;$4=dxx;$5=dyy;$6=dzz'\n\nThis script assigns the standard variables from rayinit.cal so you\ncan find out what is happening.\n\nTo answer  your first question, the Rdot variable is the negative dot\nproduct, meaning that it is positive when a ray strikes the front of\na surface material, and negative when it strikes the back side of the\nsurface.\n\nHope this helps.\n-Greg\n\n\n\n\n------------------------------\n\n_______________________________________________\nRadiance-general mailing list\nRadiance-general@radiance-online.org\nhttp://www.radiance-online.org/mailman/listinfo/radiance-general\n\n\nEnd of Radiance-general Digest, Vol 27, Issue 9\n***********************************************\n\n", "replyTo": "", "sender": "gregoryjward@gmail.com", "isquestion": true, "tags": [], "id": "<7EC041C2-8F0F-4B87-915C-6D83E5A90A7F@gmail.com>", "refs": [], "datetime": "Thu, 11 May 2006 10:30:01 -0700", "email": "\"Gregory J. Ward\"", "subject": "Re: [Radiance-general] water simulationTo: Radiance general discussion <radiance-general@radiance-online.org>"}