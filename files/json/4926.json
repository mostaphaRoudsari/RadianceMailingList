{"refs": ["<20091015201321.GD3622@localhost>", "<C6FCDFEB.EAB%robert.guglielmetti@nrel.gov>"], "id": "<89355c0f0910160201j3d289b8ev780f8ab612a6a1a9@mail.gmail.com>", "subject": "[Radiance-general] running rtrace in parallel?", "email": "tbleicher at googlemail.com", "body": "\nHi Ery.\n\nOn Thu, Oct 15, 2009 at 9:19 PM, Guglielmetti, Robert\n<Robert.Guglielmetti@nrel.gov> wrote:\n\nJust did the very same thing yesterday. On Unix \"split\" and \"cat\" will\nchop the file for you and reassemble it in the right order.\n\nThis is the script I used (with a few untested improvements):\n\n#!/bin/bash\n\n## optional: create your octree here\noconv -w sky.rad scene.rad > scene.oct\n\n## scene.pts is the file with all the grid points\nlines=`wc -l scene.pts | awk '{print $1}'`\n## we have 8 CPUs and don't care about responsiveness of the system\nlines_per_file=`echo \"($lines / 8)+1\" | bc`\nmkdir -p parts\nrm -f parts/*\nmkdir -p parts_out\nrm -f parts_out/*\nsplit -l ${lines_per_file} scene.pts parts/part_\n\nOPTS=\"-ab 6 -aa .1 -ar 2048 -ad 4096 -as 256 -av 0 0 0\"\n\nfor pts in `find parts -type f`\ndo\necho \"starting '${pts}' ...\"\n## obviously you can add rcalc to the command if you want\ncat ${pts} | rtrace -I -w -h $OPTS  scene.oct > parts_out/${pts}.dat &\ndone\nwait\n\n## compile everything to one file\ncat parts_out/*.dat > scene.dat\n\n## end of script\n\n\nRegards,\nThomas\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] running rtrace in parallel?", "tags": [], "sender": "Thomas Bleicher", "datetime": "Fri Oct 16 02:09:22 2009"}