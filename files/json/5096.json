{"refs": ["<957699.45447.qm@web26605.mail.ukl.yahoo.com>", "<89355c0f1001120255x2fdb6e38mafbba1443c49fe4f@mail.gmail.com>"], "id": "<4B4E8C8A.6090509@gmx.net>", "subject": "[Radiance-general] Removing black areas in imagemapping", "email": "grobe at gmx.net", "body": "\nHi!\n\nI'd use pcomb:\n\npcomb -e 't=0.05; c=(.265074126*ri(1) + .670114631*gi(1) +\n.064811243*bi(1))-t; ro=if( c, ri(1), 0); go=if( c, gi(1), 0); bo=if( c,\nbi(1), 0);' -o image.hdr | ximage\n\nIn this example, t is the treshold (you have to adjust this) and\nimage.hdr is the input. c is the condition, if the grey value of a pixel\nis > t, the input pixel is written, else rgb(0,0,0). There are even\nslightly simpler ways to do it, still pcomb -e is the generic way for me\nto calculate on images.\n\nCheers, Lars.\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Removing black areas in imagemapping", "tags": [], "sender": "Lars O. Grobe", "datetime": "Wed Jan 13 19:16:35 2010"}