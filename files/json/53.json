{"refs": [], "id": "", "subject": "[Radiance-general] panotools to map textures, patterns etc?References: <3BF98BCF.B22D897F@gmx.net>", "email": "adiance-general@radiance-online.org", "body": "Message-ID: <3BF9F851.CCC6632F@pab-opto.de>\n\n--------------A522AABA7AADAA10EF38208A\nContent-Type: text/plain; charset=us-ascii\nContent-Transfer-Encoding: 7bit\n\n\"Lars O. Grobe\" wrote:\n\n\nHi Lars,\n\ndon't know panaotools, but wouldn't think its feasible. The mapping  glues\nworld coordinates\n(the xyz-coordinates your cylinder is defined in) to texture coordinates\n(the pixel number in your image),\nso it's somewhat 'outside' the image itself.\n\n--math-on--\nwith a second one\nimplicitly defined in 'warping' the image, but that fails (mathematically)\nat singular points in\nthe transformation. E.g. the mapping of a texture onto a polygon is just\ntoo different from mapping\non a sphere.\n--math-off--\n\nHowever, it's disappointing for casual users that Radiance hasn't got\ndefault mappings for geometric\nprimitives (GUI builders- any comments ?).\n\nFor cylinders, I once used:\n\nmerkur $ more picture_cyl.cal\n{\nCalculation of 2d picture coordinates for cylinders.\nA1, A2  are coordinates of cylinder, which extends along\nz-axis\nA3 is radius\nA4 is pic_ascpect\nA5 is scaling\n}\n\npic_aspect=A4;\npic_u = A3*atan2(Px-A1,Py-A2)/A5;\npic_v = Pz / A5;\n\ntile_u = mod(pic_u,max(1,1/pic_aspect));\ntile_v = mod(pic_v,max(1,pic_aspect));\n\nWhich worked for a brick cylinder wall.\n\nhope that helps\ncheers\nPeter\n\n--\npab-opto, Freiburg, Germany, www.pab-opto.de\n\n\n\n--------------A522AABA7AADAA10EF38208A\nContent-Type: text/html; charset=us-ascii\nContent-Transfer-Encoding: 7bit\n\n<!doctype html public \"-//w3c//dtd html 4.0 transitional//en\">\n<html>\n\"Lars O. Grobe\" wrote:\n<blockquote TYPE=CITE>Hi!\n<p>For me (as I am a student of architecture and not of mathematics) it's\n<br>very difficult to understand how to map onto non-planar objects. E.g.\nif\n<br>I want to map onto a cylinder, I know that there is a cal-file, but\nI\n<br>don't really understand this. Now, maybe I should try, but I just found\n<br>a set of tools called panotools (www.panotools.org), which is able\nto\n<br>convert bitmap-files from different projections. Would it be possible\nto\n<br>use it to create imagefiles that could be mapped onto e.g. a radiance\n<br>cylinder without any further calculations, just like mapping iot onto\na\n<br>plane? I would really like to have pic-files that don't need any further\n<br>calculations.\n<p>So, maybe someone tried something like this before? Or am I completely\n<br>wrong with this?\n<p>Thank You, CU, Lars.\n<br>_______________________________________________\n<br>Radiance-general mailing list\n<br>Radiance-general@radiance-online.org\n<br><a href=\"http://www.radiance-online.org/mailman/listinfo/radiance-general\">http://www.radiance-online.org/mailman/listinfo/radiance-general</a></blockquote>\nHi Lars,\n<p>don't know panaotools, but wouldn't think its feasible. The mapping&nbsp;\nglues&nbsp; world coordinates\n<br>(the xyz-coordinates your cylinder is defined in) to texture coordinates\n(the pixel number in your image),\n<br>so it's somewhat 'outside' the image itself.\n<p>--math-on--\n<br>From a math point of view this transformation could be one general\none, with a second one\n<br>implicitly defined in 'warping' the image, but that fails (mathematically)\nat singular points in\n<br>the transformation. E.g. the mapping of a texture onto a polygon is\njust too different from mapping\n<br>on a sphere.\n<br>&nbsp;--math-off--\n<p>However, it's disappointing for casual users that Radiance hasn't got\ndefault mappings for geometric\n<br>primitives (GUI builders- any comments ?).\n<p>For cylinders, I once used:\n<blockquote>merkur $ more picture_cyl.cal\n<br>{\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Calculation of 2d picture\ncoordinates for cylinders.\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A1, A2&nbsp; are coordinates\nof cylinder, which extends along z-axis\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A3 is radius\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A4 is pic_ascpect\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A5 is scaling\n<br>}\n<p>pic_aspect=A4;\n<br>pic_u = A3*atan2(Px-A1,Py-A2)/A5;\n<br>pic_v = Pz / A5;\n<p>tile_u = mod(pic_u,max(1,1/pic_aspect));\n<br>tile_v = mod(pic_v,max(1,pic_aspect));</blockquote>\nWhich worked for a brick cylinder wall.\n<p>hope that helps\n<br>cheers\n<br>Peter\n<pre>--&nbsp;\n&nbsp;pab-opto, Freiburg, Germany, www.pab-opto.de</pre>\n&nbsp;</html>\n\n--------------A522AABA7AADAA10EF38208A--\n\n\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "Peter Apian-Bennewitz", "datetime": "Tue, 20 Nov 2001 07:29:37 +0100"}