{"refs": ["<1BA2D45C-215E-4900-B63D-285A412ACDA3@gmail.com>\t<B564F6CD0114A44E816C0D68AE8C6E69062A25B6@MKEXCHVS2.Mail.Fiserv.net>\t<hnu61h$ssl$1@dough.gmane.org>\t<B564F6CD0114A44E816C0D68AE8C6E690B95E96B@MKEXCHVS2.Mail.Fiserv.net>\t<89355c0f1003181532j5a85ec2fx8bd9b2485a981aaf@mail.gmail.com>", "<4BB0EC7B.70001@visarc.com> <4BB21967.7020506@visarc.com>", "<087614E0-B3DE-4873-B157-A2E9F515F6F9@coolshadow.com>"], "id": "<D857E143-9E69-49EE-835E-F6D2A5E934D9@coolshadow.com>", "subject": "[Radiance-general] Calculating pixel value at a specific locationin an image", "email": "chris at coolshadow.com", "body": "\nMy apologies for not being more specific when posting earlier.   I\nalso just realized that I missed a similar post in the archives from\nMay 2008.  However, the latter posts don't quite answer the question\nat hand.\n\nI have a series of images produced from a script in which the previous\nimage octree is over written prior to the proceeding rpict call.\nGiven the latter condition, I don't think  vwrays connected to rtrace\nwill work as I don't have the corresponding 'octree' file.\nI suppose I could write a Python Script to parse the pixel location\nand its associated value, but that seems a bit over kill for what\nseems should be a straight forward, one line task.\n\n\n\nThanks again.\nChris\n\n\nOn Apr 5, 2010, at 2:53 PM, Chris Humann wrote:\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: http://radiance-online.org/pipermail/radiance-general/attachments/20100405/0617813b/attachment-0001.html\n", "isquestion": false, "replyTo": "<087614E0-B3DE-4873-B157-A2E9F515F6F9@coolshadow.com>", "tags": [], "sender": "Chris Humann", "datetime": "Mon Apr  5 15:35:52 2010"}