{"refs": ["<4BEB1CDE.5030801@transsolar.com>"], "id": "<4BEB59E6.7030300@gmx.net>", "subject": "[Radiance-general] setting RAYPATH (was: Upgrading to R4: \"Therwere some\terrors.\")", "email": "grobe at gmx.net", "body": "\nHi!\n\nCramer Silkworth wrote:\nThis is required ONLY for those not using an installer or package\nmanager. Typically these are developers or advanced Radiance users who\ndo not need this advice. I however add this to complete the thread on\ninstalling Radiance.\n\nThe RAYPATH variable contains directories that are searched by Radiance\nat runtime for all scene-related files. This can be geometry, octrees,\nprocedural cal-files, textures,... It is NOT used to search for binaries\n- the system's standard PATH variable is used for that.\n\n1) To do anything useful with Radiance, one should have the directory\ncontaining the cal-files coming with Radiance included in RAYPATH. This\nis the lib-directory in the installation target - the default makeall\nscript would probably use /usr/local/ray/lib (you are asked for the\nlibrary location when running makeall). So this is the first.\n\n2) Many of us will maintain their own library for textures, cal-files,\noctrees to be used as instances. This one should be the second directory\nincluded, say, /usr/share/radiance/objlib\n\n3) There may be a directory containing a similar library, but only for\nuse with one project. This may be a subdirectory of the project, say,\n/home/cramer/project/theater1/lib\n\n4) Many of us like to have the current directory in their RAYPATH as a\ndefault. May lead to messing up the system, but is comfortable while\ndeveloping e.g. a cal-file that is not ready to go into the library yet.\n\nSo - the RAYPATH should always include 1, 2, and 4, but 3 on a\nper-project base. If you are using the Bash as a shell (probably you do\non Linux), add the RAYPATH to your Bash-configuration in your home\ndirectory:\n--\ncd\ngedit ,bashrc\n--\n(if you do not want the Gnome-GUI use nano instead of gedit) and add the\nfollowing line to the end\n--\nexport RAYPATH=$RAYPATH:/usr/local/ray/lib:/usr/share/radiance/objlib:.\n--\nThis APPENDS the directories to the RAYPATH instead of overwriting it.\n\nFor point 3, you can just include it before starting a simulation by typing\n--\nexport RAYPATH=$RAYPATH:/home/cramer/project/theater1/lib\n--\nat the command line before starting a simulation, or you add it to the\nbeginning of a small script that you may use for calling the necessary\ncommands for your simulation.\n\nI hope this helps. It should at least explain why you found many\ndifferent RAYPATH-setting in the archives - it really depends on where\npeople keep their stuff.\n\nCheers,\n\nLars.\n\n", "isquestion": false, "replyTo": "<4BEB1CDE.5030801@transsolar.com>", "tags": [], "sender": "Lars O. Grobe", "datetime": "Wed May 12 18:46:22 2010"}