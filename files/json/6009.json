{"refs": ["<AANLkTimwYfk4rFE6p+xsKgkX8kv1s_rKVHp0R3+k0JwW@mail.gmail.com>"], "id": "<3B90B2EB-B6D4-4856-85A1-8867358695F8@lmi.net>", "subject": "[Radiance-general] Python Radiance Packag", "email": "gregoryjward at gmail.com", "body": "\nHi Dave,\n\nThis is an interesting idea.  I'm not very familiar with Python, so I'm going to ask some naive questions:\n\n1) Can't you just invoke a system command line from Python?  Is this how you would implement these methods?\n\n2) What are the advantages of encapsulating Radiance tools in this way?  Who do you expect will benefit?\n\nIt seems like you're just trading one syntax (the Unix command line) for another (Python objects and methods).  This can be worthwhile if the syntax is easier to use or leverages capabilities of the language in new ways.  Do you have an actual problem in mind that you think is best solved this way?  Your example gives a flavor of what you could do, but you're not really doing anything here you couldn't do by shelling out commands and stowing the results in files instead of variables.\n\nCan you share a little more of your broader vision?  Are these just hooks for applications like Blender, or are they somehow better than the commands themselves?  Do you plan to store entire images in memory, or does Python manage variables with megabytes of data in them efficiently?\n\nCheers,\n-Greg\n\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Python Radiance Packag", "tags": [], "sender": "Greg Ward", "datetime": "Sat Nov  6 12:50:39 2010"}