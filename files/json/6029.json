{"refs": ["<loom.20101112T043555-489@post.gmane.org>"], "id": "<AANLkTinidDTgdPj8hLhM3FyFEp6E7T12TuJ-fiRZFzLU@mail.gmail.com>", "subject": "[Radiance-general] Just discovered", "email": "tbleicher at googlemail.com", "body": "\nHello, John.\n\nOn Thu, Nov 11, 2010 at 10:49 PM, John <john.sullivan.cl@gmail.com> wrote:\n\nWelcome.\n\n\nDon't worry, it wouldn't be the first time ...\n\n\nLinking an application to Radiance (for control or geometry input) is\nin general a three step process:\n\n1) export the scene geometry to Radiance (write text files)\n2) control the steps necessary for the Radiance calculations (execute\nsystem commands)\n3) import the results back into your application (read text or binary files)\n\nI expect that most advanced modelling or scientific applications\nhave scripting capabilities that allow you to do these three tasks.\n\n\nOthers have already written about Matlab.\n\nFor Rhino you can have a look at DIVA-for-Rhino (www.diva-for-rhino.com)\nwhich does at least the export and control bits. I think it's focused on\nDaysim but that's more or less tailored version of Radiance\n\nAutocad has a number of scripting options. I think VBA should\nallow you to script all the necessary steps. You may have a\nproblem with the export because Autocad does not always allow\naccess to polygone data that's necessary for Radiance. I am not\naware of a current project or product that exports from Autocad\nto Radiance.\n\nThere are also a number of 3D modellers for which Radiance\nexport tools are available. Some (like Blender) are open source\nso you can get all of the source code and modify it as required.\n\nLet us know about your progress.\n\nRegards,\nThomas\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Just discovered", "tags": [], "sender": "Thomas Bleicher", "datetime": "Fri Nov 12 06:23:07 2010"}