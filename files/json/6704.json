{"body": "\nThank you for your reply greg !\n\nActually I think mixfunc wouldn't fit my needs.\n\nI try to explain what I would like to obtain from another perspective.\n\nI would like to use a specular material representing asphalt (not mirror-like specular material). This will be obtained by trial and errors with metal primitives, using the closer rapresentation, if possible. It will lead surely to a certain error in representation, then, to minimize it, as i will have photometrics values and then BRDF definitions, I would like to use BRDF too.\n\nIf I am right, right now, BRDF can just be considered lambertian for the indirect calculation. I would like than to force Radiance to consider them specular (defining specular values by hand).\n\n\nIs it possible? Is it hard? ANy suggestion for a different approach?\n\nAs about using mixfunc, if understood it right, the problem would be that direct calculation would be performed on both brdf and specular, leading me to a quite correct result (due to brdf), but influenced form the specular_bit.\n\nAs about the indirect calculation it would be influenced by specular (which is ok) but also from lambertian (indirect calculation of brdf).\n\nAm I wrong?\n\nLucio\n\n\n.Hi Lucio,\n.\n.> I know that I could run two simulations and then combine the\n.> results, but it would be much cleaner to be able to use a new kind\n.> of primitive able to use BRDF for direct light and a specular\n.> material for indirect light. Is it possible to develop such\n.> primitive? I'm not very skilled about programming , but I can\n.> always learn and help in developing such primitive, if you like. I\n.> guess that such kind of primitives could be handy even for other\n.> applications. What do you think about it?\n.\n.Do you want the specular part to be 'pure' -- that is, mirror-like?\n.If so, this can be achieved easily enough by specifying a mixfunc\n.with a fixed parameter, e.g.:\n.\n.void metal specular_bit\n.0\n.0\n.5 0.1 0.1 0.1 1 0\n.\n.void plasdata brdf_data\n.{your arguments here}\n.\n.void mixfunc asphalt\n.4 specular_bit brdf_data 0.5 .\n.0\n.0\n.\n.Since we are mixing half of each, you need to double each component\n.(the specular_bit and the brdf_data), but otherwise this should work.\n.\n.If, on the other hand, you want a specular component with a soft\n.lobe, it gets a little trickier.  Essentially, you want to modify\n.your BRDF data such that the Gaussian model you are using for the\n.specular_bit is taken out.  The basic principle still applies, however.\n.\n.I hope this makes sense.\n.-Greg\n.\n._______________________________________________\n.Radiance-general mailing list\n.Radiance-general@radiance-online.org\n.http://www.radiance-online.org/mailman/listinfo/radiance-general\n.\n\n.. Caminante no hay\ncamino, solo se hace\ncamino al andar ..\n\n\n---   o\nmeglio   ---\n\n.. Caminante el\ndestino no es al\nfinal de el viaje,\npero en todo el\nandar ..\n\n\n", "replyTo": "", "sender": "loscotec@libero.it", "isquestion": true, "tags": [], "id": "<K1MRHU$86E2557D83E74F62842B432665C0C8D7@libero.it>", "refs": [], "datetime": "Thu May 29 05:46:49 2008", "email": "loscotec at libero.it", "subject": "[Radiance-general] Specular instead of lambertian for indirect"}