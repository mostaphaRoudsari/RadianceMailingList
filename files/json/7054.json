{"refs": ["<iv5g21$jnc$1@dough.gmane.org>", "<4188C437-AE0A-48A6-A4C2-22D1AB992CEA@lmi.net>", "<iv5lit$hkp$1@dough.gmane.org> <jlvdb5$ljf$1@dough.gmane.org>", "<4F834A8B.7020704@visarc.com>", "<B7A9CAA2-4DFB-48A2-B0A9-5D811124465C@lmi.net>", "<jm34ov$1n4$1@dough.gmane.org> <4F857F22.1010403@visarc.com>"], "id": "<995E2963-96E2-48C4-BC7E-C89FD5EF32B7@lbl.gov>", "subject": "[Radiance-general] \"Broken pipe\" message from rpiece onmulti-core Linux system", "email": "amcneil at lbl.gov", "body": "\nHi Randolph,\n\nFor what it's worth I don't use rpiece when I render on the cluster.  I have a script that takes divides takes a view file, tile number and number of rows an columns and will render the assigned tile number (run_render.csh).   In the job submit script I distribute these tile rendering tasks to multiple cores on multiple nodes.  I can't use the ambient cache with this method, but i typically use rtcontrib so I would be able to use it regardless.  There is also the problem that some processors sit idle after they've finished their tile while other processes are running, but I don't worry about it because computing time on lawrencium is cheap and available.\n\nSnippets from my scripts are below.\n\nAndy\n\n\n\n### job_submitt.bsh #####\n\n#!/bin/bash\n#    specify the queue: lr_debug, lr_batch\n#PBS -q lr_batch\n#PBS -A ac_rad71t\n#PBS -l nodes=16:ppn=8:lr1\n#PBS -l walltime=24:00:00\n#PBS -m be\n#PBS -M amcneil at lbl.gov\n#PBS -e run_v4a.err\n#PBS -o run_v4a.out\n\n#   change to working directory & run the program\ncd ~/models/wwr60\n\nfor i in {0..127}; do\npbsdsh -n $i $PBS_O_WORKDIR/run_render.csh views/v4a.vf $(printf \"%03d\" $i) 8 16 &\ndone\n\nwait\n\n\n\n\n### run_render.csh ######\n#! /bin/csh\n\ncd $PBS_O_WORKDIR\nset path=($path ~/applications/Radiance/bin/ )\n\nset oxres = 512\nset oyres = 512\n\nset view = $argv[1]\nset thispiece = $argv[2]\nset numcols = $argv[3]\nset numrows = $argv[4]\nset numpieces = `ev \"$numcols * $numrows\"`\n\nset pxres = `vwrays -vf $view -x $oxres -y $oyres -d | awk '{print int($2/'$numcols'+.5)}'`\nset pyres = `vwrays -vf $view -x $oxres -y $oyres -d | awk '{print int($4/'$numrows'+.5)}'`\n\nset vtype = `awk '{for(i=1;i<NF;i++) if(match($i,\"-vt\")==1) split($i,vt,\"\")} END { print vt[4] }' $view`\nset vshift = `ev \"$thispiece - $numcols * floor( $thispiece / $numcols) - $numcols / 2 + .5\"`\nset vlift = `ev \"floor( $thispiece / $numcols ) - $numrows / 2 + .5\"`\n\nif ($vtype == \"v\") then\nset vhoriz = `awk 'BEGIN{PI=3.14159265} \\\n{for(i=1;i<NF;i++) if($i==\"-vh\") vh=$(i+1)*PI/180 } \\\nEND{print atan2(sin(vh/2)/'$numcols',cos(vh/2))*180/PI*2}' $view`\nset vvert = `awk 'BEGIN{PI=3.14159265} \\\n{for(i=1;i<NF;i++) if($i==\"-vv\") vv=$(i+1)*PI/180 } \\\nEND{print atan2(sin(vv/2)/'$numrows',cos(vv/2))*180/PI*2}' $view`\nendif\n\nvwrays -ff -vf $view -vv $vvert -vh $vhoriz -vs $vshift -vl $vlift -x $pxres -y $pyres \\\n| rtcontrib -n 1 `vwrays -vf $view -vv $vvert -vh $vhoriz -vs $vshift -vl $vlift -x $pxres -y $pyres -d` \\\n-ffc -fo \\\n-o binpics/wwr60/${view:t:r}/${view:t:r}_wwr60_%s_%04d_${thispiece}.hdr \\\n-f klems_horiz.cal -bn Nkbins \\\n-b 'kbin(0,1,0,0,0,1)' -m GlDay -b 'kbin(0,1,0,0,0,1)' -m GlView \\\n-w -ab 6 -ad 6000 -lw 1e-7 -ds .07 -dc 1 oct/vmx.oct\n\n\n\n\n\n\n\nOn Apr 11, 2012, at 5:54 AM, Jack de Valpine wrote:\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://www.radiance-online.org/pipermail/radiance-general/attachments/20120411/b4efa6aa/attachment-0001.html>\n\n", "isquestion": false, "replyTo": "<4F857F22.1010403@visarc.com>", "tags": [], "sender": "Andy McNeil", "datetime": "Wed, 11 Apr 2012 10:04:57 -0700"}