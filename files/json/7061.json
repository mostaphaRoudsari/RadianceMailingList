{"refs": ["<4F7B82E0.2070206@gmail.com>", "<81CEA7EA-0D5B-489B-BEAB-2652E4803395@iebele.nl>", "<0602B923-AD59-4806-AD2D-48AFDA0843EB@iebele.nl>", "<jmhecj$a15$1@dough.gmane.org>"], "id": "<4F8C40CD.4090507@visarc.com>", "subject": "[Radiance-general] Optimizing Radiance for cluster rendering", "email": "jedev at visarc.com", "body": "\nHi,\n\nI think that binaries should be centrally located. It is not that big a\nproblem to load over a network for this.\n\nLikewise I think that scene files (octrees, etc) should be centrally\nlocated. It is just easier to manage.\n\nI think a main problem is each process/node/core writing back image\ndata. This can really slow things down on the nfs server if image pieces\nare being written back into one image. I think that it is better to have\neach process write out its output to its own file, which can be on the\nnfs server, and then assemble the pieces as a post process. Ambient\ncache data can still be shared and written to by multiple processes\nalthough I would recommend using one process to pre-populate the cache\ninitially. And if as Andy mentions you are using something like\nrtcontrib then the shared ambient cache is a non-issue.\n\nAs far as compiler optimizations. While this could be nice, I think the\nreal benefit is spreading things out over the cluster... that is\nhopefully where you get more opportunity to speed things up as opposed\nto some incremental increase due to compiler optimization.\n\n-Jack\n\n--\n# Jack de Valpine\n# president\n#\n# visarc incorporated\n# http://www.visarc.com\n#\n# channeling technology for superior design and construction\n\n\nOn 4/16/2012 11:37 AM, Randolph M. Fritz wrote:\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Optimizing Radiance for cluster rendering", "tags": [], "sender": "Jack de Valpine", "datetime": "Mon, 16 Apr 2012 11:54:53 -0400"}