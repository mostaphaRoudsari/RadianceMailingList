{"refs": ["<6B5CAC3E-CEBB-11D8-B526-000A959DDB22@gmx.net>"], "id": "<40EA691C.5050708@pab-opto.de>", "subject": "[Radiance-general] Instances + octrees", "email": "apian at pab-opto.de", "body": "\nLars O. Grobe wrote:\n\n\nsaving Greg the answer: You're exactly right. non-cubic objects (thin\nrods etc.) generate cubic octrees, which do overlap, whereas the\ngeometry does not. The final oconv than tries very hard to seperate the\nsmall octree cubes again, which it can't if there are more overlapping\nthings (small octrees in this case) at any point in space then allowed\nby the -n option. Either allow more objects per (final, large) octree by\nincreasing -n at the fnal oconv run (which may slow down the raytracer),\ngo back to 'xform' without small octrees or pay Greg to rewrite the code\nso that the sides of octree-cubicles may have different length.\n\n\nnot to my knowledge, although R3.5 is pretty buggy in other respects\ncompared with the current release\n\n_Peter\n\n--\npab-opto, Freiburg, Germany, http://www.pab-opto.de\n[see web page to check digital email signature]\n\n\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Instances + octrees", "tags": [], "sender": "Peter Apian-Bennewitz", "datetime": "Tue Jul  6 10:56:26 2004"}