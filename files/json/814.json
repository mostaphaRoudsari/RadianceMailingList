{"refs": ["<9B1C5BAE-D0EB-11D8-BA46-000A959DDB22@gmx.net>"], "id": "<Pine.BSF.4.58.0407090815290.58240@emancholl.pair.com>", "subject": "[Radiance-general] Radiance Mac GUI?", "email": "schorsch at schorsch.com", "body": "\nLars O. Grobe wrote:\n\n\nMost existing projects have one or several disadvantages:\n- platform specific\n- limited scope of functionality\n- obsolete technology (eg. tcl)\n- not available for free\n\n\n\nObviously, various people may have different goals.\n\nMy own goal in this context is very simple: Have a cross-platform\nreplacement for rview/rholo/ximage. Whether that's one single\napplication or several is irrelevant (and trivial to have both\nways when the frontend is implemented in Python).\n\nOnce the basic functionality is in place, the \"nice to have\"\nfeatures like realtime preview with textures and camera paths for\nrview can be added.\n\n\n\nWrite once, debug everywhere?\n\nOpinions vary about this, but I can't see any advantages of Java\nover Python. Java is much harder to write and uses a lot more\nmemory for the same tasks. And while the Java bytecode is in\ntheory portable like with Python, the Java VMs come in many\nsubtly incompatible varieties, each with its own bugs that need\nto be taken into account. The good ones are usually also closed\nsource, so that you can't compile them yourself on less popular\nplatforms.\n\n\n\nGraphics should be done with OpenGL in either case. Or maybe with\na higher level toolkit like VTK, which again uses OpenGL.\n\nAgain, if anyone wants to seriously look into those things, the\ndetails will be more appropriately discussed on the dev-list.\n\n\n-schorsch\n\n--\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n\n", "isquestion": false, "replyTo": "Subject: [Radiance-general] Radiance Mac GUI?", "tags": [], "sender": "Georg Mischler", "datetime": "Fri Jul  9 14:18:45 2004"}