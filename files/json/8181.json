{"body": "\nHi Ignacio,\n\nThis thread probably belongs on the development group, where I'm\ncross-posting.  Please respond from that list.\n\nThere is no call to explicitly kill child processes in raypcalls, but\nyou could add one.  It would also be possible to modify the ray_pclose\n() call to explicitly kill its children rather than waiting for them\nto return after end-of-input.  We wouldn't be able to report status,\nbut it would be unusual (and probably irrelevant) for an error to\noccur during process termination, anyway.\n\nIn a command-line program, using Control-C normally kills all\nprocesses in a group, and so would lead to early termination for\nchildren without the wait.  In the latest version of rvu, rather than\nkilling the child processes when the user begins input, I take their\ninput while the children crank away in the background, then process\nthe user command after waiting for the remaining rays.  Normally, the\ndelay is not noticeable with this approach.\n\nBest,\n-Greg\n\n\n", "replyTo": "Subject: [Radiance-general] raypcalls", "sender": "Greg Ward", "isquestion": false, "tags": [], "id": "<15580FD2-0A9E-41D7-BFBB-3C326C7460A3@lmi.net>", "refs": ["<498BE4F6.70600@nus.edu.sg>", "<20090206.13521400.53308121@gyor.oxdrove.co.uk>", "<498C542E.9040102@aisarquitectura.com>"], "datetime": "Fri Feb  6 08:56:54 2009", "email": "gregoryjward at gmail.com", "subject": "[Radiance-general] raypcalls"}