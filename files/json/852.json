{"refs": [], "id": "", "subject": "[Radiance-general] radzilla againReferences: <DC0CAEEA090E984C911D3B85B16C3F90FAF6FB@l-gnts05>", "email": "cbauer- at t-online.de", "body": "Message-ID: <41014C49.9090805@t-online.de>\n\nHi,\n\nsome words on the speed issue:\n\nGiulios observation is right in principle, currently radzilla is slower\nthan Radiance-HEAD. I have done some checks, too, not very much, though.\nIf I didn't use special radzilla features I observed factors somewhat\nbetween 1.3 and 2 so far, interestingly, the more comprehensive the\nscene, the lesser was the noticed slowdown.\n\nthere is one main explanation for it:\nI noted this in the introduction, I haven't yet implemented the\n'obstructor cache', which is present in the current Radiance-HEAD and\ncan in principle -if I still remember Gregs announcing mail right -\nspeed up rendering up to roughly a factor of 2.\n\nI want to rewrite the direct cache which is !! NOT !! yet present in\nradzilla, I might implement both, Gregs obstructor cache and the (not\n100% scientifically exact, but yet quicker) direct cache, and allow\nswitching  by a compile time flag or so. Will be coming soon ..\n\nGenerally, everything depends a lot on the scene itself, and especially\nfor complex scenes this still missing point can already now be\noutweighed by the other features.\n\nThere are of course other points which affect the rendering time,\nalthough on a much lesser scale (i.e the use of pure MonteCarlo random\nnumbers instead of the QuasiMC ones, or the C++ vs. C issue)\n\nNow that the stuff is out this all can be checked and then of course\nlead to further optimization (hopefully :-) ..)\n\n-Carsten\n\n\n\n\n\n\n", "isquestion": true, "replyTo": "", "tags": [], "sender": "Carsten Bauer", "datetime": "Fri Jul 23 18:26:50 2004"}