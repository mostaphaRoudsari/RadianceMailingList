{"body": "markku.norvasuo@vtt.fi wrote:\n\n\n> \n> I have used .cal functions based on cos(theta) of the incoming (eye) ray.\n> For this purpose, there is a special variable available, Rdot, which is the\n> dot product of the eye ray and the surface normal and hence should be equal\n> to cos(theta), if I have understood correctly. I have also supposed\n> Radiance always flips the normal\n\n\n... if I recall it right:\ndielectric, interface, BRTDfunc, glow and mixfunc don't re-orient\nsurfaces and Rdot[-1:1]\ncolorfunc, brightfunc, transfunc (+ their ~data equivalents), trans,\nplastic(2), metal(2), glass do flip surface normals and so Rdot[0:1] .\n\n\n-Peter\n\n\n pab-opto, Freiburg, Germany, www.pab-opto.de\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2002-May/000226.html).</sup>", "attachments": [], "created_by_name": "Peter Apian-Bennewitz", "created_at": "May 03, 2002 at 06:09PM", "created_by": "Peter_Apian-Bennewitz", "parent_id": "radiance-general_000227", "id": "radiance-general_000226"}