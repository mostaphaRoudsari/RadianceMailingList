{"body": "Georg Mischler wrote:\n> \n> Rob Guglielmetti wrote:\n> \n\n\n> >   It would be great if\n> > there was a way to substitute autocad blocks for\n> > instanced rad files!  One could export the blocks as\n> > separate rad files, but is there a way to take a series of\n> > insertion point coordinates and build a rad file that\n> > instances the \"block\" rad file at those\n> > coords/orientations?\n> \n> In theory, this sounds easy. In practise, it would open a\n> pandora's box of consistency problems, not to mention the\n> questions about how to assign materials to subentities within\n> such blocks that are placed on different layers. I have been\n> pondering those issues for years, and haven't come up with a\n> practical solution yet.\n> \n> I think there was some talking about doing this for Desktop\n> Radiance, but I have no idea if they actually got around to\n> implement anything of the kind. Since DR never looks back at the\n> Radiance data it has written, but simply overwrites it when you\n> change anything within Autocad, it can avoid many (but not all)\n> of the consistency questions.\n> \n> If you're feeling adventurous and know some Autolisp, then you\n> could try to hack my old torad.lsp translator. If you manage to\n> come up with a fool proof solution, then I'll immediately\n> integrate it into Radout.\n> \nHi all,\n\n\nI also spent some time on tests on the export of blocks from AutoCAD to\ninstances in Radiance.\nAt least it's working in a more or less rough manner (even with nested\nblocks).\nBeside the consistency problems Georg already mentioned, problems arose\nconcerning the paths\n(to texture files or IES-data) and the shape of the octree hierarchy.\nEspecially thin long Objects, like railings, or flat Objects, like\nleafs, produce the biggest problems.\nI had to reorganize the blocks to get the expected savings in memory and\nfile sizes (which could be enormous, of course).\nIn other words - I must create the geometry in terms Radiance likes it\nmost - which isn't always the most efficient way to build 3D-Modells.\nAs I understood, the octree is based on cubes. Looking at a leaf\nparallel to the xy-plane inside a cube, there is a lot of 'emptiness'\ninside this cube. The cubes of other nearby leaves are interconnected\nwhich often result in an error by oconv. \nAs a result I have to reorganize the blocks or increase the n-parameter\ndramatically.\nFor these problems it could help a lot, if the 'cage' around objects\ncould be handled in a more relaxed way, i.e. in terms of a real bounding\nbox.\nAre there any thoughts done already in that direction? Could it be a\nfeature for the future?\nOr is it impossible due to the existing octree organization?\nAny comments are welcome.\n\n\nKurt\n\n\n________________________________________\n\n\nKurt Altmann\nSophienstr. 114a\n76135 Karlsruhe\nGermany\nTEL     +49 (0)721 3849730\nFAX     +49 (0)721 3849735\nEMAIL   mail@kurt-altmann.de\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2002-May/000240.html).</sup>", "attachments": [], "created_by_name": "Kurt Altmann", "created_at": "May 10, 2002 at 09:35PM", "created_by": "Kurt_Altmann", "parent_id": "radiance-general_000230", "id": "radiance-general_000240"}