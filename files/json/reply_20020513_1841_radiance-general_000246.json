{"body": "Hi Iebele !\n\n\nI dare to mix in the discussion, as the general topic is of some\ninterest for me, too. I myself thought/still think (and did experiment\nas well) about \"tricks\" of what kind ever to produce good looking images \nin less time as currently needed. (Despite the benefits of physical\naccuracy, the look of an image is very important for me, too).\n\n\nBy the way, if you use lots of light sources, you may check out that\ndirect cache stuff, (now the missing patch is included in the\ndistribution as well, so installation should work, too, sorry for\nforgetting it at the first time). As long as you need some ambient\ncalculation, time saving is quite significant, maybe not as much as you\nwant, but making things 4 times faster is better than nothing.\n\n\nNow back to your ideas: I thought of 2D postprocessing, too, for example\nsome sort of \"shadow-softener\" for images traced without ambient light,\nwith help of your idea of 3D-data integration maybe this might become a\nrealistic thing. There are some ways of tricking in 3D as well. POVRay\nfor example allows to assign ambient illumination to different objects\ndirectly, it is no problem to integrate this into RADIANCE, too. If\nyou're interested, I may dig out the stuff and send it to you. (Don't\ntell Greg of all this ... :-) ). Another way is to simulate ambient\nlight effects by some weak additional and invisible direct sources\nsuitably placed, as often it suffices to lighten the dark shadows which\nappear in standard raytracing to mimick a realistic look. This method\nhas the further advantage that it is accessible to \"feeling\" rather than\nthe dry topic of parameters.\n\n\nLast but not least, some of the hints you've asked for:\n\n\ngetting the mentioned data out of the machine certainly is the easiest\npart of the way your're setting out to tread: \n\n\nColor output is done in the 'render()' routine within rpict.c, with help\nof the 'pixvalue()' (rpict.c) routine giving that color, the rest is not\nof interest for this case. Rather than writing data to stdout, it would\nbe easier to write them directly to a file, as rpict uses stdout for\nmessages. The data you want to extract are contained in the ray\nstructure (check ray.h), with exception of the object name (a number is\nused instead so a separate mapping to the name will be needed), so\nextracting them should be fairly straightforward. \n\n\nMaybe this suffices as starting point ... off you go, and good luck of\ncourse. And please tell me, if it works.\n\n\n-- Carsten\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2002-May/000246.html).</sup>", "attachments": [], "created_by_name": "Carsten Bauer", "created_at": "May 13, 2002 at 06:41PM", "created_by": "Carsten_Bauer", "parent_id": "radiance-general_000229", "id": "radiance-general_000246"}