{"body": "--0-785423700-1023913191=:63308\nContent-Type: text/plain; charset=us-ascii\n\n\n\n\nThere are at least two efforts which happened in parallel to Greg's development of Radiance 3.4 which I think will be useful for the overall efforts to streamline portability of Radiance.  As part of the LDRD (Laboratory Directed Research and Development) efforts to develop YAPR (Yet Another Parallel Radiance), David Robertson separated out all of the platform-specific and operating system code into a set of independent files.  In order to do this, he de-IFDEF'd one particularly nasty piece of code.  And, to some extent, he also ANSI-fied the code.    I know that Greg is hesitant to blindly accept all of what David Robertson contributed, but I think it ought to be evaluated by someone to see what can be salvaged. There are a great many parts of Radiance which have not changed with Greg's latest release. And, seeing the David Robertson in person, I actually have some faith that he did his work carefully and thoroughly.  He developed a test suite and repeatedly tested his version against the original to ensure that it was running the same.  No doubt there will be annoyances.  For example, he globally renamed some of the variables.  He mentioned, for example, some two-letter variables that kept appearing and confusing him.\nThe Radiance licensees all have the source code for this \"LDRD\" version of Radiance on the CD-ROM.\nThen, Ken Revzan took this code and put it into MicroSloft Visual C++.  It compiled with relative ease and he made rapid progress.  In our earlier efforts, we looked at Cygwin extensively.  I favor the MS C++ compiler for the reasons mentioned earlier.  Greg might even like the command-line version of the complier.  <cough-cough>  It understands makefiles with little modification.\nIn developing the Desktop Radiance \"Winimage\" program, we did not use the ximage core program...we did use the Radiance Image File interfaces.  We first built the viewer on top of GL for Windows. Ken Revzan then re-implemented in with the native Windows driver because it was faster and less buggy.\nThe Desktop Radiance \"Interactive Renderer\" or Win-rview was built using the ASCII-interface to rview, as does (did) rshow.  Ken Revzan learned a lot from Peter by looking at rshow.  However, Ken failed to implement a proper trap for some high-level interrupts in rview.  This continues to plage the original version, but I think George has fixed many of these problems.  Last I remember, George declared that it was, alas, fundamentally flawed and needed to be re-written.  But, I remember that Ken Revzan complained about the underlying rview code because it did things that C++ doesn't like.  It was either related to long-address jumps or something related to the handling of interrupts for the indirect calculatoin.  So, this might be another thing to consider.\nAnd for the wish-list, there was a paper submitted to SIGGRAPH in 1998 by a guy (?) from Intel that used a type of Fourrier transform analysis of the image plane--as it was being developed--to drasitically reduce the required sampling density.  He claimed to be able to sample only 7% of the image plane and acheive identical results.  Last I heard, Intel planned to patent his approach, but if anyone has not read his paper, they could probably re-implement it without infringing upon the patent.  Or, perhaps Intel would donate it to the open source effort.\n-Chas\n  Greg Ward <gward@lmi.net> wrote: A P.S. on my previous post. When I did the grep for system \ndependencies, I was only looking for conditional compiles specific to \none system, and I sort of missed Georg's point, that the makeall script \ncontains a lot of system-specific stuff in it. I agree, though I'm \ncontinually surprised by how few problems this actually has caused over \nthe years. Still, I imagine a HAS_ approach could be better \nin the long run.\n\n\nBe that as it may, if you look at makeall, you will see that the things \nI test for are not the sorts of things that autoconf tests for. For \nexample, whether the system qsort() routine works, or if the system \nmalloc() function can be overridden. The other symbols I commonly \ndefine are BSD, for systems with good BSD library support, and DCL_ATOF, \nfor systems that don't declare atof() in the expected place. I suspect \nI could eliminate DCL_ATOF by including stdlib.h at this point, but I \nwould have to make a few other changes to allow this. If we could \neliminate the other 8 system defines I used, that would leave BSD as the \nonly remaining symbol of any consequence.\n\n\n_______________________________________________\nRadiance-dev mailing list\nRadiance-dev@radiance-online.org\nhttp://darkside-animation.com/mailman/listinfo/radiance-dev\n\n\n\n\n\n\nDo You Yahoo!?\nSign-up for Video Highlights of 2002 FIFA World Cup\n--0-785423700-1023913191=:63308\nContent-Type: text/html; charset=us-ascii\n\n\n<P>There are at least two efforts which happened in parallel to Greg's development of Radiance 3.4 which I think will be useful for the overall efforts to streamline portability of Radiance.&nbsp; As part of the LDRD (Laboratory Directed Research and Development) efforts to develop YAPR (Yet Another Parallel Radiance), David Robertson separated out all of the platform-specific and operating system code into a set of independent files.&nbsp; In order to do this, he de-IFDEF'd one particularly nasty piece of code.&nbsp; And, to some extent, he also ANSI-fied the code.&nbsp;&nbsp;&nbsp; I know that Greg is hesitant to blindly accept all of what David Robertson contributed, but I think it ought to be evaluated by someone to see what can be salvaged.&nbsp;There are a great many parts of Radiance which have not changed&nbsp;with Greg's latest release. And, seeing the David Robertson in person, I actually have some faith that he did&nbsp;his work carefully and thoroughly.&nbsp; He developed a test suite and repeatedly tested his version against the original to ensure that it was running the same. &nbsp;No doubt there will be annoyances.&nbsp; For example, he globally renamed some of the variables.&nbsp;&nbsp;He mentioned, for example,&nbsp;some two-letter variables that kept appearing and confusing him.\n<P>The Radiance licensees all have the source code for this \"LDRD\" version of Radiance on the CD-ROM.\n<P>Then, Ken Revzan took this code and put it into MicroSloft Visual C++.&nbsp; It compiled with relative ease and he made rapid progress.&nbsp; In our earlier efforts, we looked at Cygwin extensively.&nbsp; I favor the MS C++ compiler for the reasons mentioned earlier.&nbsp; Greg might even like the command-line version of the complier.&nbsp; &lt;cough-cough&gt;&nbsp; It understands makefiles with little modification.\n<P>In developing the Desktop Radiance&nbsp;\"Winimage\" program, we did not use the ximage core program...we did use the&nbsp;Radiance Image File&nbsp;interfaces.&nbsp; We first built the viewer on top of GL for Windows. Ken Revzan then re-implemented in with the native Windows driver because it was faster and less buggy.\n<P>The Desktop Radiance \"Interactive Renderer\" or Win-rview was built using the ASCII-interface to rview, as does&nbsp;(did)&nbsp;rshow.&nbsp; Ken Revzan learned a lot from Peter by looking at rshow.&nbsp; However, Ken failed to implement a proper trap for some high-level interrupts in rview.&nbsp; This continues to plage the original version, but I think George has fixed many of these problems.&nbsp; Last I remember, George declared that it was, alas, fundamentally flawed and needed to be re-written.&nbsp; But, I remember that Ken Revzan complained about the underlying rview code because it did things that C++ doesn't like.&nbsp; It was either related to long-address jumps or something related to the handling of interrupts for the indirect calculatoin.&nbsp; So, this might be another thing to consider.\n<P>And for the wish-list, there was a paper submitted to SIGGRAPH in 1998 by a guy&nbsp;(?) from Intel that used a type of Fourrier transform analysis of the image plane--as it was being developed--to drasitically reduce the required sampling density.&nbsp; He claimed to be able to sample only 7% of the image plane and acheive identical results.&nbsp; Last I heard, Intel planned to patent his approach, but if anyone has not read his paper, they could probably re-implement it without infringing upon the patent.&nbsp; Or, perhaps Intel would donate it to the open source effort.\n<P>-Chas\n<P>&nbsp; <B><I>Greg Ward &lt;gward@lmi.net&gt;</I></B> wrote: \n<BLOCKQUOTE style=\"PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #1010ff 2px solid\">A P.S. on my previous post. When I did the grep for system <BR>dependencies, I was only looking for conditional compiles specific to <BR>one system, and I sort of missed Georg's point, that the makeall script <BR>contains a lot of system-specific stuff in it. I agree, though I'm <BR>continually surprised by how few problems this actually has caused over <BR>the years. Still, I imagine a HAS_<FEATURE> approach could be better <BR>in the long run.<BR><BR>Be that as it may, if you look at makeall, you will see that the things <BR>I test for are not the sorts of things that autoconf tests for. For <BR>example, whether the system qsort() routine works, or if the system <BR>malloc() function can be overridden. The other symbols I commonly <BR>define are BSD, for systems with good BSD library support, and DCL_ATOF, <BR>for systems that don't declare atof() in the expected place. I suspect <BR>I could eliminate DCL_ATOF by including stdlib.h at this point, but I <BR>would have to make a few other changes to allow this. If we could <BR>eliminate the other 8 system defines I used, that would leave BSD as the <BR>only remaining symbol of any consequence.<BR><BR>_______________________________________________<BR>Radiance-dev mailing list<BR>Radiance-dev@radiance-online.org<BR>http://darkside-animation.com/mailman/listinfo/radiance-dev</BLOCKQUOTE><p><br><hr size=1><b>Do You Yahoo!?</b><br>\n<a href=\"http://rd.yahoo.com/welcome/*http://fifaworldcup.yahoo.com/fc/en/spl\">Sign-up for Video Highlights</a> of 2002 FIFA World Cup\n--0-785423700-1023913191=:63308--\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2002-June/000004.html).</sup>", "attachments": [], "created_by_name": "Charles Ehrlich", "created_at": "June 12, 2002 at 01:19PM", "created_by": "Charles_Ehrlich", "parent_id": "radiance-dev_000000", "id": "radiance-dev_000004"}