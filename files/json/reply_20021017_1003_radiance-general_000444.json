{"body": "Unfortunately, I couldn't read Martin's posting, as it came out as an \nencoded sequence that my mailer couldn't decypher.  Folks, if you're \nsending text, see if you can use ASCII.  It's a good standard, and it's \nbeen around for some time.  My mailer figures out most things, but it's \nnot 100% reliable.\n\n\nI'm gathering my notion of what was said by Carsten and Schorsch's \nresponses...\n\n\n>> rview version of rpiece\n> would be a nice thing to have. Indeed, I already wrote something like\n> this (although not based on rpiece, but generally on a separate \n> parallel\n> processing library (PVM)). The problem is, however, that the succesive\n> refining scheme of rview needs a lot of data shuffling when sending the\n> output of different processes to the display, so the parallel rview \n> came\n> out really slooooooow, which is why I abandoned it and do parallel\n> processing only in rpict mode.\n\n\nThe new rholo program is runs like rview in parallel, as you can start \nas many processes as you have processors.  I never got around to making \nit work over a network, and I have doubts it would really pay off due \nto the latencies involved.  Carsten's statement would seem to confirm \nthis.\n\n\n>>> reliable smoothing functions\n>> the smoothing option in e.g. gensurf (-s) works very well. I don't \n>> have\n>> any experience in cases when polygon meshes are imported from CAD\n>> programs, although I already thought about an independent smoothing\n>> process which could be let loose on any given polygon set.\n>> Question: does the smoothing generally get lost when importing stuff\n>> from, say, Autocad ?\n>\n> Yes. That may eventually change once I have understood how\n> gensurfs smoothing actually works (doesn't seem to bee too\n> complicated, just that I didn't have the nerve to dig into\n> the topic yet).\n\n\nGensurf will also take vertices from its standard input or a file and \ngenerate smoothed polygons, but the vertices have to be laid out on a \ngrid.  (I added for the next release a feature to enable you to cut \nrough holes into gensurf meshes.)  If you have a triangle mesh and you \nknow the vertex normals, you can use the tmesh2rad or mgf2rad \nconverters to get these into smoothed triangles in Radiance.  The \nmgf2rad program will also smooth quadrilaterals, but it does so by \nbreaking them into triangles.  The obj2rad program can also take \nsmoothed surfaces in Alias/Wavefront format, so there really are many \noptions for getting smoothed surfaces into Radiance.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2002-October/000444.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "October 17, 2002 at 10:03AM", "created_by": "Greg_Ward", "parent_id": "radiance-general_000425", "id": "radiance-general_000444"}