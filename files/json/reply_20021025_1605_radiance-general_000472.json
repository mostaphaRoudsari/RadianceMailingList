{"body": "Hi Alex,\n\n\nI'm a bit afraid to even dip into this conversation, as there are so  \nmany tricks and hacks you can play with Radiance before even delving  \ninto the source code, but I thought I'd offer at least one modest  \nsuggestion...\n\n\nIf you just want to substitute a material in the case of eye rays, you  \ncan use a mixfunc and pass it the world coordinates of the viewpoint  \n(-vp Vx Vy Vz) in the real arguments like so:\n\n\nvoid mixfunc view_switch_mat\n4 view_mat normal_mat\n\tif(and(FTINY-abs(A1-Px+T*Dx),and(FTINY-abs(A2-Py+T*Dy),FTINY-abs(A3- \nPz+T*Dz))),1,0)\n\t.\n3 {Vx} {Vy} {Vz}\n\n\nwhere of course {Vx} {Vy} and {Vz} are replaced by the appropriate real  \nvalues.  The above works by testing to see if the ray that hit the  \nsurface originated at the viewpoint without being reflected or  \nrefracted along the way.  The FTINY values (equal to 1e-7) are  \nnecessary to avoid floating point roundoff errors in the equality  \ntests.  I haven't tested this, but I believe it would work, and you  \nwouldn't have to hack the source code.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2002-October/000472.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "October 25, 2002 at 04:05PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_000461", "id": "radiance-general_000472"}