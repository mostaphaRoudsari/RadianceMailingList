{"body": "Hi Charles,\n\n\nCarsten is probably right -- the src/rt/srcdraw.c routines are likely \nresponsible for the observations you are making in your renderings.  \nThese routines were included to prevent annoying aliasing artifacts \nthat result when sources are too small to be reliably sampled by rpict \nview rays.\n\n\nI can explain the reasoning behind the routines thus.  Normally, rpict \nis followed by a pfilt command to perform anti-aliasing, and ideally \nyou would send such a large number of initial samples (oversampling) \nthat you were guaranteed to see everything there is to see in each \npixel.  These pixels would then be filtered down (averaged together) to \ncompute the final output pixel, which would then be equivalent to the \nphoton sampling that goes on in a physical camera.  (Equivalent -- not \nidentical, as rpict simulates an ideal pinhole camera with zero \nextent.)  If we were able to perform this calculation in our lifetimes, \nwhat we would see for light sources (and for all objects) is a constant \npixel luminance while the object completely covered the pixel, then a \nproportionally decreasing value as the object covered less than a full \npixel as it moved farther away.  As Carsten pointed out, an object's \ndiminishing size with distance is proportional to 1/r^2 since there are \ntwo dimensions to an image, and that is what you should see and would \nsee with a real camera.\n\n\nIn short, if you apply pfilt following rpict, you should see an \napproximation of this behavior for all objects, not only light sources. \n  Since the straight output of rpict has only one sample (at most) per \npixel, the sample either hits an objec or it doesn't.  The reason you \nget effective oversampling for light sources is because of the special \nroutines in srcdraw.c.  The approximation in these routines is not \nexact (nothing is exact in a simulation), but it's fairly close to \nbeing correct -- certainly a lot closer than you could get with Monte \nCarlo sampling.\n\n\nIf this behavior is a problem, you can couple the vwrays program with \nrtrace to avoid all of rpict's sampling optimizations.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2002-December/000507.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "December 13, 2002 at 08:34AM", "created_by": "Greg_Ward", "parent_id": "radiance-general_000502", "id": "radiance-general_000507"}