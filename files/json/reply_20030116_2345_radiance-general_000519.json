{"body": "Hi Rob,\n...\n> \n> (several paragraphs later he gets to the questions...)  My questions are\n> for those of you on the list with MP linux experience.  I guess I'm hazy\n> on the way the two processors are utilized.  Do you tend to run one job\n> on one CPU and a second one on the other, or do you use rpiece to work\n> one job across both, as if the the CPUs are two different hosts?  Or is\n> there some OS and/or Radiance compile tweak that you do to simply make\n> both CPUs act as one, obviating the need for rpiece? Seems like you\n> still need rpiece so the ambient cache is managed properly. As far as\n> CPU, do I *have* to use the Athlon MP, or can I run two XPs?  Anyone\n> have hardware recommendations?  I like Abit motherboards, but they don't\n> seem to offer a dual socket variant.  What about OS?  I had great\n> success with RHL 8.0 on an old Dell -- it installed and compiled\n> Radiance without a single hiccup.  Anyone using it on a dual box?  Any\n> compile changes to either the OS or Radiance?\n\n\n+ compile changes - most certainly not (Greg relies on the general idea\nof copy-on-demand page reuse for standard fork/exec, that seems to work.\nI'm not a system guru, maybe threading would be better for whatever\nreasons) . There's no general, UNIX internal, way to present two CPUs as\none to a program. Except PVM (parallel virtual machine) or other\nlibraries (which are operating in user space and not kernel space, if\nI'm correctly aligned). LBNL had a project which extended Radiance for\nthat, - don't know if and when that gets merged back into mainstream\nRadiance.\n\n\n+ Linux distributions - Slackware 8.0 seems ok (gcc version 2.95.3, \n/lib/libc-2.2.3.so), if others experienced problems, I'd suggest adding\noutput of (\"gcc -v\" and \"ls -la /lib/libc*so\", maybe more)\n\n\n+ MP hardware - dual PIII/1Ghz on Tyan motherboard, no known problems,\n(dual PII/400 on ASUS had been fine too, some years ago)\n\n\n+ rpiece/ambient/rpict - rpiece organizes just the rpicts; sharing\nambient values works with rtraces started by hand too. Running two\nrtraces/rpicts on the same octree is memory efficient, as the scenery is\nshared (that's what the earlier \"copy-on-demand page reuse\" yuckspeak\nwants to say). If scene memory is not a limiting factor, I wouldn't care\nhow rendering is organized. Depends on your coding style of shell\nscripts, makefiles, m4 etc. \n\n\n+ NFS (now, I fear this will haunt me for years) is working between\nslackware boxes if nfs-3 is used. However, I do had weird experiences\nwith lockd/statd on IRIX,HP-UX,Linux over the years, so anyone building\non NFS file locking for commercial work should add a few weeks of\ntesting before going productive with the machines. (file locking is\ncrucial to sharing ambient files via NFS)\n\n\ncheers\nPeter\n\n\n\n\n pab-opto, Freiburg, Germany, www.pab-opto.de\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2003-January/000519.html).</sup>", "attachments": [], "created_by_name": "Peter Apian-Bennewitz", "created_at": "January 16, 2003 at 11:45PM", "created_by": "Peter_Apian-Bennewitz", "parent_id": "radiance-general_000518", "id": "radiance-general_000519"}