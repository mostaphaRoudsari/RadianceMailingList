{"body": "Looks like Greg was busy already with the ansification...\nTo make activities like this easier in the future, are there any\nplans to make the sources available per CVS somewhere? I'm sure\nthat Sourceforge would be very happy to host it. Or are we still\nwaiting for the announced group of \"advisors\" to be selected?\n\n\nSpeaking of CVS, I remember Greg mentioning difficulties to\nconvert the old Radiance SCCS archives something more useful.\nThis might help:\n  http://mail.gnu.org/archive/html/info-cvs/2002-03/msg00613.html\n  http://www.gigascale.org/softdevel/faq/17.html\n\n\n\n\nJack de Valpine wrote:\n>  Based on my understanding of the topic, it seems that\n> there are several approaches that have been put on the table:\n\n\nNice and complete list, thanks!\n\n\n\n\n> * file based locking:\n>   * NFS - as currently implemented and with all the NFS related\n>     issues\n>   * Samba - I recall that Georg had mentioned this as a possibly\n>     more reliable mechanism\n\n\nThe \"Samba\" keyword seemed to involve two seperate suggestions:\n\n\n      * Transplant some custom locking code used in earlier samba\n        versions into Radiance. Actually, this is just a specific\n        example of a custom/homegrown solution.\n\n\n      * Use the standard locking mechanisms on Windows, and have\n        a Samba server translate that to unix (NFS-)locks where\n        necessary. While this would eliminate the unix/Windows\n        compatibility question, it doesn't solve the problems we\n        still have between different unixes.\n        I was in favour of this solution at one time, but only\n        later realized that NFS locking is still not reliable on\n        all platforms today.\n\n\n\n\n>   * Custom - homegrown solution for locking files\n\n\nI know that the mailman developers are using something like this,\nwhich actually helps in running this mailing list here. If you\nwant a good scare, check out all the problems they ran into:\n  http://www.google.com/search?q=+site:mail.python.org+mailman+locking\n\n\n\n\n> * client/server - presumably a socket based client server mechanism\n>   but not relying on pvm/mpi\n\n\nThis is by far my preferred solution, despite Greg apparently\nbeing afraid of sockets... ;)  Client/server solutions over\nsockets are one of the most universally supported concepts\nnowadays, even if some vendors try to hide this fact behind\nproprietary terminology.\n\n\nIt also looks like Carsten already has this implemented, although\nhis description so far hasn't made it completely clear whether\nthat depends on PVM or not. He wanted to be around again this\nweek to explain it better. A self contained version is obviously\npreferrable, and I believe that it can be done with reasonable\neffort.\n\n\n\n\n> * pvm/mpi:\n\n\nI think that we should treat multi-CPU parallelization and\nambient data sharing as two entirely seperate issues, as the\nlatter will have to work transparently across all versions and\nplatforms.\n\n\n\n\n> * What are the implementation issues relating to doing a\n>   client/server model vs. something like pvm/mpi, how much of the\n>   guts of radiance need to be worked on for either option, what is\n>   most robust, extensible and os dependant/independant\n\n\nAs far as I understand, there's a function that stores ambient\nvalues into the file, and another one that retreives them again.\nAnd that's already all of it that involves the \"guts\" of radiance.\n\n\nSelecting a file based implementation for standalone operation,\nor a networked one otherwise can be done at process startup, and\nwill be completely transparent to the actual simulation code.\n\n\nI don't know whether it would be a good or bad idea to keep the\nNFS lock based sharing mechanism in place for those people who\nwant to trust their lock manager. It's certainly not a technical\nproblem to do so. Maybe we can postpone this decision until we\nactually have a working alternative.\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-January/000024.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "January 27, 2003 at 11:29AM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000016", "id": "radiance-dev_000024"}