{"body": "Georg Mischler wrote:\n\n\n> Peter Apian-Bennewitz wrote:\n>\n> >  there wouldn't be a chance to change the handling of alias in 3.5 ?\n> >  Like adding 'alias' as a primitive, so rview etc. can display the\n> >  material name as it was before aliasing ?\n> >  It means changing stuff at some places, but would help quite a bit\n> >  during material editing or selection.\n>\n> Somehow I suspect that what you really want is to use\n> descriptive IDs for the geometry primitive. If I understand your\n> problem correctly, then you seem to have troubles in certain cases\n> to identify where an offending primitive actually came from.\n> That's exactly the purpose of the object ID.\n>\n> A CAD translator should include as mush useful information in\n> that ID as possible, as well as making it as unique as possible.\n\n\nI'm stuck with what I get exported from the CAD, at least in this\nscenario. There's no way of accessing any more  internal CAD data.\n\n\n> I haven't seen all of your argumentation, but I don't think\n> that it's a good idea to \"reverse engineer\" this information\n> later within Radiance, especially if that sould involve changing\n> the behaviour of modifiers and aliases even in subtle ways.\n\n\nAlias are treated quite asymmetric in Radiance, as they are  \"primitives\"\nsyntactically, but filtered out directly at the time the rad file is read.\nTreating them as primitives and thus preserving the information they\ncontain wouldn't break anything. To the user they would be absolutely\nidentical. Internally the price is following one additional object lookup,\nwhich would be neglectable, as far as I guess.\n\n\n> The problems you have with rshow rather seem to be related to\n> the fact that you are using the octree when *modifiyng* the\n> scene. I can see some of the reasons for that, but I don't\n> think that's what the octree was designed for, so it may or\n> may not be a good idea in the long run. Especially frozen\n> octrees don't look like something that should be \"edited\".\n\n\nThe alias information is generally lost, but it would be useful. E.g. it\nmight be handy to get it via rtrace too.\nTrue- whether a scene tool should read octrees or its own scheme of rad\n(or other) files is open to taste and preference, but maybe it's a\ndifferent subject. I always feel comfortable when checking and analyzing\nwhat's ultimately read by the renderer.\nMy plea here is, in the octree, not to throw away bits of information\nwhich are useful and cheap in terms of size&speed.\n\n\n-Peter\n\n\n\n\n pab-opto, Freiburg, Germany, www.pab-opto.de\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-March/000074.html).</sup>", "attachments": [], "created_by_name": "Peter Apian-Bennewitz", "created_at": "March 06, 2003 at 05:08PM", "created_by": "Peter_Apian-Bennewitz", "parent_id": "radiance-dev_000072", "id": "radiance-dev_000074"}