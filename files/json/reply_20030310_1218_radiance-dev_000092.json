{"body": "Schorsch writes:\n>> Only if the\n>> modifier was changed by the alias will we have to call lastmod(), and\n>> this should be a small minority of the cases.  I don't see why a CAD\n>> translator would ever use this feature, for example.\n>\n> The translator as such probably not, but Rayfront uses this all\n> the time to manipulate modifier trees. As it is now, Rayfront\n> stores all modifier definitions in one file per project, which\n> gets loaded first. The primitives in that file all have no\n> modifier of their own. The modifier trees that are then assigned\n> to each geometry \"object\" are composed exclusively through\n> recursive aliases (I posted a simple example earlier in this\n> thread).\n\n\nUnless you are reusing modifier names, the cost of calling lastmod() is \nquite modest.  If you check the code, it first does a hash lookup, \nwhich is extremely fast, and only if the modifier has been redefined \nsince the current primitive (in this context, our alias) was loaded \nwill it resort to a linear search.  So, I really don't think you'll see \nmuch of a performance hit with the suggested solution.\n\n\nRegarding the questionable wisdom of having a single data structure for \nmodifiers and objects, I tend to agree with you.  However, it's really \nlate in the game to making these sorts of fundamental \"adjustments\" to \nthe source code.  If we're going to do that, we may as well chuck the \nwhole scene description language in favor of something more MGF-like.  \nI've given this a lot of thought, though, and I really don't think it \nwould be worth the effort.  Besides the nasty compatibility issues, \nthere's just not that much to be gained by moving to a more sensible \ninput structure, and much time to be lost.  That's a whole can of worms \nI don't want to open right now.  \"Never\" would be a good time.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-March/000092.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "March 10, 2003 at 12:18PM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_000081", "id": "radiance-dev_000092"}