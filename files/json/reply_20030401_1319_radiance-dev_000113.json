{"body": "Thank you \"PAB\" and \"schorsch\" for all your comments!\n\n\nI've prepared two new packages according to your advices, but\nI had to post a query in the debian-devel(-italian) ml about how \nto use /opt with debian packages,\nbecause it seems that no debian packages are allowed to put \nanything into /opt (maybe I'm wrong ...), since add-on packages\nare not debian packages ...\n\n\nThere is also a few other conflicts with debian policy:\n\n\nNo csh scripts can be used:\nbegin---8<---quoting---8<---quoting---8<---quoting---8<---quoting---8<---quoting---\n11.4 Scripts\n[...]\ncsh and tcsh should be avoided as scripting languages. See Csh Programming \nConsidered Harmful, one of the comp.unix.* FAQs, which can be found at \nhttp://language.perl.com/versus/csh.whynot.[41] If an upstream package comes \nwith csh scripts then you must make sure that they start with #!/bin/csh and \nmake your package depend on the c-shell virtual package. \n\n\nAny scripts which create files in world-writeable directories (e.g., in /tmp) \nmust use a mechanism which will fail if a file with the same name already \nexists. \n\n\nThe Debian base system provides the tempfile and mktemp utilities for use by \nscripts for this purpose. \nend---8<---quoting---8<---quoting---8<---quoting---8<---quoting---8<---quoting---\n\n\nNo environment variables should be used:\nbegin---8<---quoting---8<---quoting---8<---quoting---8<---quoting---8<---quoting---\n10.9 Environment variables\nA program must not depend on environment variables to get reasonable defaults. \n(That's because these environment variables would have to be set in a \nsystem-wide configuration file like /etc/profile, which is not supported by \nall shells.) \n\n\nIf a program usually depends on environment variables for its configuration, \nthe program should be changed to fall back to a reasonable default \nconfiguration if these environment variables are not present. If this cannot \nbe done easily (e.g., if the source code of a non-free program is not \navailable), the program must be replaced by a small `wrapper' shell script \nwhich sets the environment variables if they are not already defined, and \ncalls the original program. \n\n\nHere is an example of a wrapper script for this purpose: \n\n\n     #!/bin/sh\n     BAR=${BAR:-/var/lib/fubar}\n     export BAR\n     exec /usr/lib/foo/foo \"$@\"\n\n\nFurthermore, as /etc/profile is a configuration file of the base-files \npackage, other packages must not put any environment variables or other \ncommands into that file. \nend---8<---quoting---8<---quoting---8<---quoting---8<---quoting---8<---quoting---\n\n\nI think I'll update the packages when I'll have received an answer ...\n\n\nI told you about my plan to make also a radiancestatic package and a \nradiancepmap package. Is there anybody interested in having also a\ndirect cache patched binary package?\n\n\n\n\ning. Francesco Anselmo\nanselmo@dream.unipa.it\n\n\n[ DREAM ] \nDipartimento di Ricerche \nEnergetiche e Ambientali\n\n\nUniversit\u00e0 di Palermo\n\n\nViale delle Scienze\n90128 Palermo - Italy\n\n\nTel + 39 091 236 302\nFax + 39 091 484 425\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-April/000113.html).</sup>", "attachments": [], "created_by_name": "Francesco Anselmo", "created_at": "April 01, 2003 at 01:19PM", "created_by": "Francesco_Anselmo", "parent_id": "radiance-dev_000112", "id": "radiance-dev_000113"}