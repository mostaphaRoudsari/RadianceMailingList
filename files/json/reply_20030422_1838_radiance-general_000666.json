{"body": "> This is informative -- it looks to me like the density of polygons goes\n> up dramatically near the center, and I suspect this is why oconv is\n> unable to resolve your model.  Oconv has an upper limit to the number\n> of polygons it will put in an octree voxel, and you are running into\n> this limit with lower values of -r and running out of memory as it\n> tries to resolve the mesh with larger values of -r.  The best solution\n> would be to reduce the number of polygons you have in the center of\n> your reflector, perhaps by going to a more sophisticated grid\n> arrangement that what you have, which appears to be a uniform division\n> of the polar coordinates.\n\n\nYou might also try a recursive subdivion scheme using spherical\ntriangles. A dodecahedron is a good starting point. This would solve\nyour problem, although the number of triangles can explode with the\nsubdivision level. Of course you'll have to implement this yourself, but\nit's actually simpler than it sounds.\n\n\n--Roland\n\n\n\n\nEND OF LINE. (MCP)\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2003-April/000666.html).</sup>", "attachments": [], "created_by_name": "Roland Schregle", "created_at": "April 22, 2003 at 06:38PM", "created_by": "Roland_Schregle", "parent_id": "radiance-general_000660", "id": "radiance-general_000666"}