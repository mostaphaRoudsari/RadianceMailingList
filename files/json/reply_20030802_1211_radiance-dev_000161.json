{"body": "On Saturday, August 2, 2003, at 04:48  AM, Georg Mischler wrote:\n\n\n> Randolph Fritz wrote:\n>\n>> Peter Apian-Bennewitz wrote:\n>>\n>>> The makeall script is not the premium solution, but it works.\n>>\n>> The problems I see are:\n>>\n>> 1. There is no way to write portable Rmakefiles which separate build\n>> and install and work with the current makeall script.\n>\n> Since the makeall script has to trigger the two seperate\n> procedures individually, it obviously needs to be adapted to know\n> about them. [...]\n\n\nThat strikes me as an awkward way to reimplement something that's \nalready been done.  And of course as the scripts get more and more \ncomplex, they will require more and more maintenance.\n\n\n>> 2. There is no platform-independent way to automatically include\n>> header-file dependencies in  Rmakefile's.\n>\n> Since we include the same set of headers on all platforms\n> that use the makeall/Rmakefile combination, this shouldn't be a\n> problem. The dependencies only need to be generated when they\n> actually change, which means on Gregs system or mine. There\n> should be no need for anyone else to bother with that.\n\n\nWouldn't all developers potentially need them?  And we don't currently \nhave all of those dependencies explicit at all, except where we've \nkludged them in.  (By the way, there is no support for dynamic \ninclusion of files in basic make.)\n\n\n> That implies that we'll only include dependencies to our own\n> headers.  A platform independent procedure would only be necessary\n> if we were to generate dependencies for system headers as well,\n> which I consider bad practise.\n\n\nI agree.\n\n\n> Actually, I'm not sure if the dependency generation really needs\n> to be automatic, although it would certainly be nice.\n\n\n\"make\" itself is not strictly necessary, but I am long enough in \ncomputing to remember what builds were like without it.  If they aren't \ntoo much trouble, I'd rather use the best simple automatic tools I can \nfind.  The build scripts are going to get more and more complicated and \ngrow to include dependency-generation scripts.  They will take \nmaintenance time themselves.\n\n\nIn terms of Scons (which I haven't actually tried yet), well, is \nrequiring Python 1.5.2 for build (not execution) such a terrible thing? \n  1.5.2 is pretty old now, and it runs on every platform Radiance runs \non, as far as I know.  It is even preinstalled on Mac OS X and most \nLinuxen.  Greg?\n\n\nRandolph\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-August/000161.html).</sup>", "attachments": [], "created_by_name": "Randolph Fritz", "created_at": "August 02, 2003 at 12:11PM", "created_by": "Randolph_Fritz", "parent_id": "radiance-dev_000151", "id": "radiance-dev_000161"}