{"body": "Greg Ward wrote:\n\n\n>   The way it was\n> designed, one signature works for oconv and another for the renderers.\n> ...\n>\n>   The other option is to stick with\n> a single signature and use a cast.  This is less objectionable than\n> usual because it is like \"client data\" in most respects:\n>\n> typedef struct {\n>     char  *funame;                    /* function name */\n>     int  flags;                       /* type flags */\n>     int  (*funp)(OBJREC *o, void *p); /* pointer to function */\n> }  FUN;\n\n\nIf each program is garanteed to always use the same signature,\nthen that looks acceptable to me as an \"opaque\" data structure.\nI'm not even sure if it will require any casts.\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-August/000173.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "August 04, 2003 at 06:45PM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000151", "id": "radiance-dev_000173"}