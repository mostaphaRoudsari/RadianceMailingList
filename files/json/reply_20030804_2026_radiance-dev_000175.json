{"body": "On Monday, August 4, 2003, at 12:19  PM, Greg Ward wrote:\n>>> - For binaries, first look in the directory where the current\n>>>   executable was loaded from, then look in the $PATH.\n>>> - For library files, first look in ../share/ (again based on\n>>>   the location of the current executable), then in\n>>>   ../share/radiance-<ver>/, and then on $RAYPATH.\n>>\n>> Is there some way within a Unix program to determine where the \n>> executable was found, other than researching the $PATH environment \n>> variable to find where argv[0] lives?\n\n\n> Scanning the PATH is the only truly portable solution I am aware\n> of. Doing this appears to be quite common practise.\n> On some systems though, you may find that information somewhere\n> under /proc. On Linux, /proc/<pid>/exe always is a symlink to the\n> program file.\n\n\nOn Mac OS X, however, it's probably best to eventually (not \nimmediately) adopt the practice of packaging Radiance as a Mac OS X \napplication, and use ~/Library/Radiance and /Library/Radiance for \nadd-on libraries.  Mac OS X isn't--quite--Unix.\n\n\nRandolph\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-August/000175.html).</sup>", "attachments": [], "created_by_name": "Randolph Fritz", "created_at": "August 04, 2003 at 08:26PM", "created_by": "Randolph_Fritz", "parent_id": "radiance-dev_000151", "id": "radiance-dev_000175"}