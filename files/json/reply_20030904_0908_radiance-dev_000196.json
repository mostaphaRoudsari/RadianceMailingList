{"body": "Peter Apian-Bennewitz wrote:\n\n\n> exactly. Fruthermore, I don't feel like glass (dielectric, etc) surfaces \n> should be ignored during irradiance calcs (T_IRR_IGN flag). Maybe time \n> for another cmdline. Any comments, anyone ?\n\n\nI agree (well, it should be optional).  I asked Greg about this a little \nwhile ago, and he gave me the following hack to obtain irradiance on \nglass surfaces:\n\n\nvwrays -x XRES -y YRES -vf viewfile -fd | rtrace -h -fd -opn octree \\\n| rtrace -fdc -I render_options -x XRES -y YRES octree > illum_picture.pic\n\n\nThe first rtrace computes the intersection point (which is fast) and the \nsecond rtrace does the illuminance calculation. Cool, yes? Yes.\n\n\nNote that this only works with square views. rtrace throws a little fit \ndoing the pixel aspect ratio normalization for non-square views, which \ncan be countered by using this variation instead:\n\n\nvwrays -x XRES -y YRES -vf viewfile -fd \\\n| rtrace -h -fd -opn octree \\\n| rtrace -fdc -I render_options `vwrays -d -x XRES -y YRES -vf viewfile` \\\noctree > illum_picture.pic\n\n\nTo quote Greg:\n\n\n\"This guarantees that the resolution used by vwrays is the same as that \ngiven to the final rtrace command. this wouldn't be necessary, except \nthat rtrace needs the -x and -y options to create a standard radiance \npicture on its output (along with a -f?c option).\"\n\n\n... but the addition of another switch to rtrace that facilitates this \nwould be nice too.\n\n\n\n\n\n\n      Rob Guglielmetti\n\n\ne. rpg@rumblestrip.org\nw. www.rumblestrip.org\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-September/000196.html).</sup>", "attachments": [], "created_by_name": "Rob Guglielmetti", "created_at": "September 04, 2003 at 09:08AM", "created_by": "Rob_Guglielmetti", "parent_id": "radiance-dev_000191", "id": "radiance-dev_000196"}