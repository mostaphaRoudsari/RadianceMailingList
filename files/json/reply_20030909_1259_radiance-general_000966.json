{"body": "Hi Rob,\n\n\nJust to weigh in below.....\n\n\nRob Guglielmetti wrote:\n\n\n> thanks everyone!\n>\n> Mark, just for fun, I'm trying your -aa 0 -ad 16 trick right now \n> (it'll be a while before I can post a result, methinks).\n>\n> Martin, yours was a good heads up as to the essence of the problem -- \n> once again I'm expecting brute force CPU cycles to make up for a lack \n> of understanding about the guts of Radiance.\n>\n> This is good, though.  I finally realize that mkillum can be thought \n> of as a way of rolling your own ies files, sorta.\n>\n> Greg Ward wrote:\n>\n>> Hi Rob,\n>>\n>> This seems to be a classic example of where you just can't rely on \n>> the interreflection calculation in Radiance to solve your problem for \n>> you.  The basic assumption in this approximation is that the indirect \n>> illumination varies slowly over surfaces, which clearly isn't the \n>> case in this scene.\n>\n>\n> er, right.  =8-/\n>\n>> Solution: you need to apply mkillum to create pseudo light sources \n>> (imposters) for your indirect luminaires.  To do so, put a shallow \n>> box with an open top around a single ceiling-mounted light source (5 \n>> rectangles) and use the \"void\" modifer for these, making sure they \n>> face out into your room.  Let's say you called this file \n>> \"light_in.rad\".  Using either the octree for your room or a reduced \n>> one that just has that one light source switched on (better), you \n>> would run mkillum thus:\n>\n>\n> lemme make sure I understand; these 5 rectangles would define the \n> inside recess of the coffer, yes?  And I would call it out like so:\n\n\nActually, what I think Greg means here is that you place an open top box \nto enclose a selected coffer in this case. For example 4 polygons that \nform the perimeter around the coffer and are \"extruded\" (for lack of a \nbetter term) down from the ceiling/coffer surface, these polygons should \nbe capped with a 5th that in essence encloses the coffer. Note that the \nnormals for these polygons must all point out into the the room. The \nfunction of this box is to \"catch\" the light from the true sources in \nthe coffer  in the mkillum calculation and then subsequently serve as \nthe light emitting surfaces (hidden because they are illums) for the \ncoffer based on the data that is generated by the mkillum calc. The \nappearance of the light in the coffer itself can be controlled by using \nglow surfaces in place of the light sources in the coffer with a radius \napplied for each glow to enable the glow some minimal calculation \nability within the coffer and behind the illum.\n\n\n>\n> void polygon coffer.top\n> 0\n> 0\n> 12\n>     0 0 -5\n>     0 10 -5\n>     10 10 -5\n>     10 0 -5\n>\n> ... and so on?\n>\n> For the\n>\n>> sake of calculational efficiency, I recommend that you also change \n>> the light primitives in your original luminaire files to the \"glow\" \n>> type with an effective distance equal to the diagonal of your \n>> luminaire dimension, so as to avoid sending shadow rays to these \n>> sources unnecessarily.\n>\n>\n> I *think* I understand...\n>\n>> The net result should be a fast and accurate rendering of your space.\n>\n>\n> That's all I ever wanted. =8-)\n>\n> I'll try these suggestions. Thanks guys.\n>\n> ----\n>\n>      Rob Guglielmetti\n>\n> e. rpg@rumblestrip.org\n> w. www.rumblestrip.org\n>\n> _______________________________________________\n> Radiance-general mailing list\n> Radiance-general@radiance-online.org\n> http://www.radiance-online.org/mailman/listinfo/radiance-general\n>\n>\n\n\n\n\n#\tJohn E. de Valpine\n#\tpresident\n#\n#\tvisarc incorporated\n#\thttp://www.visarc.com\n#\n#\tchanneling technology for superior design and construction\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2003-September/000966.html).</sup>", "attachments": [], "created_by_name": "Jack de Valpine", "created_at": "September 09, 2003 at 12:59PM", "created_by": "Jack_de_Valpine", "parent_id": "radiance-general_000963", "id": "radiance-general_000966"}