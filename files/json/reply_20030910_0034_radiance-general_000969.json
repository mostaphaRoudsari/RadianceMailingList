{"body": "Hi Jack,\n\n\nOn Tuesday, September 9, 2003, at 08:06 PM, John de Valpine wrote:\n\n\n> Hi Rob,\n>\n> You should do version 2 or 3 (of the three scenarios indicated) for \n> constucting the so-called impostr geometry for mkillum processing. In \n> version 1 which I am guessing is what you used, you will have a number \n> of potential problem areas (althought the image certainly looks a lot \n> better): 1) overlapping geometry and materials, 2) 4 illums with \n> normals pointing the wrong way. Now I am just going to hazard a guess \n> that either one of these issues could cause the motting that you have \n> noted on the floor (another possibility may be your glow material \n> settings).\n\n\nYep, I used version 1.  And I had the same concerns you cite.  This is \nwhy I made those diagrams (1Pic = 1Kword)!  I guess I thought the goal \nwas to tell mkillum about the major contributing surfaces to the \nluminous flux at the aperture, which is why I thought the inside of the \ncoffer needed to be defined as illums.  The normals of those polys were \nfacing toward the aperture, which in my mind was \"into the room\".\n\n\nNow, it's crystal clear.  Mkillum wants geometry near the aperture, but \nnot interfering with the aperture.  It will look backwards from this \ngeometry into the light fixture, to find sources, and convert that \ngeometry into a photometrically accurate distribution.  It truly is a \nway to generate an \".ies file\" for a custom fixture!\n\n\n> Of the two scenarios for illum geometry, I am going to say that 3 \n> would actually be preferable, since you then remove 4 illum polygons  \n> from processing and aviod some other possible pitfalls from the long \n> skiny polygons and likely requiring an increas in the -ds parameter \n> depending on how the distribution works. But to makethis work your one \n> polygon should seal the coffer as you have indicated and not overlap \n> the fixture/coffer geometry that hangs down. Thus if you have to cheat \n> your coffer depth by a small amount in order to do this, this would \n> probably be a good idea.\n\n\nTHanks for clarifying this; you have answered all my questions by \nsimply picking one image.  This is what I suspected, but wasn't sure.  \nYes, this particular coffer detail has all the geometry above the \nceiling plane, so of course the single polygon (option 3) will work.  I \nsee now that you & Greg were asking me to drop the illum polys down \nbelow the ceiling to clear any geometry of the luminaire/coffer itself. \n  Which also answers my own question about how close the illum polygons \nshould be; it appears that the closer the better, as long as they don't \ntouch the luminaire.\n\n\n> Finally you can exercise some control over the mkillum process based \n> on how you set the paremeters giving you fairly low or high resolution \n> data for simulating the fixture.\n\n\nYes, that's where I still have work to do.  Greg spoon fed me the \nmkillum parameters for this model, but I still have no idea how he came \nup with them.  But yes, I see now that the parameters used in the \nmkillum process control the resolution of the resultant data files.  It \nmakes a lot of sense now, this wonderful tool called mkillum.  Thanks \nJack, I hope to try out your suggestions tomorrow.\n\n\nRob Guglielmetti\nrpg@rumblestrip.org\nwww.rumblestrip.org\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2003-September/000969.html).</sup>", "attachments": [], "created_by_name": "Rob Guglielmetti", "created_at": "September 10, 2003 at 12:34AM", "created_by": "Rob_Guglielmetti", "parent_id": "radiance-general_000963", "id": "radiance-general_000969"}