{"body": "Greg Ward wrote:\n\n\n> We need to take a very careful look at this module's affect on the code \n> as well as the rendering process -- does it support all material types \n> (or at least do something reasonable with the types it doesn't \n> support)?  Does it place any restrictions on light sources?  \n> Participating media?  How does it behave when the geometry gets \n> complex?  Does it burden or otherwise affect the calculation when it is \n> switched off?  Do we get the same results or nearly the same under all \n> important circumstances?\n\n\nWell, to paraphrase Greg in our very first mail exchange: Hey, I'm glad \nsomebody's picking this up! :^)\n\n\nCurrently all of the more common (?) materials are supported. What's \ndefnitely not supported are user defined BRDFs, i.e. \n{Met,Plas,Trans}{Data,Func} and BtdfFunc. This could be a serious \nconstraint in some applications. The reason it's missing is simply that \nI haven't found an efficient way to sample these materials during the \nforward pass; the prototypes performed abysmally. This is because the \nBRDF has to be evaluated for the entire hemisphere of outgoing \ndirections for *every* photon hit. A caching scheme might be worth \nconsidering, but the memory requirements would be substantial. This is \npretty high on the to-do list.\n\n\nThere are a few other (minor?) oddities:\n\n\n-- the spotlight focus is ignored by the photon map, although you \nprobably won't notice the difference to RADIANCE Classic since the \ndirect calculation is still done with the stock code and a shift in \nfocus shouldn't affect the indirect illumination noticeably.\n\n\n-- the Glow primitive acts like a standard light source with the photon \nmap. There are no restricitions I'm aware of as far as sources are \nconcerned. All types are supported, including light source modifiers to \nsimulate goniometric diagrams such as IES and EULUMDAT files.\n\n\n-- distant light sources (defined with the Source primitive) get special \ntreatment and are inherently slow (photons are emitted from the scene \ncube surfaces). The photon port mechanism can be used here to speed \nthings up (by defining windows and skylights as emitters, for example), \nbut this requires user intervention.\n\n\n-- light sources must be enclosed in bubbles in order to delineate \nparticipating media and obtain volume photons. This is an inconvenience, \nbut bear in mind that RADIANCE Classic doesn't take any indirect \nillumination into account in participating media.\n\n\n-- virtual light sources are ignored; caustics is what the photon map is \nall about.\n\n\nAdmittedly, the addon has seen limited use with really complex geometry, \nat least on my end. Most of the scenes I used are simple and tractable \nfor the sake of debugging, which is why I'm relying on feedback from \nusers with suitably complex scenes. I've received some interesting \nresults tho, including caustics from a glass blob using a trimesh, which \ngoes beyond anything I've tried.\n\n\nThe addon doesn't burden the standard code in any way: the forward pass \nis performed by a separate program (mkpmap) and thus self-contained. The \nbackward pass is integrated into rpict/rview/rtrace, with calls to \ndensity estimation routines in ambient.c and source.c (for \nglobal/caustic, and volume photons, respectively). These calls are \nconditional, based on the existence of a photon map, i.e. a simple NULL \npointer check. Furthermore, the standard functionality is preserved in \nevery way; that was one of the primary design goals.\n\n\nAs for the results, I've made numerous comparisons with RADIANCE Classic \nusing both local and distant sources, and feel that systematic \ndeviations are minimal. That doesn't mean the results are identical; if \nthey were, we wouldn't need the addon! Caustics pop up where RADIANCE \nClassic doesn't render them (or noisily at best), and the addon is \ngenerally faster than RADIANCE Classic. Moreover, it's more accurate \nwith high reflectance scenes because RADIANCE Classic assumes an average \nreflectance of 0.5 and truncates rays prematurely in these cases. The \ndownside may be a slight increase in noise in the ambient illumination, \nalthough this is largely subject to the global photon bandwidth.\n\n\nAt the end of the day tho, what ultimately matters -- at least in \nlighting applications -- is physical accuracy, and that's where the \nemphasis of this implementation lies. I'm not aware of other pmaps out \nthere that  can handle distant light sources and goniometric diagrams \n(ok, maybe Henrik Wann Jensen's can). To check the accuracy I spent the \nlast two years checking the thing both analytically and experimentally \nusing measurements done at Fraunhofer ISE.\n\n\nThe analytical validation was a simple \"furnace\" type scene. There was \nno bias to speak of when using floats for photon flux. When using RGBE I \ndiscovered an underprediction of 0.5% due to rounding errors introduced \nby this representation. I think everyone can live with this and it saves \nmemory, so I left it as default (float photon flux is still available \nwith the PMAP_FLOAT_FLUX define at compile time). Apart from the diffuse \ncase I also tested specular reflection using a simplified cosine lobe \nmodel, and wound up with similar results. In both cases RADIANCE Classic \nexhibited considerable underprediction with high reflectance, requiring \nthe use of the -lw and -ab options in order to force more ambient \nbounces, thus slowing things down even further compared to pmap. I \nelaborated on this stuff in my presentation at last year's RADIANCE \nworkshop, check the workshop slides at radiance-online.\n\n\nThe experimental validation was an entirely different challenge and much \nmore interesting. After countless headaches (I had been warned!) I \nfinally managed to account for all the stuff that can go wrong in such \nan undertaking. The validation culminated in a case study involving \ndiffuse interreflection plus caustics from a light shelf (the latter \nintentionally giving rise to more glossy than specular reflection in \norder to obtain useable results from RADIANCE Classic). Comparison \nbetween simulation and measurement revealed deviations well within 10%. \nMoreover, RADIANCE Classic and photon map delivered very similar \nresults, although the latter was much faster.\n\n\nFor those interested on reading up on this, the validation stuff as well \nas the bias compensating operator are documented in my PhD thesis which \nI intend to wrap up and finally hand in this month -- insha'Allah. A \npaper on bias compensation will appear in this month's issue of Computer \nGraphics Forum, and I'm in the process of preparing another publication \non the validation together with my colleagues at Fraunhofer ISE.\n\n\n> These concerns must be answered, and I'm sure Roland can answer some of \n> them.  For other concerns, I'll just have to pour over the source code \n> and test it and test it.  It would be very helpful to me if Roland and I \n> could get together and run through everything, but that hasn't happened, \n> and e-mail gets mixed in with all the other activities we have going on, \n> making communication slow and difficult.\n\n\nI'm sure we can arrange something. It's tough sifting through somebody \nelse's code on your own even if it is commented (particularly if some \ncomments use dodgy language... :^)\n\n\n> I really appreciate the efforts Roland has put forth to get this out, \n> and to keep it updated with the latest source changes on our end.  I \n> know this is no small task, and it feels cruel to make new releases \n> without incorporating his changes, because it just means more work for \n> him without any real benefit.\n\n\nConsequently I didn't even bother adapting to the HEAD release; \ncurrently the pmap addon is only compatible with official 3.5 release.\n\n\nThanks for bringing this up, Greg!\n\n\n\n\n--Roland\n\n\n\n\n\n\nRoland Schregle\nPhD candidate, Fraunhofer Institute for Solar Energy Systems\nRADIANCE Photon Map page: www.ise.fhg.de/radiance/photon-map\n\n\nEND OF LINE. (MCP)\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-December/000266.html).</sup>", "attachments": [], "created_by_name": "Roland Schregle", "created_at": "December 01, 2003 at 03:34PM", "created_by": "Roland_Schregle", "parent_id": "radiance-dev_000263", "id": "radiance-dev_000266"}