{"body": "Georg Mischler wrote:\n> Roland Schregle wrote:\n> \n>>Well, you get a pretty \"unexpected object call\" message that's used as\n>>default in the dispatch table, and mkpmap gracefully bails out. :^)\n> \n> Not good enough.\n\n\nNo?\n\n\n> The very least we should do is to deposit the photon there, so\n> that it can get gathered again later. Since we'll be looking at\n> the situation from the other side at gathering time, shouldn't we\n> be able to do the right thing with the BR[T]DF then?\n\n\nThat's not gonna help ya if you don't propagate the photon, and for that \nyou need the BRDF. The BRDF's contributions to the other surfaces will \nstill be missing, and postprocessing in the backward pass won't cut it \neither because at most 1 ambient bounce is performed with pmap. Your \nsolution will still be incomplete.\n\n\nCaustics from such a material won't show up with this scheme either, \nsince specular reflections from surfaces hit by ambient rays are \nsuppressed, because this is exactly what the caustic photons account \nfor. Failure to ignore these transport paths would result in overcounting.\n\n\nFinally, note that the current implementation doesn't store the photon's \nincident direction, so that info wouldn't be available during the \nbackward pass when applying the BRDF. I considered this info redundant \nbecause photons only account for the diffusely reflected indirect \nillumination; the specularly reflected indirect illumination is still \nhandled via the stock code (unless it's already accounted for by caustic \nphotons, as noted above).\n\n\n> I'm still not completely clear about this transfer phase, btw.\n> If I run rpict with pmap and eg. 5 ambient bounces, is there any\n> risk of double counting any light paths? Or maybe more to the\n> point, how is this avoided?\n\n\nIf -ab is nonzero, the actual number is irrelevant: global photon \ncontributions are always visualised via *one* intermediate ambient \nbounce. If you set -ab to zero, the global photons are visualised \ndirectly at the primary ray (which is faster but pretty noisy). Caustic \nphotons are always visualised directly.\n\n\nDouble counting is ruled out for caustics as described above. For \ndiffuse illumination, double counting is avoided by not tracing ambient \nrays when global photon contributions are evaluated -- these components \naccount for the same transport paths, expect the photon density estimate \nis generally faster than tracing ambient rays.\n\n\n> For the same reason, and to give those theoretical deliberations\n> a more realistic foundation, I'd like to encourage other people\n> who have used the photon map extension to act on Gregs request,\n> and share their practical experiences. You can either do this\n> through one of the mailing lists, or directly to Greg and/or me.\n> Roland, do you have a list of users that you could politely ask\n> to chime in? The more feedback we get, the better.\n\n\nI'll go through my old musty MailCrypt[tm] and see who I can dig up... :^)\n\n\n--Roland\n\n\n\n\n\n\nRoland Schregle\nPhD candidate, Fraunhofer Institute for Solar Energy Systems\nRADIANCE Photon Map page: www.ise.fhg.de/radiance/photon-map\n\n\nEND OF LINE. (MCP)\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-December/000275.html).</sup>", "attachments": [], "created_by_name": "Roland Schregle", "created_at": "December 02, 2003 at 08:42PM", "created_by": "Roland_Schregle", "parent_id": "radiance-dev_000263", "id": "radiance-dev_000275"}