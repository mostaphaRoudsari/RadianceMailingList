{"body": "Zack Rogers wrote:\n\n\n> >There's an \"arbmap.cal\" included with Rayfront for that (and it\n> >should also be in the archives here somewhere for those who don't\n> >have that).\n> >\n> I've tried to use arbmap.cal before and was having some problems - but\n> that wouldn't be necessary for a solid texture anyways, correct??\n\n\nNo, this would be in place of picture.cal. I didn't remember\nfor a moment that the woodgrain functions are fully procedural\nsolid patterns.\n\n\n\n\n> >I posted something to the list about a year ago on generating animation\n> >paths, which I've attached to this message.  Perhaps this can help.\n>\n> Thanks Greg.  I remember seeing this and had forgotten about the\n> spline.cal function.  I was hoping for something more visual, but this\n> method would definitly be easier than the way I did it (essentially with\n> an exported spline from CAD and a spreadsheet)\n\n\nIf you're exporting them from Autocad anyway, then you might\nwant to look at the spline fitting functions in tube.lsp:\n  http://www.schorsch.com/download/tube/\nIt's not ideal for this application, as it automatically\nselects the point spacing to optimize geometric deviation\nagainst the number of generated points. In other words, it\nwill generate more points in narrow curves, and speed up\non the straight stretches.\n\n\n\n\n> This isn't the cause of some the splotches i am still seeing, is it?  I\n> have my -ad and -as parameters really high, but perhaps too high??\n\n\nIf you want to go for speed and non-splotchy appearance, and\ndon't mind the resulting luminances to be inaccurate, then\nyou could reduce -ad and -as, while *increasing* -aa.\n\n\nThose three need to be \"balanced\" to get nice renderings.\nYou can balance them for accuracy or for speed...\n\n\n\n\n> > For some entity types (extruded arcs and arc segments\n> >in polylines), you can reduce the angle and distance tolerances\n> >in Radout to improve their appearance.\n> >\n> I almost did reduce the tolerances but wasn't sure the effect this would\n> have on octree size, or more importantly, rendering times.\n\n\nThe amount of geometry usually has a surprisingly small effect\non rendering times, so I wouldn't be too shy here. If in doubt,\npick the layers where you expect the visual benefit to be the\nhighest, and only export those (seperately) with lower tolerances.\n\n\n\n\n> In general,\n> would phong smoothing or increased number of facets be more expensive?\n\n\nA texfunc applied to each polygon will most likely eat more\nCPU cycles than a number of additional plain polygons.\nProcedural modifiers are quite expensive.\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2003-December/001349.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "December 17, 2003 at 07:02PM", "created_by": "Georg_Mischler", "parent_id": "radiance-general_001335", "id": "radiance-general_001349"}