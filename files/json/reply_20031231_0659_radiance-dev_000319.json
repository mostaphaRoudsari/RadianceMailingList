{"body": "Patrik M\u00fcller wrote:\n\n\n> Hi all,\n>\n> I'll try to build a Viewer like RShow for Windows. For this I've included\n> several files from the \"src\" path to my C++ project (the files mentioned in\n> the \"filefmts.pdf\"). The compiling seems to works but I still has a linking\n> error:\n>\n> Linker-Vorgang l\u00e4uft...\n>    Bibliothek ../bin/TKIM_Radiance.lib und Objekt ../bin/TKIM_Radiance.exp\n> wird erstellt\n> sceneio.obj : error LNK2001: Nichtaufgeloestes externes Symbol _ofun\n> mesh.obj : error LNK2001: Nichtaufgeloestes externes Symbol _ofun\n> modobject.obj : error LNK2001: Nichtaufgeloestes externes Symbol _ofun\n> otypes.obj : error LNK2001: Nichtaufgeloestes externes Symbol _ofun\n> readoct.obj : error LNK2001: Nichtaufgeloestes externes Symbol _ofun\n> ../bin/TKIM_Radiance.impd : fatal error LNK1120: 1 unaufgeloeste externe\n> Verweise\n> Fehler beim Ausf\u00fchren von link.exe.\n>\n> I normally only use C++ and not C, so a hint would be very nice!\n\n\n\n\nThis has nothing to do with C++ vs. C or your compiler version.\n\n\nWe have modified all header files earlier this year so that the\ncode should compile correctly with any conforming C/C++ compiler.\nThis also means that you should use the HEAD dump instead of the\noutdated 3.5 release if you don't do this already.\n\n\nWhat you need is the following definition somewhere:\n\n\nFUN  ofun[NUMOTYPE] = INIT_OTYPE;\n\n\nThis statement is present in the sources for several Radiance\nexecutables, as well as in src/rt/initotypes.c (linked into\nsrc/lib/libradiance.a if you use the makeall script, and into\nsrc/lib/librttrace.a if you use SCons) for use by the renderers.\nThe relevant declarations are in src/common/otypes.h.\n\n\nSince SCons is platform-independent (most of Radiance compiles\nfine with VC6 that way), I'd recommend to build Radiance with\nthis, and just use the resulting libraries for your project.\nSCons automatically selects alternative code for some of the\nplatform specific functionality, so that you don't need to worry\nabout most unix APIs. Note that SCons also creates a different\nand more granular set of libraries than the Rmakefiles, which\ngives you more flexibility to link to just what you need.\n\n\nThe SCons build instructions and requirements can be found\nsomewhere in the archives here, but you can just ask if you need\nany further explanations.\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-December/000319.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "December 31, 2003 at 06:59AM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000316", "id": "radiance-dev_000319"}