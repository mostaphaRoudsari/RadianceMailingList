{"body": "Zack Rogers wrote:\n\n\n> Hello again,\n>\n> We are considering getting a new G5!  I am wondering if there is any\n> work happening on creating a 64-bit version of Radiance?  If not, what\n> are people's thoughts on how extensive this conversion would be?\n\n\n\n\nDoesn't the G5 run 32 bit binaries as well?\nI'm not sure what the benefit would be, btw. Are you thinking of\nsome aspect in particular?\n\n\nThere are many elements in a program that can be either 32 or\n64 bits wide (or any other size). Among others those are the\nsizes of ints (increasing their range), floats (increasing their\nprecision), and pointers (increasing the address space).\nBut very often, those have no direct influence on performance.\nThe most noticeable thing to change might be the required amount\nof memory. In the worst case, you'd have to install twice as much\nRAM to get the same result.\n\n\nWhat *would* help for the recent G# Macs is the use of the\naltivec unit in the CPU. If someone finds a way to eg. unroll the\n64 multiplications in multmat4 in src/common/mat4.c, so that they\nget executed in parallel, then that might make a real difference.\nAnyone wants to dig into PowerPC assembler?\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-January/000335.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "January 08, 2004 at 02:48PM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000334", "id": "radiance-dev_000335"}