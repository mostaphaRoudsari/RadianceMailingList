{"body": "Ferdinand Schmid wrote:\n\n\n> I think this answers Zack's and my question.  Radiance isn't using\n> 64bit words and won't benefit from 64bit math.\n\n\n\n\nWell, it's entirely possible that making explicit use of wider\ndata paths *somewhere* in the G5 system architecture might result\nin a performance advantage. But obviously, such an optimisation\nwould be highly platform specific. If you feel like researching\ncompiler switches and their potential benefits and dangers, be my\nguest!\n\n\nIn the mean time I found that Apple provides an altivec optimized\nBLAS implementation, which includes all common matrix and vector\noperations. It looks like we could just replace the contents of\nmat4.c and invmat4.c with macros invoking the equivalent functions\nin that library to make optimal use of the special CPU capabilities.\nI don't have a Mac myself (although I'm open to donations... ;),\nbut the conversion looks quite straightforward if anyone wants to\ngive it a try:\n\n\n  http://developer.apple.com/hardware/ve/vector_libraries.html\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-January/000337.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "January 09, 2004 at 09:13AM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000334", "id": "radiance-dev_000337"}