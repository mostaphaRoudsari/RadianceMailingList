{"body": "Greg Ward wrote:\n\n\n>   The -fast option that does all the most aggressive\n> optimizations for the G5 works on Mark Stock's benchmark with good\n> effect (30% speed improvement or so), but causes an infinite loop\n> somewhere in the code for other scenes.\n\n\nYes, certain types of optimization tend to have that effect\nsome times. Do you have any idea where exactly it was hanging?\nOn one hand, I hate to suggest platform specific optimizations,\nbut on the other hand this problem might point us to places\nwhere we'd want to simplify our code anyway...\n\n\n\n\n> > In the mean time I found that Apple provides an altivec optimized\n> > BLAS implementation, which includes all common matrix and vector\n> > operations.\n> > ...\n> >\n> >   http://developer.apple.com/hardware/ve/vector_libraries.html\n>\n> Even easier, Apple offers a library of their own routines to get the\n> job done.  Just run \"man Accelerate\" to learn all about it.\n\n\nI suspect we're talking about the same thing.\n\n\n\n\n> However,\n> I'm not sure how much speedup you'll get by reimplementing the matrix\n> routines -- they're pretty short vectors, and they're not called all\n> that often in the code.  I'd recommend looking in the ray tracing\n> routines in \"rt/raytrace.c\" for places to optimize first, then perhaps\n> \"source.c\" at the direct calculations.\n\n\nTaking this a bit further, has anyone ever profiled Radiance?\nI think this might give us interesting information that could be\nuseful for all platforms.\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-January/000341.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "January 09, 2004 at 01:54PM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000334", "id": "radiance-dev_000341"}