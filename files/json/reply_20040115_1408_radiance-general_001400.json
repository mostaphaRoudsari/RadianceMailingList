{"body": "--------------010901070502040602010803\nContent-Type: text/plain; charset=us-ascii; format=flowed\nContent-Transfer-Encoding: 7bit\n\n\nHi All,\n\n\nWell here are some further things to confuse/clarify the possibilities.\n\n\nThe BRTDfunc is very powerful and has multiple uses. Several things that \nI actually find quite nice about it are:\n\n\n    * values represent transmittance and reflectance, as one might\n      determine from manufacturers data or from Optics 5 (a side note, I\n      believe that Optics 5 is actually used to calculate the values\n      that manufacturers then report for the measurements, this\n      information is incorporated into tools like the Window 4 and 5\n      software, some one from the LBL optics group could probably give a\n      better summary of the capabilities).\n    * allocation of values is clear, that is values are allocated to\n      specular and diffuse components of the material definition (the\n      problem here if you are trying to simulate a glazing material that\n      has diffuse transmittance/reflectance performance is that\n      manufacturers are only reporting total reflectance and\n      transmittance and not diffuse and specular measures, so then you\n      have to measure by hand. I think that Rob G. could give everyone a\n      really superb summary on how to setup a measuring environment for\n      glazing materials).\n    * enables simulation of more complex glazing materials such as those\n      that have higher or differing front/back side reflectances than\n      accounted for in the typical \"glass\" material type ( I believe\n      that the reflectance for the glass material type is around 7%).\n\n\nNote that it is possible to use one BRTDfunc definition to define front \nand backside reflectances. Note also that transmittance as I understand \nit must be the same front and back (this is supported by the fact that \nthere is only one transmittance that is supplied in manufacturers data \nand software such as Optics 5).\n\n\nHere is a simple definition for a \"simple\" glazing material (I am pretty \nconfident that I am going to get some corrective feedback on this ;->):\n\n\nvoid BRTDfunc gl.test\n10\n    if(Rdot, .12, .11)    if(Rdot, .12, .11)        if(Rdot, .12, .11)\n    0.70                        0.70                        0.70\n    0                             0                             0\n    .\n0\n9\n    0    0    0    0    0    0    0    0    0\n\n\nThis would define a simple glazing material with a total front side \nreflectance of 12%, a total backside reflectance of 11% and a total \ntransmittance of 70%. This material could be applied to a single surface \nand does not need separate front and backside polygons. However what \nthis definition does not account for is the impact of the incident angle \nof the incoming ray on the resulting transmittance and reflectance. It \nis not clear to me what kind of error this might actually introduce, \nhowever, I believe that a definition such as this could easily take the \nplace of the two (front and back) BRTDfunc definitions that get exported \nfrom Optics 5.\n\n\nI believe that there is some trickiness with normals and BRTDfunc, so I \nhope that I am using Rdot to calculate orientation correctly?\n\n\nNote that the section in the definition with the 10 arguments relates to \nthe specular behavior of the material and the section with 9(+) \narguments relates to the diffuse behavior of the material. Summing \nbetween these gives us total reflectance and transmittance. In this case \nthe there is no diffuse behavior to the material.\n\n\nDepending on the application is might be worth checking out glaze.csh in \nthe latest release. This calculates models for both single and double \nsurface glazing materials. I am not sure how it compares to glazing.cal \nin terms of the accuracy of the underlying model. Note however that \nglaze.csh is built around a handful (5 or 6) sets of reflectance and \ntransmittance values as it \"database\". Some of these were actually \nmeasure by me and looking back on it, I would prefer to measure the \n\"pvb\" materials under a more precise protocol than I did originally \n(again Rob G. would be the real resource here). I would think that the \ntool could be extended to account for many things that can be exported \nfrom Optics 5. Perhaps the Optics 5 group might be interested in having \nGreg develop a more robust solution for what gets exported from Optics 5 \nto account for a more sophisticated model of angular dependance and \nother properties?\n\n\nWell, all in all probably more confusion that clarity.\n\n\nBest,\n\n\n-Jack\n\n\n\n\nZack Rogers wrote:\n\n\n> Hello,\n>\n>> secondly, what does this do to the transmittance?  physically, the \n>> transmittance going one way should be the same as the transmittance \n>> going the other way.  should the (rtrns, gtrns, btrns) variables then \n>> be the same for both front and back panes?  or does it not matter, as \n>> long as the product of their transmittances is equal to that of the \n>> combination.\n>>\n> This is true for a symetric glass composition (ie. single pane no \n> low-e, double pane, clear, no low-e) but not true for non-symetric \n> glass which is often the case for glass with low-e and glass with one \n> of the panes tinted.  I believe the front and back transmittance is \n> always really close, (ie. it can't be 10% in one direction and 90% in \n> the other) but they can vary slightly.  This is what desktop radiance \n> and optics 5 definition method allows you to do.\n>\n>> finally, there are no functions built in.  that means that there is \n>> no dependence on angle of incidence for either transmittance or \n>> reflectance.  this is unrealistic, as transmittance generally reduces \n>> and reflectance generally increases with increasing angle of incidence.\n>>\n> I do think Desktop Radiance and Optics 5 both make use of the angular \n> transmittance function.  This is part of the glass primitive.  And in \n> my example, the BRTDFunc calls glazing.cal which provides the angular \n> transmittance function.  Also, from my comparisions a while ago now, \n> the two methods gave me identical results.  That is:\n>\n> void glass      clear3_glass\n> 0\n> 0\n> 3    0.92189    0.98612    0.972\n>                       void BRTDfunc    clear3_front\n> 10      0.84636    0.90553    0.89251      0.07428    0.08322    \n> 0.08556      0 0 0\n>    .   0\n> 9 0 0 0 0 0 0 0 0 0\n>   void BRTDfunc    clear3_back   10\n>    0.84636    0.90553    0.89251\n>    0.07567    0.08418    0.08538\n>    0 0 0\n>    .   0\n> 9 0 0 0 0 0 0 0 0 0\n>\n> is equivalent to:\n>\n> void BRTDfunc clear3_glass\n>    10    rrho    grho    brho\n>          rtau    gtau    btau\n>          0    0    0\n>          glazing.cal\n>    0\n>    18    0    0    0\n>          0    0    0\n>          0    0    0\n>          0.07428    0.08322    0.08556\n>          0.07567    0.08418    0.08538\n>          0.84636    0.90553    0.89251\n>\n> Also, you might want to check out glass1.cal and glass2.cal which is \n> part of the newest HEAD radiance release.  It just distinguishes \n> between single pane and double pane which have different angular \n> dependance functions.  Also, check out glaze.csh in the latest \n> release, I was just informed of this and have not checked it out \n> personally, but I understand it helps create these definitions.\n>\n> So, I think the BRTDFunc methods can provide greater accuracy than the \n> glass primitive.\n>\n> I hope I have not mistated any of this, anyone please correct me if so.\n>\n> Regards,\n> Zack\n>\n>\n>\n> _______________________________________________\n> Radiance-general mailing list\n> Radiance-general@radiance-online.org\n> http://www.radiance-online.org/mailman/listinfo/radiance-general\n>\n>\n\n\n\n\n#\tJohn E. de Valpine\n#\tpresident\n#\n#\tvisarc incorporated\n#\thttp://www.visarc.com\n#\n#\tchanneling technology for superior design and construction\n\n\n\n\n\n\n--------------010901070502040602010803\nContent-Type: text/html; charset=us-ascii\nContent-Transfer-Encoding: 7bit\n\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n<head>\n  <title></title>\n</head>\n<body>\nHi All,<br>\n<br>\nWell here are some further things to confuse/clarify the possibilities.<br>\n<br>\nThe BRTDfunc is very powerful and has multiple uses. Several things that\nI actually find quite nice about it are:<br>\n<ul>\n  <li>values represent transmittance and reflectance, as one might determine\nfrom manufacturers data or from Optics 5 (a side note, I believe that Optics\n5 is actually used to calculate the values that manufacturers then report\nfor the measurements, this information is incorporated into tools like the\nWindow 4 and 5 software, some one from the LBL optics group could probably\ngive a better summary of the capabilities).</li>\n  <li>allocation of values is clear, that is values are allocated to specular\nand diffuse components of the material definition (the problem here if you\nare trying to simulate a glazing material that has diffuse transmittance/reflectance\nperformance is that manufacturers are only reporting total reflectance and\ntransmittance and not diffuse and specular measures, so then you have to\nmeasure by hand. I think that Rob G. could give everyone a really superb\nsummary on how to setup a measuring environment for glazing materials).</li>\n  <li>enables simulation of more complex glazing materials such as those\nthat have higher or differing front/back side reflectances than accounted\nfor in the typical \"glass\" material type ( I believe that the reflectance\nfor the glass material type is around 7%).</li>\n</ul>\nNote that it is possible to use one BRTDfunc definition to define front and\nbackside reflectances. Note also that transmittance as I understand it must\nbe the same front and back (this is supported by the fact that there is only\none transmittance that is supplied in manufacturers data and software such\nas Optics 5). <br>\n<br>\nHere is a simple definition for a \"simple\" glazing material (I am pretty\nconfident that I am going to get some corrective feedback on this ;-&gt;):<br>\n<br>\nvoid BRTDfunc gl.test<br>\n10<br>\n&nbsp;&nbsp;&nbsp; if(Rdot, .12, .11)&nbsp;&nbsp;&nbsp; if(Rdot, .12, .11)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if(Rdot, .12, .11)<br>\n&nbsp;&nbsp;&nbsp; 0.70&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 0.70&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 0.70<br>\n&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0<br>\n&nbsp;&nbsp;&nbsp; .<br>\n0<br>\n9<br>\n&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0<br>\n<br>\nThis would define a simple glazing material with a total front side reflectance\nof 12%, a total backside reflectance of 11% and a total transmittance of\n70%. This material could be applied to a single surface and does not need\nseparate front and backside polygons. However what this definition does not\naccount for is the impact of the incident angle of the incoming ray on the\nresulting transmittance and reflectance. It is not clear to me what kind\nof error this might actually introduce, however, I believe that a definition\nsuch as this could easily take the place of the two (front and back) BRTDfunc\ndefinitions that get exported from Optics 5. <br>\n<br>\nI believe that there is some trickiness with normals and BRTDfunc, so I hope\nthat I am using Rdot to calculate orientation correctly?<br>\n<br>\nNote that the section in the definition with the 10 arguments relates to\nthe specular behavior of the material and the section with 9(+) arguments\nrelates to the diffuse behavior of the material. Summing between these gives\nus total reflectance and transmittance. In this case the there is no diffuse\nbehavior to the material.<br>\n<br>\nDepending on the application is might be worth checking out glaze.csh in\nthe latest release. This calculates models for both single and double surface\nglazing materials. I am not sure how it compares to glazing.cal in terms\nof the accuracy of the underlying model. Note however that glaze.csh is built\naround a handful (5 or 6) sets of reflectance and transmittance values as\nit \"database\". Some of these were actually measure by me and looking back\non it, I would prefer to measure the \"pvb\" materials under a more precise\nprotocol than I did originally (again Rob G. would be the real resource here).\nI would think that the tool could be extended to account for many things\nthat can be exported from Optics 5. Perhaps the Optics 5 group might be interested\nin having Greg develop a more robust solution for what gets exported from\nOptics 5 to account for a more sophisticated model of angular dependance\nand other properties?<br>\n<br>\nWell, all in all probably more confusion that clarity.<br>\n<br>\nBest,<br>\n<br>\n-Jack<br>\n<br>\n<br>\nZack Rogers wrote:<br>\n<blockquote type=\"cite\" cite=\"mid4006C15C.2080701@archenergy.com\">Hello, <br>\n <br>\n  <blockquote type=\"cite\">secondly, what does this do to the transmittance?&nbsp;\nphysically, the transmittance going one way should be the same as the transmittance\ngoing the other way.&nbsp; should the (rtrns, gtrns, btrns) variables then be\nthe same for both front and back panes?&nbsp; or does it not matter, as long as\nthe product of their transmittances is equal to that of the combination. <br>\n <br>\n  </blockquote>\nThis is true for a symetric glass composition (ie. single pane no low-e,\n double pane, clear, no low-e) but not true for non-symetric glass which\n is often the case for glass with low-e and glass with one of the panes  tinted.&nbsp;\nI believe the front and back transmittance is always really  close, (ie.\nit can't be 10% in one direction and 90% in the other) but  they can vary\nslightly.&nbsp; This is what desktop radiance and optics 5  definition method\nallows you to do. <br>\n <br>\n  <blockquote type=\"cite\">finally, there are no functions built in.&nbsp; that\nmeans that there is no dependence on angle of incidence for either transmittance\nor reflectance.&nbsp; this is unrealistic, as transmittance generally reduces\nand reflectance generally increases with increasing angle of incidence. <br>\n <br>\n  </blockquote>\nI do think Desktop Radiance and Optics 5 both make use of the angular  transmittance\nfunction.&nbsp; This is part of the glass primitive.&nbsp; And in my  example, the\nBRTDFunc calls glazing.cal which provides the angular  transmittance function.&nbsp;\nAlso, from my comparisions a while ago now, the  two methods gave me identical\nresults.&nbsp; That is: <br>\n <br>\nvoid glass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; clear3_glass <br>\n0 <br>\n0 <br>\n3&nbsp;&nbsp;&nbsp; 0.92189&nbsp;&nbsp;&nbsp; 0.98612&nbsp;&nbsp;&nbsp; 0.972 <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  void BRTDfunc&nbsp;&nbsp;&nbsp; clear3_front <br>\n10&nbsp;&nbsp;  &nbsp;&nbsp; 0.84636&nbsp;&nbsp;&nbsp; 0.90553&nbsp;&nbsp;&nbsp; 0.89251&nbsp;&nbsp;  &nbsp;&nbsp; 0.07428&nbsp;&nbsp;&nbsp; 0.08322&nbsp;&nbsp;&nbsp; 0.08556&nbsp;&nbsp;\n &nbsp;&nbsp; 0 0 0 <br>\n&nbsp;&nbsp; .&nbsp;&nbsp;  0 <br>\n9 0 0 0 0 0 0 0 0 0 <br>\n&nbsp;  void BRTDfunc&nbsp;&nbsp;&nbsp; clear3_back&nbsp;&nbsp;  10 <br>\n&nbsp;&nbsp; 0.84636&nbsp;&nbsp;&nbsp; 0.90553&nbsp;&nbsp;&nbsp; 0.89251 <br>\n&nbsp;&nbsp; 0.07567&nbsp;&nbsp;&nbsp; 0.08418&nbsp;&nbsp;&nbsp; 0.08538 <br>\n&nbsp;&nbsp; 0 0 0 <br>\n&nbsp;&nbsp; .&nbsp;&nbsp;  0 <br>\n9 0 0 0 0 0 0 0 0 0 <br>\n <br>\nis equivalent to: <br>\n <br>\nvoid BRTDfunc clear3_glass <br>\n&nbsp;&nbsp; 10&nbsp;&nbsp;&nbsp; rrho&nbsp;&nbsp;&nbsp; grho&nbsp;&nbsp;&nbsp; brho <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rtau&nbsp;&nbsp;&nbsp; gtau&nbsp;&nbsp;&nbsp; btau <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0 <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; glazing.cal <br>\n&nbsp;&nbsp; 0 <br>\n&nbsp;&nbsp; 18&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0 <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0 <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0 <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.07428&nbsp;&nbsp;&nbsp; 0.08322&nbsp;&nbsp;&nbsp; 0.08556 <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.07567&nbsp;&nbsp;&nbsp; 0.08418&nbsp;&nbsp;&nbsp; 0.08538 <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.84636&nbsp;&nbsp;&nbsp; 0.90553&nbsp;&nbsp;&nbsp; 0.89251 <br>\n <br>\nAlso, you might want to check out glass1.cal and glass2.cal which is  part\nof the newest HEAD radiance release.&nbsp; It just distinguishes between  single\npane and double pane which have different angular dependance  functions.&nbsp;\nAlso, check out glaze.csh in the latest release, I was just  informed of\nthis and have not checked it out personally, but I  understand it helps create\nthese definitions. <br>\n <br>\nSo, I think the BRTDFunc methods can provide greater accuracy than the  glass\nprimitive. <br>\n <br>\nI hope I have not mistated any of this, anyone please correct me if so. <br>\n <br>\nRegards, <br>\nZack <br>\n <br>\n <br>\n <br>\n_______________________________________________ <br>\nRadiance-general mailing list <br>\n<a class=\"moz-txt-link-abbreviated\" href=\"mailto:Radiance-general@radiance-online.org\">Radiance-general@radiance-online.org</a> <br>\n<a class=\"moz-txt-link-freetext\" href=\"http://www.radiance-online.org/mailman/listinfo/radiance-general\">http://www.radiance-online.org/mailman/listinfo/radiance-general</a> <br>\n <br>\n <br>\n</blockquote>\n<br>\n<pre class=\"moz-signature\" cols=\"$mailwrapcol\">-- \n#\tJohn E. de Valpine\n#\tpresident\n#\n#\tvisarc incorporated\n#\t<a class=\"moz-txt-link-freetext\" href=\"http://www.visarc.com\">http://www.visarc.com</a>\n#\n#\tchanneling technology for superior design and construction</pre>\n<br>\n</body>\n</html>\n\n\n--------------010901070502040602010803--\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2004-January/001400.html).</sup>", "attachments": [], "created_by_name": "Jack de Valpine", "created_at": "January 15, 2004 at 02:08PM", "created_by": "Jack_de_Valpine", "parent_id": "radiance-general_001394", "id": "radiance-general_001400"}