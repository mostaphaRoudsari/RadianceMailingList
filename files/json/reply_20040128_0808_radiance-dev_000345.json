{"body": "Sabine Wolf wrote:\n\n\n> Hi,\n>\n> after a long time of absence\n\n\nWelcome back!\n\n\n\n\n> Scons detected\n> a win32-system, so I put my settings for gcc into the win32.cfg-file.\n\n\nIf you change the default settings in a platform config\nfile, it's better to make a copy as platform/win32_custom.cfg.\nIf such a *.custom.cfg file exists, then our SCons script will\nuse that instead of the original.\n\n\nI'm assuming that you want to create real Win32 binaries, which\nwill use the native OS APIs. If this happens to work equally well\nas with the VC that I'm using, then we should probably try to\ndetect when SCons is about to run with mingw, and provide an\nextra config file for that. If you're trying to build against\nthe posix APIs that may come with mingw's, then you probably\nbetter copy the cygwin.cfg file for your custom settings.\n\n\n\n\n> The first call of gcc gives me the following error:\n>\n> f:/MinGW/include/sys/types.h:90: conflicting types for `pid_t'\n> src/common/rtprocess.h:15: previous declaration of `pid_t'\n\n\nThe code involved here made an assumption that doesn't happen to\nbe correct when you compile with mingw. It assumed that a build\nsystem would *either* know about the posix pid_t type, *or* about\nWindows native process IDs. On Windows, I simply hijacked the\ntype name pid_t to mean the other one. Since mingw apparently\nexposes both APIs next to each other, this creates a conflict\nthere.\n\n\nI now changed src/common/rtprocess.h to define its own platform\nindependent type name, which is cleaner and avoids any confusion.\nThe fix is in CVS, so you can fech the file through the web, and\nit will also be in the HEAD dump tomorrow. If you want to fiddle\nwith it yourself, below's the context diff. There are only a few\nlines that have changed.\n\n\n\n\n-schorsch\n\n\n\n\nRCS file: /cvs/radiance/ray/src/common/rtprocess.h,v\nretrieving revision 3.9\ndiff -c -r3.9 rtprocess.h\n*** rtprocess.h 14 Nov 2003 17:22:06 -0000      3.9\n--- rtprocess.h 28 Jan 2004 12:40:21 -0000\n***************\n*** 12,18 ****\n  #ifdef _WIN32\n    #include <windows.h> /* DWORD etc. */\n    #include <stdio.h>\n!   typedef DWORD pid_t;\n    #include <process.h> /* getpid() and others */\n    #define nice(inc) win_nice(inc)\n\n\n--- 12,18 ----\n  #ifdef _WIN32\n    #include <windows.h> /* DWORD etc. */\n    #include <stdio.h>\n!   typedef DWORD RT_PID;\n    #include <process.h> /* getpid() and others */\n    #define nice(inc) win_nice(inc)\n\n\n***************\n*** 30,35 ****\n--- 30,37 ----\n  #else\n    #include <stdio.h>\n    #include <sys/param.h>\n+   #include <sys/types.h>\n+   typedef pid_t RT_PID;\n  #endif\n\n\n  #include \"paths.h\"\n***************\n*** 43,50 ****\n\n\n     This means that we shouldn't rely on PIDs and file descriptors\n     being the same type, so we have to describe processes with a struct,\n!    instead of the original int[3]. To keep things simple, we typedef\n!    the posix pid_t on those systems that don't have it already.\n  */\n\n\n\n\n--- 45,52 ----\n\n\n     This means that we shouldn't rely on PIDs and file descriptors\n     being the same type, so we have to describe processes with a struct,\n!    instead of the original int[3]. For that purpose, we typedef a\n!    platform independent RT_PID.\n  */\n\n\n\n\n***************\n*** 64,70 ****\n        int r; /* read handle */\n        int w; /* write handle */\n        int running; /* doing something */\n!       pid_t pid; /* process ID */\n  } SUBPROC;\n\n\n  #define SP_INACTIVE {-1,-1,0,0} /* for static initializations */\n--- 66,72 ----\n        int r; /* read handle */\n        int w; /* write handle */\n        int running; /* doing something */\n!       RT_PID pid; /* process ID */\n  } SUBPROC;\n\n\n  #define SP_INACTIVE {-1,-1,0,0} /* for static initializations */\n\n\n\n\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-January/000345.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "January 28, 2004 at 08:08AM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000344", "id": "radiance-dev_000345"}