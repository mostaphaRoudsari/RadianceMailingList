{"body": "Aside from the slight overlap or underlap at the edges depending on \nsurface curvature, your idea is basically sound.  However, implementing \nthis idea efficiently in Radiance would be a big challenge.  If we were \nto minimize code changes, we'd be using instances of some kind with \nclipping, and we'd end up with a lot of overlapping suboctrees.  Many \non this list can tell you their headaches surrounding those if you \nhaven't had enough of your own.  Getting tighter bounds on the \ninstanced geometry would require some rather fundamental changes to the \nhandling of octrees, and still wouldn't completely remedy the problems \nwith side-by-side instances.  They just don't work that well.\n\n\nGeometry as a modifier also would entail rewriting the octree \ngenerator, which currently ignores all surface modifiers.  I'm not sure \nhow much work this would be, but I would say \"more than a little.\"  \nUnless there is some general need for this kind of rendering in \nRadiance or someone with money and/or time to spend on it, I don't see \nit happening.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2004-February/001462.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "February 03, 2004 at 02:43PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_001442", "id": "radiance-general_001462"}