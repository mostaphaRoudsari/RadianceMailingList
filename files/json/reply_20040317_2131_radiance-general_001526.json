{"body": "Greg Ward wrote:\n\n\n> Rpict doesn't \"remember\" the setting from a previous run, if that's what \n> you're thinking.  It only remembers it from previous appearances of the \n> option.  \n\n\nOK.  Thanks for the explanation.  You've taught me something new...\n\n\n> In other words, giving an option then overriding it later on the command \n> line makes sense in terms of creating your own default sets, which you \n> can incorporate into an alias as above or put into an options file and \n> read with the @file.opt feature.  Using rad, the render= variable \n> overrides whatever parameters rad has set for you.\n> \n> Does this make sense?\n\n\nYes, perfect sense.  Thanks, Greg.  It never occurred to me to \"roll my \nown\" commands by aliasing a command and my preferred options (I know \nthis is lame, but UNIX gets cooler all the time!).  Now that I \nunderstand that scenario, it makes perfect sense that you would have to \nallow for the possibility of an option being \"set twice\", once by the \nalias and then again as an actual commmand line argument.\n\n\nAnd in case you're wondering, no, I don't type out the commands all the \ntime.  But I use scripts with hard-coded options, so this scenario you \ndescribed just never materialized in my head before.  This alias method \nis much more flexible, while being simpler to boot.  Cool, thanks, etc...\n\n\n- Rob G.\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2004-March/001526.html).</sup>", "attachments": [], "created_by_name": "Rob Guglielmetti", "created_at": "March 17, 2004 at 09:31PM", "created_by": "Rob_Guglielmetti", "parent_id": "radiance-general_001520", "id": "radiance-general_001526"}