{"body": "Lars O. Grobe wrote:\n\n\n> Hi list!\n>\n> First, I am still using v3.5 - I have a Mac and no X-sources, so it's \n> hard to compile Head.\n>\n> To improve the performance during rendering a very large model, I \n> atomized it into LOTS of small parts. These are assembled by \n> replmarks, using octrees generated with oconv -f. I thought this was \n> the most efficient solution, and I want to save memory. This leads to \n> a model which is assembled from hundreds of octrees (instances).\n>\n> Now, after importing one more (and big) part into the model, I am not \n> able to oconv the file which is to assemble all these instances any \n> more. Oconv is running without end, I stop it when it takes about 300 \n> MB memory. When I use xform to insert my elements (the same model, \n> just replaced the -i by -x and *.oct by *.rad in the replmarks command \n> line), not instances, everything works fine (except of a very large \n> octree).\n>\n> I heard about some \"overlapping octree\" problems, however, I never \n> understood how they appear. May this be one such problem? Actually, \n> the geometry is not overlapping, but the small octrees bounding boxes \n> certainly are (as they are all cubes, right?). What did you experience \n> with such instanced models?\n\n\nsaving Greg the answer: You're exactly right. non-cubic objects (thin \nrods etc.) generate cubic octrees, which do overlap, whereas the \ngeometry does not. The final oconv than tries very hard to seperate the \nsmall octree cubes again, which it can't if there are more overlapping \nthings (small octrees in this case) at any point in space then allowed \nby the -n option. Either allow more objects per (final, large) octree by \nincreasing -n at the fnal oconv run (which may slow down the raytracer), \ngo back to 'xform' without small octrees or pay Greg to rewrite the code \nso that the sides of octree-cubicles may have different length.\n\n\n> Is the oconv tool in the 3.5 buggy? Any known bugs like that?\n\n\nnot to my knowledge, although R3.5 is pretty buggy in other respects \ncompared with the current release\n\n\n_Peter\n\n\n\n\n pab-opto, Freiburg, Germany, http://www.pab-opto.de\n [see web page to check digital email signature]\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2004-July/001884.html).</sup>", "attachments": [], "created_by_name": "Peter Apian-Bennewitz", "created_at": "July 06, 2004 at 10:55AM", "created_by": "Peter_Apian-Bennewitz", "parent_id": "radiance-general_001882", "id": "radiance-general_001884"}