{"body": "Saved you?  As the creator of the shadow cache, which was the source of  \nthis error, I think I was the spoiler in this case....\n\n\nIt was a subtle bug, though -- not the usual stupid one.  Because of  \nthe way the shadow cache works, it only tests for intersection with a  \nsuspected blocker, assuming that any intersection with the potential  \nblocker implies that it is in the way of the source.  In the case of a  \nsphere with a source inside, a ray directed towards the source will  \nalso intersect the opposite side of the sphere, but not after passing  \nthrough the source -- a condition I wasn't checking for (until now).   \nThe same thing would have happened with a cone or cylinder with a  \nsource inside, though I obviously never tested these cases either, as I  \nhadn't noticed the problem before, and I'm sure it was there from the  \nstart.\n\n\nI had assumed that since I was working on the shadow cache earlier this  \nweek, that I had made some silly mistake in my changes, which is what  \nthrew me off in my debugging.  I wish I had a decent debugging  \nenvironment -- what I have is the old hacker's fallback:  fprintf().\n\n\n-Greg\n\n\nP.S.  You can download the latest check-in of srcobstr.c from:\n\n\n\thttp://www.radiance-online.org/cgi-bin/viewcvs.cgi/ray/src/rt/ \nsrcobstr.c\n\n\nIt will be included in tomorrow's HEAD release.\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2004-September/002022.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "September 10, 2004 at 06:13PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_002020", "id": "radiance-general_002022"}