{"body": "Hi Tonko,\n\n\n> what parts of code would\n> really profit from OO-ing it, both performance and\n> extensibility-wise?\n> \n> As I haven't found a satisfactory answer to this\n> question I decided not to mess with it. Eventually,\n\n\nthese questions are really difficult to answer. The overwhelming \nmajority of the core code (esp the calculation stuff like octree \ntraversal, ray intersections, material behaviour etc etc) is already \nhighly optimized and is better left as it is (which is what I did, apart \nfrom ANSIfying or rearranging)\n\n\nThe main justification of the project certainly is it's role as a hands \non learning thing.\n\n\nThe key problem is that one could do everything different if one started \ncompletely from scratch. In this case, I always would use C++. But this \nwas/is of course impossible (would be unnecessary, too), so I contented \nmyself  which the experiences gained without implementing/changing \neverything what could theoretically  have been done. In some of my \nextensions, however, I greatly benefitted from C++. And if there will \never be a situation, where a larger team might be in charge for the \nfurther Radiance development, a C++ base would of course be a plus, too. \nAs this isn't the case, the question is of no importance.\n\n\n\n\n-Carsten\n\n\nPS feel free to mess with the code. I should apologize for the missing \ndocumentation so far, you know, the usual lack of time :-) But I'm \nalways open for questions and private communication\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-October/000392.html).</sup>", "attachments": [], "created_by_name": "Carsten Bauer", "created_at": "October 04, 2004 at 12:18AM", "created_by": "Carsten_Bauer", "parent_id": "radiance-dev_000384", "id": "radiance-dev_000392"}