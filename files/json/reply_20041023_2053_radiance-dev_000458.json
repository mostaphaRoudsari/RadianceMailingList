{"body": "Tonko Juricic wrote:\n\n\n> Picky little unimportant topic:\n>\n> I see casts to void * like, for ex.\n>\n> char* cin;\n> cin=(char*)malloc(SOMETHING);\n> free((void *)cin);  <<<< THIS ONE!!!\n>\n> MS compiler never complains if you skip the last cast\n> and I noticed it because it strikes me as quite ugly.\n>\n> I wonder if C ANSI-fication requires explicit cast to\n> void* like in free function above?\n> Or is it that some compilers issue unwanted warnings?\n\n\n\n\nI think it used to be necessary in K&R C. In ANSI, void* is the\nofficial \"generic\" pointer, and any assignment from or two one of\nthose is valid without a cast. Since malloc() and free() have\nvoid* as their return resp. argument type, both casts in your\nexample are redundant.\n\n\nThat's how I understand it, anyway... ;)\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-October/000458.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "October 23, 2004 at 08:53PM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_000457", "id": "radiance-dev_000458"}