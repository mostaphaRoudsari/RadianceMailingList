{"body": "On Sat, Oct 23, 2004 at 02:53:51PM -0400, Georg Mischler wrote:\n> Tonko Juricic wrote:\n> \n> > Picky little unimportant topic:\n> >\n> > I see casts to void * like, for ex.\n> >\n> > char* cin;\n> > cin=(char*)malloc(SOMETHING);\n> > free((void *)cin);  <<<< THIS ONE!!!\n> >\n> > MS compiler never complains if you skip the last cast\n> > and I noticed it because it strikes me as quite ugly.\n> >\n> > I wonder if C ANSI-fication requires explicit cast to\n> > void* like in free function above?\n> > Or is it that some compilers issue unwanted warnings?\n> \n> \n> I think it used to be necessary in K&R C. In ANSI, void* is the\n> official \"generic\" pointer, and any assignment from or two one of\n> those is valid without a cast. Since malloc() and free() have\n> void* as their return resp. argument type, both casts in your\n> example are redundant.\n> \n> That's how I understand it, anyway... ;)\n> \n\n\nI believe this is correct, though I'd have to check a reference I\ndon't have to hand to be sure.\n\n\nRandolph\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-October/000459.html).</sup>", "attachments": [], "created_by_name": "Randolph Fritz", "created_at": "October 23, 2004 at 09:04PM", "created_by": "Randolph_Fritz", "parent_id": "radiance-dev_000457", "id": "radiance-dev_000459"}