{"body": "Hi Jack,\n\n\nFirst, thanks to Carsten for fielding Jack's questions -- I learned a \nbit about my own code from your exchange.  For one, I didn't realize \nthat I hadn't used the AMBLLEN macro I defined in rt/ray.h everywhere I \nshould have.  I just increased this value from 128 to 512, allowing for \noverride at compile time.  (Before, there wasn't an enclosing #ifdef \naround it.)  I did the same for the MAXFLEN macro.  Before, it wouldn't \nwork to add -DMAXFLEN=?? to the compile script.  Now, it will.  I also \ndoubled the value from 8192 to 16384 for MAXFLEN.  These changes will \nappear in tonight's HEAD, or can be downloaded individually through the \nCVS interface.\n\n\nOh -- just got your e-mail about AMBLLEN not being used consistently.  \nBingo.\n\n\nI also increased the maximum number of excluded/included modifiers \n(MAXASET) to 2047.  This may not be enough if you have some object \nyou've transformed all over the place as Carsten described, so you may \nalso want to override this in your compile, which I've enabled as well. \n  An argument against making this too large is that the method for \ndetermining whether to exclude a surface or not from the \ninterreflection calculation involves a binary search of this list.  In \nother words, you pay a penalty for having a list that increases as the \nlog(N), where N is the number of included/excluded surfaces.  Since you \npay this penalty every time you need an ambient value, you can in \neffect spend more time searching the list than you do computing \ninterreflections.  I don't know when this crossover occurs, but I \nimagine it would be a very large number for N.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-November/000481.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "November 05, 2004 at 06:41PM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_000475", "id": "radiance-dev_000481"}