{"body": "> Yes, I could see doing this.  We would of course be accepting \n> differences between versions and machines to some tolerance, but it \n> should be sufficient for spotting any major regressions in the code or \n> between releases.  The trick then is to have enough well-designed test \n> scenes to cover all of the basic and some of the more esoteric features \n> of Radiance.  (The \"prism\" and \"BRTDfunc\" primitives spring to mind.)\n\n\nI am a developer on the PostgreSQL database, and we have a full suite of \nregression tests.  We use diff to compare actual vs. expected results. \nPerhaps we could borrow that code.\n\n\nWe have per-platform floating point files that we need to use to allow \nfor differences in IEEE implementation between some platforms.  ie. -0, etc.\n\n\nI was personally thinking for my own project checking that as I make \nchanges to this big script I have, I don't affect other stuff.  However, \nhaving a regression suite for Radiance seems like something that's way \noverdue for a piece of software that needs to be correct for legal \npurposes :)\n\n\nChris\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2005-February/002427.html).</sup>", "attachments": [], "created_by_name": "Christopher Kings-Lynne", "created_at": "February 10, 2005 at 10:38AM", "created_by": "Christopher_Kings-Lynne", "parent_id": "radiance-general_002366", "id": "radiance-general_002427"}