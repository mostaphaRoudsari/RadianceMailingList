{"body": "There are at least three different approaches:\n\n\n\n\n\n\nobj2rad takes into account normals (if your program exports them properly)\nunless you use the -f option (flat faces) - generates a RAD file (you can\ncompile and use instances)\n\n\n\n\n\n\nob2mesh does the trick - generates a MESH file (you need the mesh primitive)\n\n\n\n\n\n\n3ds2mgf does the trick  - generates a RAD file (you can compile and use\ninstances)\n\n\n\n\n\n\nI always prefer to use 3ds2mgf for quick things, like if I want to render\nsomething with colors and smoothing without bothering about reflectance of\nmaterials\n\n\n\n\n\n\n\n\n\n\nI use obj2rad if I want to edit the material description properly\n\n\n(for Cinema4d you need to xform the model to change Y and Z and smoothing do\nnot seem to work, don't know why...\n\n\nIt works well with FormZ though... boh! Mysteries of 3D world)\n\n\n\n\n\n\nI use obj2mesh if there are complicate textures to consider.\n\n\n\n\n\n\nAll of them refer to tmesh.cal and surf.cal into your lib folder.\n\n\n\n\n\n\n\n\n\n\nA quick note: the -s option you recall is used by gensurf to add smoothing\nto your procedurally generated surface (not imported form any CAD).\n\n\n\n\n\n\nHope it helps,\n\n\ngiulio\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   _____\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2005-March/002483.html).</sup>", "attachments": [], "created_by_name": "Giulio Antonutto", "created_at": "March 02, 2005 at 04:09PM", "created_by": "Giulio_Antonutto", "parent_id": "radiance-general_002478", "id": "radiance-general_002483"}