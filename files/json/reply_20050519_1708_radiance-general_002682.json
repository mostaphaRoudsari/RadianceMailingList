{"body": "Hi Federico,\n\n\nIt sounds to me like you are \"diving into the deep end\" as they say  \nabout new swimmers who are very ambitious.\n\n\n> - As to the prismatic structure, i will use the PRISM2 material as  \n> virtual source. No redirection of diffuse incoming light and no  \n> dispersion are the only limitations of this material. And it would  \n> make no sense to use the PhotoMap port, because these materials are  \n> not implemented in this tool.  Is it right?\n\n\nI don't know about support in the photon map add-on, but the prism  \nmaterial types do redirect diffuse rays as well.  They just don't  \nhave a diffuse component.\n\n\n>  - As to the diffuser, i would intuitively treat it as an ILLUM  \n> with a BRTDF function as alternate material (I\u00b4m measuring,  \n> modelling and comparing different kind of diffusers) and run   \n> MKILLUM.  If i understood correctly, the BRTDF materials are only  \n> considered in the direct calculation and indirect specular, but not  \n> in the indirect diffuse, where they are approssimate to lambertian  \n> diffusers. Should i try another material?\n\n\nYour information is correct as far as I understand what you are  \nsaying.  If you can fit your measurements to a Gaussian lobe  \ndistribution, you are better off using one of the native models  \n(trans or trans2), as all ray paths will be followed appropriately.   \nThe general BRDF types, transfunc, transdata, and BRTDfunc, only use  \nthe directional-diffuse lobe specified for interactions with light  \nsources.  General ray sampling from an arbitrary distribution is  \nquite expensive, and not done in Radiance for that reason.\n\n\n>  - How are PRISM materials computed in the MKILLUM calculation of  \n> the window light output? Should I better try to run the simulation  \n> without MKILLUM and high ambient parameters (-ab, -ad, -as)?\n\n\nThe diffuse portion of the window distribution through a prismatic  \nglazing will be computed by mkillum, leaving the  \n\"specular\" (directional) portion to be done during the final  \nrendering.  This is the correct behavior, and you don't have to treat  \nit specially with mkillum, which is helpful for considering  \ncontributions from the sky, ground, and neighboring structures.\n\n\n>  - What if i measure the BRTDF of the complete system and i model  \n> it as a normal light source? It is really difficult (or impossible)  \n> to get sharp peaks in light output with  high subsampling and  \n> jittering of the source?\n\n\nI'm not sure what you mean, here.  If you have some way to simulate  \nyour exterior and measure the actual output distribution of the  \nwindow system as a light source, then you wish to represent that as a  \nbrightdata modifier on a window polygon, this would work.  It's a  \nvery challenging measurement problem, though, which is why no one has  \ndone it to my knowledge.  (Anyone out there have information on this?)\n\n\nThe purpose of mkillum of course is to create a light source from  \nyour surface(s) by simulating an outdoor situation.  It doesn't  \nalways work, though.  Specifically, mkillum has trouble resolving the  \ncontribution from the sun through curved, specular reflectors and  \ndevices.  It can handle most everything else.\n\n\n>  Any other suggestion to simulate this system correctly  \n> (quantitative)?\n\n\nMeasure and validate.  Repeat.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2005-May/002682.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "May 19, 2005 at 05:08PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_002681", "id": "radiance-general_002682"}