{"body": "the simplest way to proceed is to create an equation that links a\ncoordinate to the radiance of the surface in form of a multiplier (hence\nthe equation is between [0,1]).\nyou may use a cal file or directly express it into the brightfunc\ndefinition.\n\n\nAs an example:\nSupposing the relation between light output and distance is this:\n(you may use the proper equation here)\n\n\ny = a*x*x + b   \nand \ny= 0 when x = 1000m \ny = 1 when x = 0\n\n\nit would be:\n\n\ny = -0.000001*x*x+1\n\n\nthat becomes an 'if' sentence to avoid negative values...\ny = if(-0.000001*x*x+1, -0.000001*x*x+1,0)\n\n\nPutting all together I would define a light material this way:\n\n\nvoid light max\n0\n0\n3 100 100 100\n\n\nmax brightfunc light\n2 'if(-0.000001*Px*Px+1,-0.000001*Px*Px+1,0)' .\n0\n0\n\n\nlight cylinder pipe\n0\n0\n7\n0 0 0\n2000 0 0\n.125\n\n\nvoid plastic white\n0\n0\n5 1 1 1 0 0\n\n\nwhite polygon base\n0\n0\n12\n0 -10 -3\n0 10 -3\n2000 10 -3\n2000 -10 -3\n\n\nif it is ok you should see half cylinder black and the other half with a\ngradient. Remember to use really low -ds 0.01.\nCiao,\nGiulio\n\n\n\n\nNOTE: Unfortunately the uv trick doesn't work here, since you need light\nand you cannot nest it into instances (and meshes).\nHopefully your light pipe follows a simple direction like Px, Py or\nPz... otherwise you need to change the equation a little (you may also\nfind another equation...).\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2005-June/002732.html).</sup>", "attachments": [], "created_by_name": "Giulio Antonutto", "created_at": "June 02, 2005 at 05:35PM", "created_by": "Giulio_Antonutto", "parent_id": "radiance-general_002730", "id": "radiance-general_002732"}