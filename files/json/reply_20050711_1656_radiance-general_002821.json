{"body": "Hi Lars,\n\n\nThat explains the problem.  Because each new inclusion of a material  \ngets a new id, and this id needs to go into the ambient include/ \nexclude list for that modifier name, you will quickly overflow your  \nambient exclude set if you incorporate a copy of your materials for  \nevery object.\n\n\nThis is bad practice in general because it means that most of your  \nmemory is occupied with redundant material definitions rather than  \ngeometry.  A better approach is to include any materials that need to  \nundergo transformations as part of the geometric object file.  If you  \njust have a map you wish to apply, possibly substituting the  \nunderlying material, you can use an alias appropriately, e.g.:\n\n\n# The map for this material:\n\n\nvoid colorpict thisMap\n7 ...\n0\n0\n\n\n# origMat is the name of a predefined material in my main library,  \nincluded once\n\n\nthisMap alias thisMat origMat\n\n\nthisMat {geometry ...}\n\n\n\n\nThis allows you to include the main material definitions only once,  \nand control them in a central library.  You can even control the  \nmaps, because they are named by the colorpict rather than defined  \ndirectly in your geometry files.\n\n\nHope this helps.\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2005-July/002821.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "July 11, 2005 at 04:56PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_002804", "id": "radiance-general_002821"}