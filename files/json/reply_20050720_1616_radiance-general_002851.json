{"body": "Huang,\n\n\n\n\n\n\nthe ultimate mapping solution is to use the mesh primitive,\n\n\nyou may create an UV map within your favourite 3D modelling application\nand forget about Px Py and all the xform instances....\n\n\n\n\n\n\nI use cinema 4d and it works brilliantly... also in conjunction with\nbodypaint is a killer...\n\n\nYou may also use the UV map to generate procedural patterns... just\nchange Px with Lu and Py with Lv....\n\n\n\n\n\n\nThis is an example:\n\n\n\n\n\n\nBy means of .obj file format you can import the geometry into radiance:\n\n\nsomething like:\n\n\nobj2mesh -a material.mat model.obj > model.mesh\n\n\n\n\n\n\nThe obj file includes already the UV coordinate system.\n\n\nYou need just to define radiance materials in material.mat.\n\n\nIf you have a pattern and you want to tile it, just use this syntax into\nthe material definition:\n\n\n\n\n\n\nvoid colorpict pattern\n\n\n7 red green blue image.pic . (A*Lu-floor(A*Lu)) (Lv-floor(Lv)) \n\n\n0\n\n\n0\n\n\n\n\n\n\npattern plastic finalmaterial\n\n\n0\n\n\n0\n\n\n5 1 1 1 0 0\n\n\n\n\n\n\nwhere A is the ratio between the Xmax and the Ymax in the image. \n\n\n\n\n\n\nfinally you need a radiance file that loads the mesh,\n\n\nthis is achieved with the mesh primitive:\n\n\n\n\n\n\n\n\n\n\nvoid mesh painting\n\n\n1 model.mesh\n\n\n0\n\n\n0\n\n\n\n\n\n\nand so on.\n\n\n\n\n\n\nNo light sources can be included into meshes, so remember to split your\nscene.\n\n\n\n\n\n\nhope this helps,\n\n\nciao,\n\n\ngiulio\n\n\n\n\n\n\n\n\n\n\n________________________________\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2005-July/002851.html).</sup>", "attachments": [], "created_by_name": "Giulio Antonutto", "created_at": "July 20, 2005 at 04:16PM", "created_by": "Giulio_Antonutto", "parent_id": "radiance-general_002848", "id": "radiance-general_002851"}