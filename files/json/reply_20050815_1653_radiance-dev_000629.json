{"body": "Hi Marcus,\n\n\nI think what you are trying to do would be better accomplished by  \napplying a white-balancing step to the rendered image in a post- \nprocess.  The reason we don't notice color bleeding as much in real  \nlife is that our eye adjusts to the overall color balance in a  \nspace.  When we look at an image on a computer monitor or printed  \npage, our eyes are mostly adjusted to the color of the surround, not  \nthe image, hence any color cast in the image gets interpreted as an  \noverall shift.  To compensate for this, you should pick out some area  \nthat you think should be white in the image, measure its color (using  \nximage or whatever) and adjust all the image values by this color  \nusing pcomb or pfilt.\n\n\nLet's say you measure an RGB value of a gray patch as (0.53,.91,.67)  \nindicating a greenish tint.  You could apply pfilt to the image thus:\n\n\n     pfilt -er `ev .91/.53` -eb `ev .91/.67` -1 orig.pic > corrected.pic\n\n\nThis will bring the red and blue channels into line with the green  \nchannel, adjusting the exposure setting at the same time in order to  \nmaintain luminance calibration.  This is a very crude form of white  \nbalancing.  For a better method, see the following paper:\n\n\n     http://www.anyhere.com/gward/papers/egwr02/\n\n\nIf this really doesn't satisfy your needs, then I'll give you some  \nhints of what to do in the code, but it's a fair amount of work  \nyou're looking at for dubious benefits.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2005-August/000629.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "August 15, 2005 at 04:53PM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_000628", "id": "radiance-dev_000629"}