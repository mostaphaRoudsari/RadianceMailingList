{"body": "Hi Greg + Georg, and thanks!\n\n\nI'm answering to the questions of both of you within\nthis message ...\n\n\nSchorsch wrote:\n> The only difficulty here is that while we're compiling and\n> linking to the standard Windows libraries (apparently), the\n> gcc in mingw expects other command line arguments than the\n> VC compiler. We should create a seperate platform/mingw.cfg with\n> the parameters found. Francesco: Did you find any easy way to\n> tell the difference from within SCons/Python? We already have a\n> seperate *.cfg file for normal cygwin (using posix libraries),\n> but I don't remember how we figured out when to use that.\n\n\nSince the platform is recognised as \"win32\"\nI created my own platform\\win32_custom.cfg\n\n\n> Printing all items of env might produce better clues. Also, what\n> does mingw put in os.name and sys.platform?\n\n\nIt puts \"nt\" and \"win32\". It is not like cygwin, that is a unix\nsystem within windows. I compile from the standard windows C:\\ prompt ...\n\n\n>>> and had to manually add some extra RAD_COMPAT inside a couple\n>>> of SConstruct files (maybe somebody can suggest a better\n>>> CPPDEFINES line ...).\n>\n> What were the RAD_COMPAT entries?\n\n\nI've added only \"fixargv0.c\", and copied the actual file inside\nthe utils and rt folders.\n\n\n> I'm not sure if I understand this right now (but then, I just\n> returned from Mongolia, so don't expect too much).\n\n\nI had noticed the interesting Lighting Wiki sponsor before ;)\n\n\n> I don't think your change breaks anything, but it's still not\n> the nice thing to do. Instead of feeding an empty string (which\n> results in a double width space in the command line) just pass\n> only the remainder of the argument list to quoted_cmdline():\n>\n>   cmdstr = quoted_cmdline(cmdpath, av+1);\n>\n> (Now in CVS)\n> I think this is save, because the first item will always be\n> the name of the command, and if there are no arguments, then\n> the second item will be NULL, which quoted_cmdline() should\n> handle correctly (I don't have a Windows system at hand right\n> now, though, so it's up to you to try...).\n\n\nI was sure it was not an elegant solution. Tested and it works\nand doesn't break anything. Thanks!\n\n\n>> I've just noticed I forgot to mention that I've also added\n>> libws2_32 (-lws2_32) to the list of linked libraries to get\n>> some programs compiled.\n>\n> What does this do? Is this a compatility layer added by mingw?\n\n\nI haven't understood well it either. It is the winsock library,\nso it may seem unrelated, but before adding it, the linker\nwas complaining about many linking errors, and adding it solved the\nsituation. I haven't investigated any further.\n\n\n> I moved some of your stuff to (hopefully) more appropriate lines,\n> and also corrected the other Windows config (VC6 and cygwin) in\n> the same way.\n\n\nThe previous cygwin config file was working well, BTW ...\n\n\n>> BTW It looks like the mingw developer are going to add support for large\n>> file system files at some point, probably later than sooner ...\n>\n> How are they planning to do this? They would have to extend the\n> system libraries, as far as I can tell.\n\n\nI don't know exactly the implementation details, but I guess so.\nCygwin already provides fseeko and ftello.\n\n\nGreg wrote:\n> The -o option should work of course, and I would like it to work.\n> It's needed for other things.  If you change the line:\n>\n> static void closefile(void *p) { fclose((FILE *)p); }\n> to:\n> static void closefile(void *p) { fputs(\"C\",stderr); fclose((FILE *)p); }\n>\n> You should get as many C's on your output as you have -o options.  If\n> that's not happening, it means this call is not being made as it\n> should be.  I'm trying it on my system now to make sure it's working\n> here.\n\n\nUnfortunately the call is not made when I use the -f switch.\nIt gets called only when I don't use the -f option.\n\n\nOne last thing, that should be unrelated with the other problems:\nif run without any argument, rtcontrib segfaults.\n\n\nThank you,\n\n\nFrancesco\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2005-September/000647.html).</sup>", "attachments": [], "created_by_name": "Francesco Anselmo", "created_at": "September 13, 2005 at 11:55PM", "created_by": "Francesco_Anselmo", "parent_id": "radiance-dev_000641", "id": "radiance-dev_000647"}