{"body": "Hi again,\n\n\nI'm sorry for the late reply.\nI wanted to send this message a couple of days\nago, but I didn't manage to find the time to write.\n\n\nGeorg, thanks for updating the Scons related files,\nthe compile process went better than before, only\na few things to change.\n\n\nTwo days ago I've downloaded the cvs snapshot\nand here is the list of changes I did to get\nRadiance compiled again with mingw (this time\nI'm using diff, so I shouldn't miss anything ...):\n\n\ndiff -r ray/platform/mingw.cfg ray_dev/platform/mingw.cfg\n13c13\n< CPPDEFINES: _WIN32 NDEBUG _CONSOLE _MBCS HDSUF=.exe\n\n\n> CPPDEFINES: _WIN32 NDEBUG _CONSOLE _MBCS HDSUF=.exe NON_POSIX\n18c18\n< CPPDEFINES: _WIN32 _DEBUG _CONSOLE _MBCS HDSUF=.exe\n\n\n> CPPDEFINES: _WIN32 _DEBUG _CONSOLE _MBCS HDSUF=.exe NON_POSIX\n25c25\n< RAD_ARGSCOMPAT: fixargv0.c\n\n\n> RAD_ARGSCOMPAT: getpath.c fixargv0.c\n28c28\n< RAD_PROCESS: win_process.c win_popen.c\n\n\n> RAD_PROCESS: gethomedir.c eputs.c getpath.c win_process.c win_popen.c\n29a30\n> RAD_MLIB:   m\n\n\n\n\ndiff -r ray/src/common/rtprocess.h ray_dev/src/common/rtprocess.h\n24c24\n<   int win_kill(RT_PID pid, int sig /* ignored */);\n\n\n>   int win_kill(RT_PID pid, RT_PID sig /* ignored */);\n\n\n\n\ndiff -r ray/src/common/SConscript ray_dev/src/common/SConscript\n17c17\n< \t\tfont.c mesh.c readmesh.c tmesh.c sceneio.c xf.c''')\n\n\n> \t\tfont.c mesh.c readmesh.c tmesh.c sceneio.c xf.c win_popen.c\nwin_process.c''')\n\n\n\n\ndiff -r ray/src/common/win_process.c ray_dev/src/common/win_process.c\n284c284\n< \tcmdstr = quoted_cmdline(cmdpath, av);\n\n\n> \tcmdstr = quoted_cmdline(cmdpath, av+1);\n290c290\n< int win_kill(RT_PID pid, int sig) /* we ignore sig... */\n\n\n> int win_kill(RT_PID pid, RT_PID sig) /* we ignore sig... */\n328c328\n< \t\t\tint win_kill(pid, 0);\n\n\n> \t\t\twin_kill(pid, 0);\n\n\n\n\ndiff -r ray/src/gen/mkillum.c ray_dev/src/gen/mkillum.c\n168c168\n< \tif (fscanf(fp, \"%*s %d\", &pid) != 1 || kill(pid, SIGALRM) < 0)\n\n\n> \tif (fscanf(fp, \"%*s %d\", &pid) != 1 || kill(pid, SIGTERM) < 0)\n\n\n\n\ndiff -r ray/src/gen/SConscript ray_dev/src/gen/SConscript\n6a7\n> socketlib = env['RAD_SOCKETLIB']\n35c36\n<             source=p[1], LIBS=p[2] + mlib)\n\n\n>             source=p[1], LIBS=p[2] + mlib + socketlib)\n\n\n\n\ndiff -r ray/src/rt/rtrace.c ray_dev/src/rt/rtrace.c\n31a32\n> #include  \"random.h\"\n\n\n\n\ndiff -r ray/src/util/ranimate.c ray_dev/src/util/ranimate.c\n338c338,339\n< \t\tif (errno == ENOENT && mkdir(vval(DIRECTORY), 0777) == 0)\n\n\n> /*\t\tif (errno == ENOENT && mkdir(vval(DIRECTORY), 0777) == 0)*/\n> \t\tif (errno == ENOENT && mkdir(vval(DIRECTORY)) == 0)\n\n\n\n\ndiff -r ray/src/util/rtcontrib.c ray_dev/src/util/rtcontrib.c\n342c342\n< \tif (fscanf(fp, \"%*s %d\", &pid) != 1 || kill(pid, SIGALRM) < 0)\n\n\n> \tif (fscanf(fp, \"%*s %d\", &pid) != 1 || kill(pid, SIGTERM) < 0)\n979c979,980\n< \tif (fseeko((FILE *)e->data, *(off_t *)p, SEEK_CUR) < 0) {\n\n\n> /*\tif (fseeko((FILE *)e->data, *(off_t *)p, SEEK_CUR) < 0) {*/\n> \tif (fseek((FILE *)e->data, (long)*(off_t *)p, SEEK_CUR) < 0) {\n\n\n\n\ndiff -r ray/src/util/SConscript ray_dev/src/util/SConscript\n24a25,27\n> ('rtcontrib',    Split('rtcontrib.c') + [Version],\n> \t['rttrace', 'rtscene', 'rtpic', 'rtfunc', 'rtproc', 'rtio', 'rtmath',\n> \t'rtargs', 'rtpath', 'rtcont', 'rtmem', 'rterror','ws2_32'])\n34c37\n< \t['rtpic','rtargs','rtio','rtcont','rtmem','rtpath','rtmath',\n\n\n> \t['rtproc','rtpic','rtargs','rtio','rtcont','rtmem','rtpath','rtmath',\n\n\n\n\nGreg wrote:\n> Then it's probable something is dying in the -f option processing\n> that has nothing to do with fseeko().  I'm checking the library path\n> with a call to getpath(), so if that was screwing up before, maybe\n> it's screwing up during the -f processing as well.\n\n\nGeorg wrote:\n> Which means we need to check my Windows version of getpath().\n> Francesco, do you have a debugger available to trace through\n> this? Or does it get better if you specify fixargv0.c correctly\n> with the RAD_ARGSCOMPAT variable? Do you have the RAYPATH set\n> correctly? (for getrlibpath(), by default it uses \";c:\\ray\\lib\")\n\n\nUnfortunately it is not working even with the latest changes.\nYep, the environment variables setup is fine.\nJust to clarify, rtcontrib works well and writes the output file,\nbut only when I use the -f and -o options together, it doesn't write the\noutput file. If I use the -f option alone, it writes the results\nto stdout, as required ...\nI could use gdb, but probably will need some more days, I'm\npretty busy at work these days and the next week is going to\nbe busier than the previous one ...\n\n\nThanks again!\n\n\nFrancesco\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2005-September/000651.html).</sup>", "attachments": [], "created_by_name": "Francesco Anselmo", "created_at": "September 17, 2005 at 11:01PM", "created_by": "Francesco_Anselmo", "parent_id": "radiance-dev_000641", "id": "radiance-dev_000651"}