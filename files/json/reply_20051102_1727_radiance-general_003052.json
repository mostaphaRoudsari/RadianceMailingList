{"body": "Hi Marija,\n\n\nThis is a good summary here with a lot of questions. I am not sure that \nI can answer all of the questions, I will try to address a few items though\n\n\nMarija Cvetkovic wrote:\n\n\n> Hi,\n> I have few questions about accurate modeling of different glazing. \n> I've read all previous discussions on this list, and now I'll try to \n> summarize my thoughts about this subject.\n> Suppose we want to simulate the behavior of some single or multiple \n> layer glazing in Radiance, and the data of available glazings can be \n> found in Optics5 database (actually IGDB).\n> These are few possible procedures how to define and use this material:\n>\n> PROCEDURE1\n> 1. convert glazing (all layers) data from Optics5 to Radiance.\n> 2. use output glass material for glazing definition.\n>\n> Problem:\n> *Glass reflectance is calculated implicitly, and values from Optic5 \n> database don't have any effect.\n> This can be solved by using trans.cal functional file, and changing \n> index of refraction to obtain appropriate reflectance.\n> *Dependence between light incident angle and transmittance/reflectance \n> is implicit and it is calculated using the algorithm for common glass \n> material.\n>\nAs I read \"trans.cal\" this is for converting from transmittance to \ntransmissivity, the latter value is used for the radiance \"glass\" \nmaterial type. I believe that the \"glass\" material that is output from \nOptics accounts for this translation. I think that maybe Chas Erhlich \ncould confirm this?\n\n\nNote though, quoting Greg from the file, that trans.cal is for an \n\"infinite series solution for an uncoated pane of glass.\" This is a \nsolution for a single pane only. I am not sure that adjusting the index \nof refraction is a valid way to \"adjust\" the reflectance and it still \nwould result on the same reflectance on both sides of the material. Most \nglass systems that use coated glass have different reflectances on the \noutside and inside.\n\n\n> PROCEDURE 2:\n> 1. convert glazing (all layers) data from Optics5 to Radiance.\n> 2. adjust BRTDfunc data, like Jack de Valpine suggested:\n> void BRTDfunc GlzSys_front_and_back\n> 10\n>    if(Rdot, <r_front_refl>, <r_back_ref>l) if(Rdot, <g_front_refl>, \n> <g_back_refl>) if(Rdot, <b_front_refl>, <b_back_refl>)\n>    <r_trans> <g_trans> <b_trans>\n>    0   0   0\n>    .\n> 0\n> 9 0 0 0 0 0 0 0 0 0\n> 3.Use this BRTD definition for glazing.\n>\n> Problem:\n> *No transmittance/reflectance dependence of incident angle is taken \n> into account!\n\n\nThis is just a hack to combine the two separate BRTDfunc definitions \noutput from Optics into one definition. You correctly note the problem \nwith this hack.\n\n\n> PROCEDURE 3:\n> 1.convert glazing (all layers) data from Optics5 to Radiance.\n> 2.Use BRTD definition and glazing.cal file to define angular \n> dependence of transmittance/reflectance values.  Definition would look \n> like:\n> mod BRTDfunc my_glazing\n> 10     rrho grho brho\n>        rtau gtau btau\n>        0 0 0\n>        glazing.cal\n> 0\n> 18     0 0 0\n>        0 0 0\n>        0 0 0\n>        FRRHO FGRHO FBRHO\n>        BRRHO BGRHO BBRHO\n>        RTAU GTAU BTAU\n> where:\n>    FRRHO FGRHO FBRHO is front normal spectral reflectance\n>    BRRHO BGRHO BBRHO is back normal spectral reflectance\n>    RTAU GTAU BTAU is normal spectral transmittance\n>\n> 3.Use this definition for glazing material.\n>\n> Problem:\n> *glazing.cal calculate these functions ONLY for coated and clear glass \n> with the cut- off point transmittance=0.654. Below that value it is \n> supposed that glass is coated, and above that it is clear.\n>\nI think that another important issue with this is that it is really \naccounts for only one type of coating and I do not think that it \naccounts for multi-pane assemblies.\n\n\n> PROCEDURE 4:\n> 1.convert each layer of glazing  from Optics5 to Radiance.\n> 2.Create input file for glaze.csh script (see question below)\n> 3.Call glaze.csh script and define 1 or 2 panel glazing, and all its \n> surfaces.\n> 4.Use BRDTfunc created as output of the script, as glazing material.\n>\n> Problem/question:\n> *Is it important what kind of glazing user defines? I know the main \n> goal of this script is to define fritted glass, but is the calculation \n> OK for user defined types of surface.\n>\nActually, I think that at the time we were interested both in coated and \nfrit glass, multi-pane assemblies, so I would not say the main goal of \nthe script if frit glass only. However I am not sure what you mean by \nyour question: \"is it important what kind of glazing user defines?\" Yes, \nyou need to correctly assemble a glazing system in Optics, and export \neach individual layer (up to two panes). I think that one can obtain \n100% coverage reflectances/transmittance for frit glass if you talk with \nthe manufacturer. The other thing that is important is the orientation \nof the geometry that the material is applied to, the normal needs to \npoint into the space. Note also that while the material may represent a \nmultisurface piece of real world geometry, the representation in \nRadiance is a single surface piece of geometry.\n\n\nIf you are going to use this script I highly recommend that you export \nyour own data and use the -f option of the script so you can use a data \nfile that defines your own coated glass and frit glass (if needed) options.\n\n\nFor frit glazing systems, one problem with this script is that it cannot \naccount for systems where the frit and coating are on the same surface. \nAlso currently the scrip depends on the \"clear\" glass data hard wired \ninto the script.\n\n\n> QUESTIONS:\n> 1.Which of this procedures should be used in which real case? I \n> suppose for single pane clear glass we could use only glass primitive. \n> Can glazing.cal be used for all coated glazings, and glaze.csh for \n> fritted ones?\n\n\nI think that the short answer is that glazing.cal does not account for \nall coated glazing and is only for a single pane glazing system. \nGlaze.csh is currently the only thing that creates some opportunity to \nuse data from something like Optics in a more functional way. Glaze.csh \nis not only for fritted glass.\n\n\n> 2.What is the format of input file for glaze.csh script?\n\n\nThe input file should look something like the following it has a header \nline followed by one line per glazing material type:\n\n\nSurface   Tr   Tg   Tb   Rcr   Rcg   Rcb   Rgr   Rgg   Rgb   Part\n<surface name>   <r trans>   <g trans>   <b trans>   <r coated refl>   \n<g coated refl>   <b coated refl>   <r glass side refl>   <g glass side \nrefl>   <b glass side refl>   <boolean switch [0 or 1] to indicate if \nmaterial can have partial coverage, such as a frit>\n\n\nAs I recall this file is pretty sensitive to spacing of the values!\n\n\n> 3.What if glazing have more than 2 layers?\n\n\nYou should contract Greg to extend the script to account for more layers...!\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2005-November/003052.html).</sup>", "attachments": [], "created_by_name": "Jack de Valpine", "created_at": "November 02, 2005 at 05:27PM", "created_by": "Jack_de_Valpine", "parent_id": "radiance-general_003051", "id": "radiance-general_003052"}