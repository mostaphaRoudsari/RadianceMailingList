{"body": "On 14.01.2006, at 16:23, william reynolds wrote:\n\n\n> hi there\n> i'm fairly new to the radiance package, and to rendering in\n> general, but i have a fairly specific project on the go, with\n> which i need some help.\n>\n> i am trying to use radiance to render a relatively simple model\n> geometrically - just a simple room, with a box sitting on the\n> floor - but with up to 100 or so light sources. but the difference\n> is that i want to get a separte image file for each light\n> source - i.e.  hundred or so images, with only 1 light on in each.\n> i will then use superposition and recombine the images later,\n> allowing me to vary the intensities of each light source.\n\n\nI hope you are aware of the fact that a incandescent light source\nwill have a shift of the spectrum in it's output when you change\nthe intensity (reduce the power for the lamp). But I don't think\nyou're bothered about this (small) aspect, so let's move on.\n\n\n> is there any kind of built in functionality in radiance to\n> allow me to do this, or do i have to write a shell script or\n> something (and if so, can anyone point me towards a good place\n> to learn how! i come from a very winndows based background)\n\n\nThe \"build in functionality\" of Radiance is it's simplicity.\nSmall tools for small tasks. And yes, you will have to write\na script for your problem. But it will be a simple script.\n\n\nFirst you have to organize your scene data:\n\n\na) everything that is static in the scene in one file\nb) a bunch of files containing everything that isn't\n    (in your case 100 files with the description of 1 light\n     source each).\nc) definitions of i.e. viewpoints or render parameters\n\n\nThe basic steps to create one image are:\n\n\n1) Compile a scene octree from the static and one dynamic file\n2) Render the image with the created octree as input\n\n\nI don't know much about your light so I assume you have\ncreated a \"static.rad\" file, 100 \"dynamic.001\" etc. files\nand a file with render options \"render.opt\".\n\n\nCreating your images is as simple as:\n\n\nfor i in `seq -w 100`\ndo\n   oconv static.rad dynamic.${i} > tmp_scene.oct\n   rpict @render.opt tmp_scene.oct > image_${i}.pic\ndone\n\n\nNot as bad as it sounds, eh?\n\n\nThere is plenty of room for improvements: in particular, you don't\nneed all the 100 files for light sources if the vary only in\nposition or in other small details. That could be done within\nthe \"for ...\" loop, too. All depends on your needs.\n\n\n\n\nFor a simple introduction to bash google for \"bash tutorial\"\nand try a few of the hits. It depends on you what's the right\nintroduction level. You can use any other scripting language\nas well (Python, Perl, TCL) if you already know one.\n\n\n\n\nHTH,\nThomas\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2006-January/003262.html).</sup>", "attachments": [], "created_by_name": "Thomas Bleicher", "created_at": "January 14, 2006 at 08:55PM", "created_by": "Thomas_Bleicher", "parent_id": "radiance-general_003258", "id": "radiance-general_003262"}