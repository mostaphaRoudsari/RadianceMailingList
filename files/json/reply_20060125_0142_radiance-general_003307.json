{"body": "Hi Christian,\n\n\nThanks for reading through the documentation.  I know it can be a  \nfrustrating exercise, trying to find what you're looking for in the  \nmany, widely dispersed sources available.  It looks like you did a  \nthorough job.\n\n\n> ...\n> 6. at first i used 'rtrace' for the irradiance data:\n> *\n>       *echo \"1 0 0 0 0 1\" |rtrace -I -h lux_test.oct\n>\n> /      4.154708e+01 2.754719e+01 1.059043e+01     /*First  \n> question:  Are these irradiance values for RGB with the unit 'w/ \n> square meter' ?*\n\n\nYes, sort of.  If your scene consisted of purely gray surfaces with  \nno radiation outside the visible wavelength limits, then the numbers  \nwould correspond to watts/meter^2 exactly.  However, the real world  \nhas stuff going on in UV and IR wavelengths (and beyond), and these  \nshould be included in a true measure of radiant flux.\n\n\nMore technically, the values used in Radiance (by convention)  \ncorrespond to a transformation of the CIE XYZ coordinates to an RGB  \ncolor space, with a conversion factor of 179 lumens/watt to make a  \nvague correspondence to radiometric units with the above  \nassumptions.  So long as the same conversion is applied in reverse  \nwhen getting back to photometric quantities, all is well.  The exact  \ncolor transform used is your next question.\n\n\n> 7. now i measured the illuminance:\n>\n>     $ echo '1 0 0 0 0 1' |rtrace -I -h  lux_test.oct |rcalc -e  \n> '$1=*47.4**$1+*120**$2+*11.6**$3'\n>\n>         *5397.84338*\n> -- this value is really satisfying, my collected data is *5400 lux!*\n>\n> *Second question: Where do the factors of  *47.4/179 =* 0.26 ,  \n> *120/179 =* 0.67 and *11.6/179 =* 0.065 come from?\n>\n> *I only know the standard factors from video for the EBU -  \n> Phosphors. There the luma value is: Y = 0.299*R+0.587*G+0.114*B\n> I tried these ones, but the result worse, in fact it is *5334 lux*.\n\n\nThe RGB color space used in Radiance is defined by the following  \nconstants, defined in ray/src/common/color.h:\n\n\n#define  CIE_x_r                0.640           /* nominal CRT  \nprimaries */\n#define  CIE_y_r                0.330\n#define  CIE_x_g                0.290\n#define  CIE_y_g                0.600\n#define  CIE_x_b                0.150\n#define  CIE_y_b                0.060\n#define  CIE_x_w                0.3333          /* use true white */\n#define  CIE_y_w                0.3333\n\n\nThese same constants are defined in ray/src/cal/cal/xyz_rgb.cal for  \nconvenient conversion between XYZ and RGB coordinates.  The Y(R,G,B)  \nfunction from this file reduces to:\n\n\nY(R,G,B) = 0.26510582*R + 0.67010582*G + 0.0647883598*B;\n\n\nwhich is basically the same as what you have above.  Except for the  \ndifference in the green channel chromaticities and the white point,  \nthese primaries are in fact the same as used for the standard sRGB  \ncolor space.  If it wouldn't have thrown everything off slightly with  \nlittle benefit, I might have switched to the sRGB primaries in  \nRadiance when this standard came out.\n\n\nIn fact, the color primaries in Radiance can be whatever you choose  \nthem to be.  As I said, this is all by convention, and the actual  \ncalculation only converts from RGB to luminance to determine whether  \nor not to truncate the ray tree with the -lw option.  Since this is  \nreally a minor effect, it actually doesn't matter what color space  \nyou render in, and if you want to know how Radiance may be used to  \nobtain more accurate color results, consult the following paper:\n\n\n\thttp://www.anyhere.com/gward/papers/egwr02/\n\n\nI hope this helps.\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2006-January/003307.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "January 25, 2006 at 01:42AM", "created_by": "Greg_Ward", "parent_id": "radiance-general_003306", "id": "radiance-general_003307"}