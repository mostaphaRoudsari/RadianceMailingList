{"body": "I spent a little time looking at the Moeller-Trumbore ray-triangle  \nintersection routine.  I could in principal apply their technique  \nrather than the Segura-Feito method I'm using.  In comparison, the M- \nT algorithm requires one less cross-product, but two more divides  \nthan S-F.  Furthermore, M-T computes the Barycentric coordinates and  \nintersection distance simultaneously, which I end up having to  \ncompute following a successful test.  However, I wouldn't be able to  \ncache edges like I am with S-F, which probably saves 40% of the  \ncomputation time.  Since I reject between 5 and 10 triangles for  \nevery intersection I end up computing, and only calculate Barycentric  \ncoordinates on at most one ray per mesh, my gut feeling is that the M- \nT algorithm would actually be slower if I were to replace the S-F  \nalgorithm I have in there.  Of course, you are welcome to try it.   \nThere is also a fair amount of room for optimizing the code in there  \nusing assembler, but I never bother with that....\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2006-February/003441.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "February 25, 2006 at 10:42PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_003438", "id": "radiance-general_003441"}