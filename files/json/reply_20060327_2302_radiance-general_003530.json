{"body": "Hi Will,\n\n\n> 1. using blackbody.cal:\n> -should i use this to calculate the emitted power for a selection  \n> of lambda values (presumeably using a separate script to input the  \n> lamda values)? if so, how do i then go about converting the results  \n> into XYZ values, so that i can then convert to the sharp rgb colour  \n> space? (presumably illumcal.csh uses the power vs. lamda data and  \n> CIE standard observers, but i dont follow how to use it! also, does  \n> it produce RGB or XYZ values?)\n\n\nI gave you the result for a 3200K black body.  To compute the same  \nfor other temperatures, illumcal.csh should work.  I get weird  \nresults for the correlated color temperature, and I think there is  \nsomething wrong with that part of the calculation, but the CIE (x,y)  \nvalues seem OK.  If I run:\n\n\n( echo '# Black Body at 3200K' ; cnt 100 | rcalc -e 'lambda=(780-350)/ \n99*$1+350' -f blackbody.cal\n-e temp:3200 -e '$1=lambda;$2=u(lambda,temp)' ) > bb3200.dat\ncsh -f illumcal.csh bb3200.dat\n\n\nI get nearly the same results as before.\n\n\n> -or should i use it to calculate the cromaticity (x,y) coordinates?  \n> if so, can i  then simply use rgb.cal (if this is what its  \n> equations do!) to convert the (x,y) cromaticity results to RGB  \n> values, ignoring the Y, \"brightness\", value?\n\n\nCIE (x,y) chromaticity coordinates can be converted to CIE XYZ if you  \nhave a Y value using:\n\n\nX = x/y*Y;\nZ = (1-x-y)/y*Y;\n\n\nSimilarly, you can get CIE (x,y) from XYZ using:\n\n\nx = X/(X+Y+Z);\ny = Y/(X+Y+Z);\n\n\n> -currently (ie before i apply any colour filters) my sources are  \n> simply white, i have ignored their colour temperature. when i  \n> applied the colour filteers i was going to use the XYZ data given  \n> for a 3200K source, rather than that measured with the C source. i  \n> was hoping that this would mean i do not have to add the effect of  \n> the colour of the source as well, is that correct?\n\n\nYes, that is correct.  It also means that they should have done you  \nthe favor of premultiplying the source and filter spectra, so you  \ndon't have to.\n\n\n> 2.using neutral light sources\n> -i think i understand the principles of what you said in your  \n> paper, but i dont really follow how to implement this!\n> my scene has only one source in it, so this is what i understand i  \n> should do:\n> once i have calculated the sharp RGB values of the output of my  \n> source i should divide every material colour by the source colour  \n> (individually for r, g, b) and replace the source with a white one.  \n> should this white source be normalised to a value of 1 1 1, and the  \n> intensity of the source be taken into account in the  \n> premultiplication above, or should the intensity of the source left  \n> out of these premultiplications?\n\n\nYou should premultiply, not divide, your source and scene colors, and  \npreferably do this over each wavelength of the visible spectrum.  If  \nyou don't have spectral data, then yes, you will just be multiplying  \nthe (Sharp) RGB values.  The intensity of the source should not be  \ntaken into the scene colors, so that you don't have reflectances  \ngreater than 1, which would be a disaster.\n\n\n> how do i then regain the colour information after the rendering? is  \n> it as simple as postmultiplying every pixel in the pixel by the  \n> inverse of the appropriate r, g or b value used in the pre- \n> multiplication?\n\n\nYou don't need to \"regain\" the color information, as you have  \neffectively accomplished a vonKries white balance during rendering.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2006-March/003530.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "March 27, 2006 at 11:02PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_003524", "id": "radiance-general_003530"}