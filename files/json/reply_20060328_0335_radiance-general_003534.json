{"body": "Hi Will,\n\n\n> -converting radiance RGB to sharp RGB (all my material reflectances  \n> are in RGB, eg from the materials file in lib/) and i'm not sure  \n> how to convert them to sharp rgb. i thought i could use  \n> xyz_rgb.cal, by converting RGB to XYZ, then the XYZ values to sharp  \n> RGB. but i thought i'd check my idea by converting RGB to XYZ, and  \n> then converting it back again, thinking it should be the same, and  \n> its not.\n\n\nThis is the correct method.  Converting to and from works for me:\n\n\n% icalc xyz_rgb.cal\nX(.351,.918,.015)\n$1=0.480220278\nY(.351,.918,.015)\n$2=0.709181111\nZ(.351,.918,.015)\n$3=0.134033796\nR($1,$2,$3)\n$4=0.351\nG($1,$2,$3)\n$5=0.918\nB($1,$2,$3)\n$6=0.015\n\n\nYou could have a problem if you go from XYZ through RGB to XYZ again,  \nsince RGB gets truncated to zero, where negative values do in fact  \nexist for some visible XYZ colors.\n\n\n> -you say that a white popint adjustment is effectively made during  \n> the rendering. is this just the shift needed to account for the  \n> different viewing conditions (ie being in the room, and looking at  \n> the monitor)?\n\n\nNo, it really assumes that you are viewing under the same tungsten  \nilluminant.  To complete the white point conversion to some other  \nadaptation, you need to apply the final matrix equation in Section 2  \nof the paper.  This can be done using ra_xyze and the -p option if  \nyou happen to know your display's primaries, e.g.:\n\n\n\t% ra_xyze -r -p .603 .352 .289 .590 .146 .066 .319 .348 sharp.pic  \ndisplay.pic\n\n\nThis does not account for the surround condition, but I don't know  \nwhat to do for that, either.\n\n\n> -premultiplying surface reflectances. the RGB values i am geting  \n> for the XYZ data i have for the filters are much bigger than 1, so  \n> premultiplying will give reflectances much bigger than 1.\n> for example:\n>\n> the RGB values for a certain red filter = 55, -3.6, -0.7 (from  \n> X,Y,Z=21.3, 9.1, 0) [i thought the range for these values was  \n> (o:inf)?]\n\n\nNope, they should all be between 0 and 1.  Since they are not, you  \nshould assume these are percentages and divide them by 100.  This  \nstill yields a negative value for green, but I get a Sharp RGB of  \n(0.2614, -0.0143, 0.0035).  I'm not sure how you got your values --  \nare they not Sharp RGB?  The xyz_rgb.cal file should truncate the  \ngreen value to zero.  Your XYZ value seems to be right on the edge of  \nthe visible boundary.  A Z value of 0 is highly unusual.\n\n\n> the RGB reflectance for a white painted wall = 0.9, 0.8, 0.8\n>\n> so the compensated RGB reflectances would be 49.5, -10.08, -0.56  \n> (ie. 55*0.9 etc) But these should all be between 0 and 1 shouldn't  \n> they?\n\n\nYes, or nearly.  Actually, you can have values slightly greater than  \n1 in some cases, but negative values won't even be storable in a  \nRadiance picture unless you use some fancy means to render with  \nrtrace and convert from RGB to XYZ prior to storing the picture.\n\n\n> should i simply normalise the filter's RGB values to sum to 1, or  \n> am i missing something more important here?\n\n\nNo, don't do that.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2006-March/003534.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "March 28, 2006 at 03:35AM", "created_by": "Greg_Ward", "parent_id": "radiance-general_003524", "id": "radiance-general_003534"}