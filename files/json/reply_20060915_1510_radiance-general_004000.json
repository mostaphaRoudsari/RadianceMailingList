{"body": "Hi Lars,\n\n\n>> Just finished with the Radiance workshop, so catching up on e-mails.\n>\n> I am curious to hear about it, will there be a documentation cd  \n> available again? Hope ou had a nice time.\n\n\nYes, John plans to assemble people's talks into a CD to share at  \nradiance-online.  I'm sure he'll announce it when it's available.\n\n\n>> The \"glow\" type with an effective radius still illuminates the  \n>> scene correctly.  Base your radius on the distance over which you  \n>> expect your sources to be important.  Past that distance, they  \n>> will be considered as \"indirect\" sources.  One important caveat:   \n>> the smaller and brighter they are, the more artifacts you will see  \n>> from them if your radius is too small.\n>\n> I will hide it behind an illum. The configuration is as follows: I  \n> group my (artificial) light sources and define one illum sphere per  \n> groups of sources. That way, first I will have much less sources in  \n> the indirect calculation, and second avoid these artefacts.  \n> Actually I was not aware about the advantage of using glow instead  \n> of light modified sources. The actual sources are small oil lamps,  \n> which I expect to be effective only indirect a groups - the room is  \n> too large compared to the lamps.\n\n\nThis should work fine.  You should set your glow radius to the  \ndiameter of your illum sphere -- assuming you are using a sphere to  \nenclose them.  Radiance will ignore all glows inside an illum, as  \nthis is a recommended optimization for light sources.\n\n\n>> Another tip to reduce calculation time if you are using a recent  \n>> version of Radiance (3.6 or later) is that large surfaces in the  \n>> main octree will be tracked in the shadow cache.  Neither  \n>> instances nor meshes will work as obstructors, so if you must  \n>> instantiate geometry, leave at least some large occluders in the  \n>> main octree to help in the shadow cache.\n>\n> ;-) Do you know my model that well? Thank you, this may help a lot.  \n> My model is build up in a hierarchic way, with the top elements  \n> often being instances. Maybe I should even accept overlaps just to  \n> get some occluders without changing the model too much. If I keep  \n> the visible geometry in instances, but have some large faces in the  \n> main octree a approximations to these main elements, which are  \n> invisible because completely covered by the instances' geometry,  \n> should I expect some performance gain from the shadow cache?\n\n\nYou should.  I coded the shadow cache to look for just such \"hidden\"  \noccluders.\n\n\n>> There is no such hack.  It's not really physical, is the problem.\n>\n> Yes, but it is useful to exclude patterns and textures from the  \n> ambient and stay with the base modifier.\n\n\nApologies to Carsten for my careless remark.  Of course, it is  \npossible to do this correctly so that it is physical.  Likewise,  \nthere are many non-physical things you can do in Radiance \"classic\"  \nand care is required always if you are using any simulation as a  \npredictive tool.  As Carsten pointed out in his e-mail, this only  \nsaves substantial time when the texture/pattern evaluation is  \nexpensive, as it is for complicated procedural descriptions.\n\n\nRegarding Radzilla, I'll reiterate my previous position that I am  \ndelighted about this branch, and I see it as a great service to our  \nlittle corner of the Open Source world.  It takes the burden off me  \nwhen people ask for \"artistic\" additions to Radiance, which have a  \nmuch better place now in Radzilla.  Thanks, Carsten!\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2006-September/004000.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "September 15, 2006 at 03:10PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_003983", "id": "radiance-general_004000"}