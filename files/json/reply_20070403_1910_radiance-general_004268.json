{"body": "Hi Iebele,\n\n\nTo use local u,v coordinate mapping (Lu,Lv) you need to use obj2mesh \nrather than obj2rad.\n\n\nHere is the process for making a mesh element:\n\n\n    Define mats.tree.rad using simple materials first as an example. The\n    names of the materials must correspond to the names of the materials\n    indicated for the .obj geometry (take a look in the .mtl file to get\n    the names).\n\n\n        mats.tree.rad:\n\n\n            void plastic Bark\n            0\n            0\n            5 1 1 1 0 0\n\n\n            void plastic Leaf\n            0\n            0\n            5 1 1 1 0 0\n\n\n    Generate tree.rtm as follows:\n\n\n        obj2mesh -a mats.tree.rad tree.obj > tree.rtm\n\n\n    Creat tree.mesh.rad as follows:\n\n\n        tree.mesh.rad:\n\n\n            void mesh tree\n            1 tree.rtm\n            0\n            0\n\n\n    Test you mesh:\n\n\n        objview tree.mesh.rad\n\n\nNow lets apply more complex materials using local u,v coordinate \nmapping. To do this you need the following image data:\n\n\n       1. bark.pic\n       2. aspect ratio for bark.pic (y/x), lets call it <arB>\n       3. leaf.pic\n       4. aspect ration for leaf.pic (y/x), lets call it <arL>\n       5. leaf.matte.pic - this is the alpha/matte channel for the leaf.\n          The correct way to setup the matte is  for white to represent\n          the leaf and black to represent what is not the leaf. This\n          means that you may have to invert the matte the comes from xfrog.\n\n\n    Now lets create the complex materials in mats.tree.rad\n\n\n        mats.tree.rad:\n\n\n            #BARK definition\n            void colorpict bark.tile\n            7 red green blue Bark.pic . frac(Lu) frac(Lv)*<arB>\n            0\n            0\n\n\n            bark.tile plastic Bark\n            0\n            0\n            5 1 1 1 0 0\n\n\n            #LEAF definition\n            void colorpict leaf.tile\n            7 red green blue Bark.pic . frac(Lu) frac(Lv)*<arL>\n            0\n            0\n\n\n            leaf.tile plastic leaf.map\n            0\n            0\n            5 1 1 1 0 0\n\n\n            leaf mixpict Leaf\n            7 leaf.map void green leaf.matte.pic . frac(Lu) frac(Lv)*<arL>\n            0\n            0\n\n\n    Now recompile your mesh:\n\n\n        obj2mesh -a mats.tree.rad tree.obj > tree.rtm\n\n\n    Now view it:\n\n\n        objview tree.mesh.rad\n\n\nYou should add Bark and Leaf to your ambient exclude file/list if you do \nnot want them in the ambient calculation. You can use tree.mesh.rad \nalong with replmarks, xform or some other method to deploy the tree \nobject in the scene.\n\n\nThis should work fine. Let me know if you have any questions.\n\n\n-Jack\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2007-April/004268.html).</sup>", "attachments": [], "created_by_name": "Jack de Valpine", "created_at": "April 03, 2007 at 07:10PM", "created_by": "Jack_de_Valpine", "parent_id": "radiance-general_004260", "id": "radiance-general_004268"}