{"body": "> Installing a package with more than 100 executables in everybodys\n> /usr/bin/ is one of the most unpleasant things you can do in this\n> context. \n\n\nIt's not the first and not the last package which brings a lot of\nbinaries. The only difference is that other large packages try to make\nit obvious where a binary belongs to, for example by adding an\nappropriate prefix. Which is something I wish for all coming additions\nto radiance - please choose an appropriate name, for example rad-foo\ninstead of foo.\n\n\n> The standards offer the alternative of /usr/lib/<package>\n> exactly for this case.\n\n\nRight, for programs which are usually not executed by the normal user.\nSplitting them doesn't sound like an easy task on the first look, but it\nshould be possible. But this would also include that all tools know\nabout the extra path without messing with $PATH.\n\n\n> Adding two extra paths in an user's\n> environment is a trivial exercise. Remember that your target\n> audience are Linux users, who do this all the time.\n\n\nOh? I haven't touched $PATH for years now, and I wouldn't know any\nreason why I should do so. Binaries which are supposed to be executed by\na user go into /usr/bin (or /usr/local/bin, if they're not installed by\na package). To cite the FHS:\n/usr/lib includes object files, libraries, and internal binaries that\nare NOT intended to be executed directly by users or shell scripts.\n\n\nAnd I'm not going to violate that because somebody prefers to hide\nRadiance to make it even harder to use than necessary.\n\n\n> Those people who would fail, just because they don't know how\n> to edit their ~/.profile or ~/.cshrc, will not be able to do\n> anything useful with Radiance anyway.\n\n\nBad enough, this sounds more like something to fix in Radiance. But yes,\nI guess people who're able to write a makefile should be able to set\nsomething like RAYPATH somewhere in their environment.\n\n\n> Don't make life miserable\n> for the knowledgeable users because of them.\n\n\nIf you're knowledgeable AND set extra PATHs anyway, it shouldn't be a\nproblem to set your PATH to a directory where compatibility links are\nlocated (you should even be able to use sed!). Also this is exactly the\ndamn opinion why a LOT of open source tools are not usable for beginners\n- they're only used by 'knowledgeable' people, why the hell should we\nmake things simple non people with less knowledge? Why add\ndocumentations at all (this does NOT go against radiance - I'm amazed by\nthe detailed documentation, thanks Greg!)? And so on. If you prefer that\nopen source software stays something which is usable for knowledgeable\npeople only, please go and hide in your cave, take the source and\ncompile it to /yes/I/am/TEH/BRAIN/and/I/have/to/prove/it - you're free\nto do so.\n\n\n> Renaming genbox, with all the contreived workarounds that have\n> been proposed, would only solve *our* problem *for now*. But\n> because we'd occupy such a large portion of the namespace in\n> /usr/bin/, installing there would inevitably cause more problems\n> for other package authors in the future. The problems it would\n> cause for Radiance users right now have already been mentioned.\n\n\nA name clash may happen always. For most tools from radiance I don't see\na high chance that this will happen, although there're a few with very\nshort names which are prone to such problems obviously. But as Debian is\nthe largest (or one of the largest) distributions, and we had only two\nname clashes, I don't see a big problem here. If you'd install _all_\npackages (including those in non-free, and packages you can't install at\nthe same time, and including unofficial repositories like\ndebian-multimedia), you'd have\n0 bzed at hal:~$ apt-file search /usr/bin | wc -l\n39033\nfiles in /usr/bin. Feel free to create theories about the probability of\nanother name clash while looking at the time it took to get those 39033\nfiles into /usr/bin.\n\n\n\n\n> (back into my cave again)\n\n\nGood idea.\n\n\n\n\nIf you prefer to have a growing community Radiance must be attractive\nfor new users, and as easy to use as possible. With the given examples\nand what is shipped in the radiance-materials package a not too dumb\nstudent should be able to create something based on that, which\nis/should (imho) at least be enough for an instructional curse.\n\n\nSomething I also thought about was to create a webpage which allows\npeople to upload photos of materials and the MacBeth chart, so at least\na big enough material base would exist for people (like students/....)\nwho're interested in learning to use radiance, and who like to have a\nnice rendering at the end, but who don't need exact results at the end.\nUnfortunately I doubt I have time for that soon.\n\n\n\n\nBest regards,\n\n\nBernd\n\n\n\n\nBernd Zeimetz\n<bernd at bzed.de>                         <http://bzed.de/>\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2007-November/000807.html).</sup>", "attachments": [], "created_by_name": "Bernd Zeimetz", "created_at": "November 05, 2007 at 11:26AM", "created_by": "Bernd_Zeimetz", "parent_id": "radiance-dev_000784", "id": "radiance-dev_000807"}