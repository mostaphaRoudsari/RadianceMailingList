{"body": "On 20 Mar 2008, at 21:09, Rob Guglielmetti wrote:\n\n\n> There seems to be a problem with this new version.  When I export,\n> it creates a bunch of materials but names them all \"default_material\".\n\n\nI couldn't reproduce Rob's problem here but there is a situation\nwhere something similar happens (semi-)intentionally:\n\n\nIn 'by layer' export the script uses the layer of the polygons\nto define the material. I assume that most imports from CAD will\nkeep the layer assignment as it was and so you could use this\nto create layers like 'concrete', 'wall internal', 'wall external'\nwhich after the export would be assigned to materials of the same\nname (or the Radiance save version with spaces replaces by '_').\n\n\nAt the moment the only thing the exporter can do is to create a\ndummy material file with all of these layer/material names aliased\nto the default material. Hence the unmodified export will be grey.\nYou now should use the references in the 'material.rad' file to\ncreate your own material file. The simplest way is to replace it\nwith a standard file that contains default material descriptions.\nAs long as your layer names match the material names this should\nwork out of the box.\n\n\nI was planning to add a function to read existing material files\nand use the definitions in this file. However, for that I have to\nwrite a parser for Radiance syntax in Ruby and that's not at the\ntop of my TODO list right now.\n\n\n> Perhaps the new material library function is causing this?  Is there\n> a way to get the previous version back? On the google site, you have\n> a ver_c but you also made a ver_d prior to the current one, which\n> worked great for me.\n\n\nI do not remember a previous v00d but I referred to everything since\nv00c as 'v00d'; it just never had a release date next to it.\n\n\nYou can go to the google code site and check the existing revisions\nhere:\n\n\n\thttp://code.google.com/p/su2rad/source/list\n\n\nThen you can use any SVN client to get the revision you want or\nuse your web browser to get them individually.\n\n\n> Maybe I'm just not using the material library function properly?\n\n\nThe only thing you could do right now is place a Radiance material\nfile next to the material's '*.skm' file in your Sketchup installation.\nThe content of this file would be use instead of the replacement\nso the names have to match! It's not my preferred way to handle\nmaterials but it was possible without 'understanding' the contents\nof the file and therefore quick and easy to do.\n\n\nNOTE: I have found another problem with the material assignment\n       that causes the rendering of the scene to fail due to missing\n       material definitions. This happens with the 'by color' mode\n       and is fixed in the current SVN.\n       I also noticed that the 'by color' mode does not behave as\n       it's supposed to do. This might be related to components and\n       therefore not such a problem but I see that I have to work on\n       this for a while before a 0.1 release.\n\n\n\n\nAnyhow, I hope it still helps some of you out there.\nThomas\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2008-March/004876.html).</sup>", "attachments": [], "created_by_name": "Thomas Bleicher", "created_at": "March 21, 2008 at 05:52AM", "created_by": "Thomas_Bleicher", "parent_id": "radiance-general_004852", "id": "radiance-general_004876"}