{"body": "Hi Greg!\n\n\nThanks for leads. I tried the settings you suggested but problem still \noccured. I continued my search and I found out what was wrong: the -I \nparameter! I used -i and I get as earlier table of zeros plus one \ncorrect value (8829, this same value I get when I use only -ov). The \nproblem is still with distance. For this zero values sometimes distance \nl equals 0 (most of rays) and sometimes it's normal value (from more or \nless 1.0005 to  1.5955). For non-zero value (8829) distance l=0.01).\n\n\nI also noticed, that when I use -me parameter (the value of -me 0.2 0.2 \n0.2 is not so large, I mean for test calculations, not for real media) \nRadiance counts the L(s) value using l=1.156, this is exactly average of \n  distances l for this zero values! This is quite strange to me...\n\n\nAnyway, this case is solved.\n\n\nFurther contemplations of problem:\n\n\nI started this discussion, because I want to calculate some formula. \nFirst I thought, that it will be possible to compute it using results \nget from rtrace (value and distance for single ray) but now I know it's \nmuch more complicated. In the file with results there are a lot of data \nthat are finally casted away (aren't they?), so I think that operations \non this data is not a good idea.\n\n\nMy new concept is to write(change?) a few additional lines to code of \n\"rayparticipate\" function. However I don't really understand this code... :(\nI can't find where is hide this formula\nL(s)=L(0)*exp(-ext*s)    (assume albedo=0)\nI would like to add to formula above some value according to expression\nL1(s)=L(s)+[L(0)-L(s)]*[1-exp(-ext*s)]\nI want \"rayparticipate\" function to return me this L1(s) value instead \nof L(s). Is this possible? Could you tell me where and what I have to \nadd/change in code of this function? (I attach the code below)\nI also thought about write new function similar to \"rayparticipate\" but \nit possibly required more changes (not in raytrace.c but also in a few \nanother files).\n\n\nI will be very thankful for help.\nRegards, Marcin\n\n\n\n\nextern void\nrayparticipate(            /* compute ray medium participation */\n     register RAY  *r\n)\n{\n     COLOR    ce, ca;\n     double    re, ge, be;\n\n\n     if (intens(r->cext) <= 1./FHUGE)\n         return;                /* no medium */\n     re = r->rot*colval(r->cext,RED);\n     ge = r->rot*colval(r->cext,GRN);\n     be = r->rot*colval(r->cext,BLU);\n     if (r->crtype & SHADOW) {        /* no scattering for sources */\n         re *= 1. - colval(r->albedo,RED);\n         ge *= 1. - colval(r->albedo,GRN);\n         be *= 1. - colval(r->albedo,BLU);\n     }\n     setcolor(ce,    re<=FTINY ? 1. : re>92. ? 0. : exp(-re),\n             ge<=FTINY ? 1. : ge>92. ? 0. : exp(-ge),\n             be<=FTINY ? 1. : be>92. ? 0. : exp(-be));\n     multcolor(r->rcol, ce);            /* path extinction */\n     if (r->crtype & SHADOW || intens(r->albedo) <= FTINY)\n         return;                /* no scattering */\n     setcolor(ca,\n    \tcolval(r->albedo,RED)*colval(ambval,RED)*(1.-colval(ce,RED)),\n     \tcolval(r->albedo,GRN)*colval(ambval,GRN)*(1.-colval(ce,GRN)),\n     \tcolval(r->albedo,BLU)*colval(ambval,BLU)*(1.-colval(ce,BLU)));\n     addcolor(r->rcol, ca);            /* ambient in scattering */\n     srcscatter(r);                /* source in scattering */\n}\n\n\n\n\nGreg Ward pisze:\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2008-April/004953.html).</sup>", "attachments": [], "created_by_name": "Marcin Gawro\u0144ski", "created_at": "April 24, 2008 at 04:24AM", "created_by": "Marcin_Gawro\u0144ski", "parent_id": "radiance-general_004888", "id": "radiance-general_004953"}