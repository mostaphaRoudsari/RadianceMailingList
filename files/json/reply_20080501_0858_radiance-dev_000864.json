{"body": "Hi Peter,\n\n\nThanks for your suggestions.  Sorry about not including the setvbuf()  \ncall in the release -- I was kind of hoping you'd run the timings for  \nme, since you're the one with the giant octrees.  I am a little wary  \nof this call, since it has given me grief in the past.  From my  \nperspective, it's up to the system to decide how large i/o buffers  \nshould be for peak efficiency.  My prediction in this case is the  \ntime involved in the other parts of reading octrees and meshes will  \novershadow the system read times, even on NFS.\n\n\nI took a look at the warnings, and got about halfway through the  \n\"possible unintialized variable\" cases without spotting anything  \nwrong, so I gave up.  If you want to go in and initialize these  \nvariables to quiet the warnings, be my guest.  The only thing I ask  \nis that you initialize them to an illegal value that will cause a  \nruntime error, because I'd want to know if they really weren't being  \nset properly, and leaving them uninitialized is my usual method  \n(since they just get whatever random data is on the stack in most  \nsystems).  For me, fixing the warnings makes debugging more difficult  \nrather than easier.  I did fix a couple of the other warnings,  \nthough.  Thanks for sending them.\n\n\nRegarding your btw3, I did think of compiling on radiance-online, but  \nI wasn't sure how to get a good, portable set of binaries out of it.   \nI don't really know what I'm doing on Linux.\n\n\nCheers,\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2008-May/000864.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "May 01, 2008 at 08:58AM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_000856", "id": "radiance-dev_000864"}