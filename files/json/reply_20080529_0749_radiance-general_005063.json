{"body": "Just adding my two cents to this...\n\n\nThe pfilt option (1) Jack suggests is a good one, and may be combined  \nwith the others as well.  The pcompos option (2) is a little more  \nrisky, as this program ignores/removes whatever exposure changes were  \nmade to the picture, so if it isn't straight out of rpict, you may  \nget different values than you expect.  The scripting option (3) is  \nvery well-done, but I don't think you need to include the rayinit.cal  \nfile on the command line, as Jack has transcribed and modified the  \nrelevant functions into the -e arguments.\n\n\nOne other comment is if you only want a few pixels out of an image,  \nvwrays connected to rtrace is much simpler and faster.  Rather than  \ngenerating a whole picture, just use:\n\n\nvwrays -i -vf view.vf -x ${xres} -y ${yres} | rtrace [options] octree\n\n\nThen, on the input to vwrays, type (or redirect) the desired x and y  \npixel coordinates; vwrays will produce the corresponding ray sample,  \nwhich rtrace will compute for you.\n\n\nFinally, no one mentioned that ximage (and Photosphere and others)  \ncan query individual values interactively.  I don't know if this will  \nwork in your application.\n\n\nCheers,\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2008-May/005063.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "May 29, 2008 at 07:49AM", "created_by": "Greg_Ward", "parent_id": "radiance-general_005059", "id": "radiance-general_005063"}