{"body": "> The best/fastest solution for rectangular areas is pcompos piped into  \n> pvalue and total, like so:\n> \n> \tpcomb -o captured.pic \\\n> \t\t| pcompos -x ${box_width} -y ${box_height} - -${left} -${lower} \\\n> \t\t| pvalue -h -H -df | total -if3 -m\n> \n\n\nHm, ok, sorry, maybe this was obvious, if I only had not taken the -x -y\nvalues as the new dimensions after scaling. So they actually crop the\nbox, which is just what I needed - thank you!!!\n\n\nAnd one more question now - is there also a simple way to write pixel\nvalues into a file like this? I wanted to put frames around some objects\nin the image, but as I could not find a way to say AND in the\ncal-expression pcomb expects, I do not know e.g. how to cut away the\ninner part of a box.\n\n\nTIA&CU Lars.\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2008-May/005069.html).</sup>", "attachments": [], "created_by_name": "Lars O. Grobe", "created_at": "May 30, 2008 at 03:36AM", "created_by": "Lars_O._Grobe", "parent_id": "radiance-general_005059", "id": "radiance-general_005069"}