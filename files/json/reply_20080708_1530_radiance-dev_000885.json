{"body": ">> Not sure if that's the best way to go, although I didn't look deep  \n>> into\n>> the code yet, I could imagine that it would make sense to create  \n>> one (or\n>> probaly several) shared libraries, which could be used instead of\n>> embedding commands.\n\n\nI'm aiming at shared libraries wrapped in C++ classes, actually. I've  \nbeen digging in the code and it's written so as to use Unix IPC rather  \nthan shared libraries. It's elegant, damnably hard to port, and seems  \ncentral to the design of Radiance, hence this approach. My idea, right  \nnow--I may change my idea--is to provide classes which cover the same  \nground and use most of the same code as the existing commands, which  \ncan then be easily invoked in a GUI environment. Right now, though, I  \nam still struggling with Mac shared library system.\n\n\nRandolph\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2008-July/000885.html).</sup>", "attachments": [], "created_by_name": "R Fritz", "created_at": "July 08, 2008 at 03:30PM", "created_by": "R_Fritz", "parent_id": "radiance-dev_000878", "id": "radiance-dev_000885"}