{"body": "Hi Erwin,\n\n\nI'm pretty sure the problem is in 3ds2mgf.c:\n\n\nfloat read_float()\n{\n     dword data;\n\n\n     data = read_dword();\n\n\n     return *(float *)&data;\n}\n\n\nwhich assumes that \"unsigned long\" is 4-bytes long.  This bit of code  \nwould actually work on a BigEndian system (I think), but not on  \nIntel.  This is not my code, so I'm not 100% confident on this fix,  \nbut try it:\n\n\nfloat read_float()\n{\n     union { dword i; char c[8]; } u;\n     dword data;\n\n\n     data = read_dword();\n\n\n     if (sizeof(dword) == sizeof(float))\n         return *(float *)&data;\n\n\n     u.i = 1;\n     if (u.c[0] == 0)\n         return *(float *)&data; /* assume big-endian */\n\n\n     if (sizeof(dword) != 2*sizeof(float)) {\n         fputs(\"Unsupported word length\\n\", stderr);\n         exit(1);\n     }\n     u.i = data;\n     return *(float *)&u.c[4];\n}\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2008-October/000908.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "October 07, 2008 at 09:38AM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_000907", "id": "radiance-dev_000908"}