{"body": "Hi Lars,\n\n\nyour little hint concerning glow was the final push I needed to crack \nthe nut. It turned out to be even easier than I expected. Here is my \nmaterial specification (glow, modified by colorfunc, which calls a \nnormalshader.cal function file that I wrote, listed further down):\n\n\n\n\n\n\n# Materials\n\n\nvoid glow normalglow\n0\n0\n4 1.0 1.0 1.0 -1\n\n\nnormalglow colorfunc normalshadermaterial\n4 red green blue normalshader.cal\n0\n0\n\n\n\n\n\n\nThe normalshader.cal looks like this (thanks to Greg for making function \nfiles so easy to use and versatile):\n\n\n{\n  normalshader.cal\n\n\n  Look in RADIANCE/lib/rayinit.cal for more info on builtin funcs and vars\n}\n\n\nred = (Nx + 1)/2;\ngreen = (Ny + 1)/2;\nblue = (Nz + 1)/2;\n\n\n\n\n\n\n\n\nA example normal map is attached. It looks a little ugly because it is a \ntriangle mesh constructed from a stereo camera scan of an outdoor scene \n(color image attached, too).\n\n\nBest,\n\n\nClaus\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2009-March/005815.html).</sup>", "attachments": [], "created_by_name": "Claus B. Madsen", "created_at": "March 09, 2009 at 12:35PM", "created_by": "Claus_B._Madsen", "parent_id": "radiance-general_005813", "id": "radiance-general_005815"}