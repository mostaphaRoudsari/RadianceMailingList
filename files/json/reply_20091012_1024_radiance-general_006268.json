{"body": "Hi Axel,\n\n\nGood questions about rsensor.  I'll answer as I'm able inline...\n\n\n> I am looking at the new rsensor tool to model this response, so I  \n> can estimate the errors compared to a proper cosine-corrected cell  \n> for certain configurations. However, the sensor format is not  \n> entirely clear to me.\n>\n> a) What are the units in the sensor file? Is it normalised to  \n> anything? An IES data file, for instance is normalised to 1000lm.\n\n\nThe sensor file is normalized to 1.0 in arbitrary \"response\" units.   \nThink of it as a multiplier on the incoming radiance value in each  \ndirection.\n\n\n> b) What would the sensor file for a normal, cosine corrected  \n> illuminance meter look like? Does it need to have its maximum at 1.0  \n> for an angle of (0,0)?\n\n\nYes to the second question, with 90 degrees being the maximum polar  \nangle, whose value is zero at all azimuths.  For this distribution,  \nrsensor will produce horizontal irradiance in watts/m^2, which  \nconverts to lux using the standard 179 multiplier.  A uniform sky of  \n100 watts/sr/m^2 would produce a value of 314.16 watts/m^2, or 56235  \nlux, for example.\n\n\n> c) Suppose I wanted to model an illuminance meter that has a correct  \n> cosine response, but gives a reading twice as high as is should be.  \n> Would I need to multiply the values from b) by the cube root of 2?  \n> Cube root because the overall response appears to be proportional to  \n> the volume contained within the 3d shape of the curves.\n\n\nIt should be a simple proportion, so multiplying all values by 2.0  \nshould give you what you expect.  I just confirmed that it works that  \nway.\n\n\n> d) After a bit of googling around, I found this page:\n> http://www.lightingresearch.org/programs/nlpip/publicationdetails.asp?ID=916&type=1\n>\n> Which appears to be the photosensor report referred to on the SPOT  \n> web site. The NLPIP don't seem to make suggestions about the actual  \n> file format for electronically transmitting the spacial response (or  \n> any other photocell characteristics for that matter). I am therefore  \n> wondering why the rsensor data file is what it is. It seems that the  \n> standard Radiance data file would have been sufficient to describe  \n> the sensor's characteristics. What is the advantage of using the  \n> SPOT format? Why not have a spot2rad (similar to ies2rad) import  \n> filter instead?\n\n\nAs I understand it, SPOT is an Excel-based program, so putting the  \ndata in a format that isn't Excel-friendly didn't really suit Zack  \nRogers and the other developers.  Charles Ehrlich had written an  \nearlier equivalent to rsensor that already used this data format, and  \nsince ArchEnergy hired me to develop a more efficient approach, they  \nhad the prerogative to specify the input and output.\n\n\nI hope this helps!\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2009-October/006268.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "October 12, 2009 at 10:24AM", "created_by": "Greg_Ward", "parent_id": "radiance-general_009589", "id": "radiance-general_006268"}