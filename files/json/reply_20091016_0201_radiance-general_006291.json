{"body": "Hi Ery.\n\n\nOn Thu, Oct 15, 2009 at 9:19 PM, Guglielmetti, Robert\n<Robert.Guglielmetti at nrel.gov> wrote:\n> On 10/15/09 2:13 PM, \"Ery Djunaedy\" <ery.mailinglist at gmail.com> wrote:\n>\n>> All,\n>>\n>> Is there a way to run rtrace in parallel? Or any tricks to speed up\n>> the process.\n>\n> You could break your grid into smaller pieces, and then start multiple\n> rtrace processes on different machines or cores, then merge the data back\n> into one \"grid\"...\n\n\nJust did the very same thing yesterday. On Unix \"split\" and \"cat\" will\nchop the file for you and reassemble it in the right order.\n\n\nThis is the script I used (with a few untested improvements):\n\n\n#!/bin/bash\n\n\n## optional: create your octree here\noconv -w sky.rad scene.rad > scene.oct\n\n\n## scene.pts is the file with all the grid points\nlines=`wc -l scene.pts | awk '{print $1}'`\n## we have 8 CPUs and don't care about responsiveness of the system\nlines_per_file=`echo \"($lines / 8)+1\" | bc`\nmkdir -p parts\nrm -f parts/*\nmkdir -p parts_out\nrm -f parts_out/*\nsplit -l ${lines_per_file} scene.pts parts/part_\n\n\nOPTS=\"-ab 6 -aa .1 -ar 2048 -ad 4096 -as 256 -av 0 0 0\"\n\n\nfor pts in `find parts -type f`\ndo\n    echo \"starting '${pts}' ...\"\n    ## obviously you can add rcalc to the command if you want\n    cat ${pts} | rtrace -I -w -h $OPTS  scene.oct > parts_out/${pts}.dat &\ndone\nwait\n\n\n## compile everything to one file\ncat parts_out/*.dat > scene.dat\n\n\n## end of script\n\n\n\n\nRegards,\nThomas\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2009-October/006291.html).</sup>", "attachments": [], "created_by_name": "Thomas Bleicher", "created_at": "October 16, 2009 at 02:01AM", "created_by": "Thomas_Bleicher", "parent_id": "radiance-general_006284", "id": "radiance-general_006291"}