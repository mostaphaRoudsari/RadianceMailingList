{"body": "Hi Axel,\n\n\nThe only time i've used the -c option used is in genklemsamp | rtcontrib for sampling window input directions.  The -c for genklemsamp option determines the number of rays produced per klems division.  And the -c option in rtcontrib tells how many rays to accumulate and average per output record.\n\n\nIn your case, you want to accumulate more values per pixel to achieve a smoother result.  There may be a way to create a tricked out vwrays/rtcontrib combo to do this.  for example:\n\n\n vwrays ... | awk '{for (i=0,i<100,i++) print $0}'  | rtcontrib -c 100 ...  (completely untested!)\n\n\nAlternatively you could run your rtcontrib command several times producing several sets of bin renderings.  And then use pcomb to average the results of corresponding bin renderings into a hopefully less grainy bin rendering.\n\n\nHowever you could probably reduce the graininess of your images by spawning more rays AND decreasing the threshold at which rays are considered insignificant and aborted.  The second part of that is often overlooked and I find vitally important for pleasing results with rtcontrib.  Increasing -ad helps to a point, but if you don't decrease -lw then increasing -ad  doesn't increase the number of rays actually traced.\n\n\nI have a rules of thumb for setting -lw:\n- to trace every ray spawned, -lw should be roughly 1/(ad^ab)  - watch out, every ray may be too much!\n- if you have settings that produce a nice result with rpict try dividing -lw by the number of sky divisions for rtcontrib.\n\n\nI seen significant grainniness improvements by reducing -lw. \n\n\nAndy\n\n\n\n\n\n\n\n\nOn Apr 9, 2010, at 3:58 AM, Axel Jacobs wrote:\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2010-April/006720.html).</sup>", "attachments": [], "created_by_name": "Andy McNeil", "created_at": "April 09, 2010 at 08:24AM", "created_by": "Andy_McNeil", "parent_id": "radiance-general_006719", "id": "radiance-general_006720"}