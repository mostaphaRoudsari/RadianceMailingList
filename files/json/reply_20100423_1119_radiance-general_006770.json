{"body": "Has anyone else tried this on Mac OS? It doesn't work for me--is it \nworking for anyone?\n\n\nA lot of the files in the Python Package Index (PyPI) are wrappers of \nvarious sorts--I don't think that's a barrier.\n\n\nAnyhow, next week I think I'll dig into this & see if I can find out \nwhy falsecolor2.py doesn't work on Mac.\n\n\nRandolph\n\n\nOn 2010-04-21 01:12:42 -0700, Thomas Bleicher said:\n\n\n> Morning.\n> \n> On Tue, Apr 20, 2010 at 11:38 PM, R Fritz \n> <randolph+LD at panix.com> wrote:\n>> Very cool. & I even think I see something I can add to the project. Would\n>> you like me to try packaging falsecolor2.py for inclusion in the Python\n>> package index?\n> \n> If you think it's worth doing it. I myself wouldn't advertise the\n> scripts as Python packages because the depend so heavily on Radiance.\n> \n> BTW: Did you try the app already? I just got a report of a\n> warning/error message popping up on Windows XP. I haven't seen it at\n> home but here at work I can reproduce the message. I wonder if you had\n> seen it, too.\n> \n> About further development:\n> \n> I'm happy with what I have now. I only needed an image viewer that\n> wouldn't exceed the size of my screen like ximage does. The falsecolor\n> features where a nice add on I wanted to use to check my future\n> improvements on the falsecolor2 script.\n> \n> I thought about restructuring the code to allow multiple images being\n> presented at the same time which would then allow us to perform some\n> image manipulations on them via pcomb (difference, relative\n> difference, blend, mask etc). However, when I need to do this now I'm\n> happy to do it on the command line. So it will probably not happen\n> soon unless there is a demand for these features.\n> \n> I keep a TODO list in the source code tree:\n> \n> http://code.google.com/p/pyrat/source/browse/trunk/wxfalsecolor/TODO\n> \n> I forgot to add \"support for more image formats via PIL\". I think that\n> covers my ideas for an image viewer.\n> \n> I started the pyrat project on code.google.com because I have more\n> ideas for small tools that might be useful for others (especially on\n> Windows) and a few older Python scripts which might be resurrected in\n> the context.\n> \n> \n> 1) rad2 / wxrad2\n> \n> A new (graphical) rif file processor. I already had written parts of\n> rad in Python for my old Blender exporter. It's basically there to\n> avoid the need for a command line. You should be able to explore the\n> dependency tree, the individual calculation steps and progress of\n> running jobs. There are a couple of advanced calculation methods out\n> there (like stencil) that could be easily supported by a frontend like\n> this. Similar to trad and Ecotect's Radiance Control Panel.\n> \n> \n> 2) render daemon\n> \n> A small app that sits in your task bar and watches your running and\n> incoming *.rif or makefile-type render jobs. Could also have a network\n> component which offloads the work to a render server or farm. I need\n> something like this as a starting point for scenes exported from\n> Sketchup.\n> \n> \n> 3) Python bindings for HDR images\n> \n> falsecolor2 uses the subprocess module and pvalue to read image data.\n> That takes a long time and is needlessly complicated. I would like to\n> try to compile the few methods necessary as C Python extensions. After\n> that the functionality of pcompos, pcomb and other p* apps could be\n> reimplemented in pure Python (or those could be made Python extensions\n> as well).\n> \n> \n> 4) couple of scripts to create plots and PDF reports from grids\n> \n> \n> If your interested in any of this you're most welcome to join the project.\n> \n> \n> Cheers,\n> Thomas\n\n\n\n\n\n\nRandolph Fritz\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2010-April/006770.html).</sup>", "attachments": [], "created_by_name": "R Fritz", "created_at": "April 23, 2010 at 11:19AM", "created_by": "R_Fritz", "parent_id": "radiance-general_006747", "id": "radiance-general_006770"}