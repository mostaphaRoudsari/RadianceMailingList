{"body": "Jia.\n\n\nI don't have any experience with a Revit based process. Below are just\na few general remarks to obj2rad (and CAD import in general).\n\n\nOn Sat, May 1, 2010 at 2:49 AM, Jia Hu <hujia06 at gmail.com> wrote:\n\n\n> (1) When I export Revit to fbx and then use FBX converter (provided by\n> autodesk) to convert fbx to .obj file.\u00a0 The .mtl file just contains the name\n> of materials without any other data such as RGB, or reflectance.\n\n\nThat is not necessarily a bad thing. The RGB values would almost\ncertainly be based on screen RGB values which have to be converted for\nRadiance. It's better to define a set of materials for Radiance and\nassign colors/materials with the same name in your CAD application.\nAfter you have converted the geometry (material data not necessary)\nyou add your Radiance materials file to the scene and all polygons\nwill pick up the assigned materials with correct definition.\n\n\n> Also I tried to\u00a0use: obj2rad -n objfile.obj > obj.data . I found all the\n> materials in .obj file should be defined. Some of\u00a0 them are as follows:\n>\n> \"Basic_Wall_Typ__Partition_Wall__188653_\"\n> \"Basic_Wall_Typ__Partition_Wall__188781_\"\n> \"Basic_Wall_Typ__Partition_Wall__188881_\"\n> \"Basic_Wall_Typ__Partition_Wall__188971_\"\n> \"Basic_Wall_Typ__Partition_Wall__189016_\"\n> ...... too long\n>\n> Should I define so many materials? Maybe I should delete some of them if\n> they\u00a0use the same materials.\n\n\nThe idea of the -n option is to give you an understanding of the\nobjfile structure. You can use the output to define a mapping file\nwhich, for example, assigns a new material to each group in the file.\nIf there are any useful groups or objects in the file depends on the\nway the converter works.\n\n\n> (2)\u00a0I am stuck with the command obj2rad. I\u00a0just know\u00a0some basic knowledge of\n> .obj file such as its basic structure, the basic command of obj file. But\u00a0 I\n> can not follow the man page of obj2rad, such as mapping rule file.\n>\n> Is that right the mapping rule file in this command contained the texture\n> and materials (like those in Radiance) or some images?\n\n\nNo. The mapping file contains rules that define something along the lines of:\n\n\n\"for any face in the group 'tree' that has the texture 'bark' use the\nRadiance material 'brown'\"\n\n\nThere is no definition of the material 'brown'. You have to provide\nthat only when you compile your octree at a later stage.\n\n\nThe above rule in the mapfile would look like:\n\n\nbrown (Group \"tree\") (Map \"bark\") ;\n\n\nYou can find out which objects and groups are used in the objfile with\nthe -n option.\n\n\n> Should\u00a0I\u00a0write up\u00a0the mapping\u00a0file by\u00a0myself\u00a0or just\u00a0find from\n> somewhere? I have no idea of what the mapping file is so,\u00a0Could\n> someone\u00a0send me\u00a0one or two small\u00a0examples of map files or\n> others related to this command?\n\n\nYou have to write the map file yourself because it depends on the\ndefinitions in your obj file. If the man page and the above example\nare not clear enough you can export the geometry into different obj\nfiles based on their material (all \"wall\" polygons go in one file, all\n\"floor\" polygons in another). Then you use a single line with the\nmaterial name you wish to use for each object. So the mapping file\n\"floor.map\" contains only the line\n\n\nfloor ;\n\n\nand would be use in the obj2rad command:\n\n\nobj2rad -m floor.map floor.obj > floor.rad\n\n\n> (3) When the building model is complicated, is that reliable for this\n> command? I mean whether it makes mistakes about the surface normals. Is\n> there any point that should be noted when using export Revit file to\n> Radiance?\n\n\nRadiance does not care about the surface normals. The obj file can\nonly contain 3- and 4-vertex polygons which Radiance can handle. If\nRevit produces surface normals for all polygons and you have only flat\nobjects you can use the \"-f\" option of obj2rad to ignore this\ninformation. This will make your *.rad file much smaller.\n\n\nCaveat: Yesterday I tried to import a *.obj file created by 3D Max.\nThe file was not a valid file and obj2rad (or rather obj2mesh in my\ncase) stopped with an error. This is obviously not the fault of\nobj2rad but the usability of this work flow depends on the quality of\nthe *.obj files you can create.\n\n\n> (4) If I export .dwg, the torad autolisp\n> (http://www.schorsch.com/download/torad/) seems to be used for AutoCAD\n> R11-14. If I use Polytrans, for example, should I convert obj file? Is there\n> any better way?\n\n\nGeorge also has a stand alone application available for download:\n\n\nhttp://www.schorsch.com/download/dxf2rad/\n\n\nI'm not sure about the Linux version with all the glib versions out\nthere but the Windows version should still run on a typical Windows\nmachine.\n\n\n> (5) I do not have a SketchUp pro, so\u00a0I just\u00a0browsed\u00a0the\u00a0su2rad for free\n> version of SketchUp,\u00a0it seems easy to understand.\n\n\nWow. Easier than obj2rad, eh? Please note that su2rad will also covert\nyour RGB colors to the Radiance RGB values. You can use your existing\nRadiance materials if you want, though.\n\n\nRegards,\nThomas\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2010-May/006810.html).</sup>", "attachments": [], "created_by_name": "Thomas Bleicher", "created_at": "May 01, 2010 at 12:57AM", "created_by": "Thomas_Bleicher", "parent_id": "radiance-general_006785", "id": "radiance-general_006810"}