{"body": "The basic problem is that you need to have the entire scene  \ndescription available to every process, and GPU's don't work that  \nway.  They are optimized for SIMD (single-instruction, multiple-data)  \nprocessing, meaning that you run the same operation on many operands  \nsimultaneously.  This is great if you are multiplying huge matrices  \ntogether, but not much use in a ray-tracing context.\n\n\nEven if the GPU were optimized for this problem, much of what goes on  \nin Radiance is ray tree evaluation.  It all sort of happens together  \n-- you need to trace rays, figure out what to do at surfaces based on  \nmaterial properties, evaluate .cal files, share ambient data (reading  \nand writing a shared cache) and all sorts of things that would have to  \nbe completely rethought for a GPU implementation.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2010-July/007097.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "July 18, 2010 at 11:21PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_007053", "id": "radiance-general_007097"}