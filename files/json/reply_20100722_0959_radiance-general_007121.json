{"body": "> Even if the GPU were optimized for this problem, much of what goes on\n> in Radiance is ray tree evaluation.  It all sort of happens together-- \n> you need to trace rays, figure out what to do at surfaces based on\n> material properties, evaluate .cal files, share ambient data (reading\n> and writing a shared cache) and all sorts of things that would have to\n> be completely rethought for a GPU implementation.\n\n\nThanks, Greg. It sounds like a reimplementation of Radiance in some \ncombination of GLSL and C, and that's a huge amount of work. On the \nother hand, it does sound possible, which is interesting. One more \nresearch project...\n\n\n\n\nRandolph Fritz \u2022 RFritz at lbl.gov\nEnvironmental Energy Technologies Division \u2022 Lawrence Berkeley Labs\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2010-July/007121.html).</sup>", "attachments": [], "created_by_name": "R Fritz", "created_at": "July 22, 2010 at 09:59AM", "created_by": "R_Fritz", "parent_id": "radiance-general_007053", "id": "radiance-general_007121"}