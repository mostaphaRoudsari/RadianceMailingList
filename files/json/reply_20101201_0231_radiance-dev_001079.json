{"body": "Hi Greg!\n\n\n> Most of the hassle with putting together a new release can be resolved with website changes we're planning for next year.  Right now, we have depositories in a few different places, automatic updates that sort-of work most of the time, and documentation that is spread all over the place.  It's really more a matter of organization and putting others in charge than it is one of CVS and the way that works.\n> \n> To give you an idea, posting a new release involves:\n> \n> 1) Putting together the latest source and creating a version in CVS (this is the easy part).\n\n\n> 2) Updating documentation with new release information (easy to forget things, and I do).\n\n\nA lot of software projects fix this by writing proper commit messages and then\ndump the commit messages for a release and probably just reformat and fix them.\nObviously that requires to have one useful commit instead of a ton of tiny ones.\nThese things are easy with distributed RCSs - you just create a topic branch,\nhack and then merge it into one useful commit and apply that to your master branch.\n\n\n> 3) Gathering the auxiliary data files together (easy to miss things here as well).\n\n\nWhat about keeping them in a revision control system?\n\n\n\n\n> 4) Making source-only, overlay, and combined tar balls (simple, but I've still screwed this up in the past).\n\n\nThis is something which could be done automatically with make and friends. Once\ndefined properly, it should be easier to do and harder to forget things.\nAlso - looking at 3) there are tools like mr which allow to work with several\nindependent repositories and merge them.\n\n\n\n\n> 5) Checking compile and building for the few supported systems (sometimes days of delay and looping back to step 1).\n\n\nIf it would be easier to create a new release, you could release a -RC version\nand wait for feedback. So finding a fast way to create releases would fix that\npoint for large parts.\n\n\n> 6) Uploading release to website locations and relinking everything, while archiving the old stuff (painful but straightforward enough).\n\n\nThat sounds like a task for merging all locations into one so people could go to\none place and retrieve everything from there. Generally something like redmin or\ntrac would be nice to have as bugtracker and central plce to browse repositories.\n\n\n> 7) Updating man pages on website (usually comes last and often forgotten altogether).\n\n\nWhat about doing that with a cronjob which pulls the manpages from\ncvs/git/whatever and builds the html version automatically?\n\n\n\n\n> 8) Making announcement to user group of new release availability.\n\n\n\n\n> 9) Depending on feedback, possibly making a patch release to fix build problems encountered by users (sigh).\n\n\nSame issue here - if making a release would be easy and automated, this step\nwould be easy and fast to do, too.\n\n\n> Very little of this can be automated, which is part of why it doesn't happen very often.  Having a HEAD version has been a huge help, since people who want the latest bug fixes and feature adds can get them in real-time, at the expense of doing their own compiles and taking a little risk that their results will not agree with earlier runs.  Radiance development benefits greatly from the feedback of these brave users and allows for build fixes along the way, so that patch releases are not as necessary as they used to be.\n\n\nI think there are a lot of things which could be automated. I know projects\nwhich are run by one developer mainly and they release several times a year -\nwhich is pretty easy as the only thing you need to do is to change the version\nnumber and type make dist. There are a lot of platform-independent tools which\nhelp with such tasks these days.\n\n\nLet me know if I can help you with these things.\n\n\nCheers,\n\n\nBernd\n\n\n\n\n Bernd Zeimetz                            Debian GNU/Linux Developer\n http://bzed.de                                http://www.debian.org\n GPG Fingerprint: ECA1 E3F2 8E11 2432 D485  DD95 EB36 171A 6FF9 435F\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2010-December/001079.html).</sup>", "attachments": [], "created_by_name": "Bernd Zeimetz", "created_at": "December 01, 2010 at 02:31AM", "created_by": "Bernd_Zeimetz", "parent_id": "radiance-dev_001070", "id": "radiance-dev_001079"}