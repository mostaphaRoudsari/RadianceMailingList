{"body": "Merry Christmas Milan.\n\n\nPlease find answers to your questions below.\n\n\nOn Tue, Dec 28, 2010 at 12:17 PM, Milan Cakanovic\n<milan.cakanovic at hotmail.com> wrote:\n> For the purposes of my work, I need to calculate illuminance level in one point\n> of working plane in a simple office (for clear sky and sunny day), for different\n> luminaires output levels, different slat angles of exterior venetian blinds, and\n> for different times of the day (i.e. for different solar angles). I am not\n> interested in for image rendering, just for the illuminance calculation.\n\n\nJust a comment here: You should calculate the illuminance\nat a few points around your actual sample point and then\naverage the results, especially when you want to use blinds.\nThis will avoid peak values due to direct sunlight passing\nbetween the slates and hitting your single measurement point.\n\n\n> I am stuck with window glass modeling.\n> his is what I got from Optics5 for 2 layers glazing system\n> (1. clear glass 6mm ; AIR gap 12mm ; 2. clear glass 4mm):\n>\n> void \u00a0glass \u00a0 \u00a0 \u00a0 GlzSys1_glass\n> 0\n> 0\n> 3 \u00a0 \u00a0 0.832 \u00a0 \u00a0 0.884 \u00a0 \u00a0 0.859\n>\n> void \u00a0BRTDfunc \u00a0 \u00a0GlzSys1_front\n> 10\n> \u00a0 \u00a0 \u00a00.136 \u00a0 \u00a0 0.147 \u00a0 \u00a0 0.146\n> \u00a0 \u00a0 \u00a00.764 \u00a0 \u00a0 0.811 \u00a0 \u00a0 0.789\n> \u00a0 \u00a0 \u00a00 0 0\n> \u00a0 \u00a0 \u00a0.\n> 0\n> 9 0 0 0 0 0 0 0 0 0\n>\n> void \u00a0BRTDfunc \u00a0 \u00a0GlzSys1_back\n> 10\n> \u00a0 \u00a0 \u00a00.139 \u00a0 \u00a0 0.148 \u00a0 \u00a0 0.148\n> \u00a0 \u00a0 \u00a00.764 \u00a0 \u00a0 0.811 \u00a0 \u00a0 0.789\n> \u00a0 \u00a0 \u00a00 0 0\n> \u00a0 \u00a0 \u00a0.\n> 0\n> 9 0 0 0 0 0 0 0 0 0\n\n\nThese are definitions you can use directly in Radiance. The first\nfour lines define the base glass material the second and third\ngroup define separate materials for the front and back of the\nsandwich which are different due to the glass pane thickness\nand coatings (if there are any).\n\n\nI have not used a BRTDfunc material so far, but I think you would\npick the right definition for your scene (GlzSys1_back probably)\nand use it to define the window polygon. It is a very crude approach\nand does not account for a number of effects. There have been\na couple of discussions on this here on the list which you can\nresearch if you want.\n\n\n> And this is what I got from Window6 for the same glazing system :\n>\n> Angle \u00a0 \u00a0 \u00a00 \u00a0 \u00a010 \u00a0 \u00a020 \u00a0 \u00a030 \u00a0 \u00a040 \u00a0 \u00a050 \u00a0 \u00a060 \u00a0 \u00a070 \u00a0 \u00a080 \u00a0 \u00a090 Hemis\n>\n> Vtc \u00a0: 0.798 0.798 0.796 0.791 0.779 0.748 0.675 0.521 0.261 0.000 0.695\n> Rf \u00a0 : 0.144 0.144 0.144 0.147 0.157 0.185 0.255 0.405 0.664 1.000 0.230\n> Rb \u00a0 : 0.146 0.146 0.146 0.149 0.159 0.188 0.258 0.411 0.674 1.000 0.233\n\n\nThis is just a general representation of the angular dependent\ntransmission/reflection of the glazing. You would have to convert\nthis to a format Radiance can understand (but you already have\nthe description above).\n\n\n> When I make a model of complex fenestration system with exterior\n> venetian blinds, I have two different cases :\n>\n> Case 1. When sun rays don't pass directly between the venetian\n>        blind slats, just indirectly from slats (reflected from slats).\n>\n> Question 1. Because sun rays don't pass directly trough window glass,\n> I suppose that all the light that reaches the window glass is diffuse\n> (light is reflected from ground, sky and slats). If this is so, which is\n> the correct value for the definition of window glass material?\n\n\nTo define a basic glass material you would use the Vtc (visual\ntransmittance) for a 0 degree angle (orthogonal to surface). Some\nof the angular dependence is accounted for in the material primitive\n\"glass\" so we don't have to fuzz about with all the angles. It's not\nvery accurate but for a scene that includes blinds and artificial\nlighting an accurate glazing representation is probably less important.\nYou have to decide about this of course.\n\n\nThe transmittance(Tn) has to be converted to transmissivity(tn) via\nthis formula:\n\n\ntn = (sqrt(.8402528435+.0072522239*Tn*Tn)-.9166530661)/.0036261119/Tn\n\n\nWith a base transmittance of 0.798 we get a transmissivity of 0.869 and\ncould define a simple glass material as\n\n\nvoid glass GlzSys1_simple\n0\n0\n3 0.869 0.869 0.869\n\n\nThis is not that far of from the GlzSys1_glass above.\n\n\n\n\n> Question 2. Let us assume that correct Vtc (transmittance) value is 0.695. Is\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0this the right way to calculate RGB transmissivity for glass:\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.832*(0.695/0.798) \u00a0 0.884*(0.695/0.798) \u00a0 0.859*(0.695/0.798),\n> which is equal to:\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.725 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.770 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.748\n\n\nNo. See above. If you only have one value for the transmittance and\nno information on the spectral distribution you can use the same Tn\nfor the red, green and blue values. Using different R, G and B will\nonly give the glass a slight colour tint.\n\n\n> Question 3. This may be a stupid question. Theoretically, if I should get the\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0same results in the following two cases:\n> 1. I create the distribution for the window with mkillum; window glass is\n> \u00a0 defined with transmissivity values:\n> \u00a0 0.725 \u00a0 0.770 \u00a0 0.748\n> I compile a new scene octree that includes the old one and adds the new illum\n> window (new .rad file) to it. Then, I calculate lux level on working plane with\n> rtrace.\n\n\nIf you use mkillum you have to replace the window material with\nthe definition created by mkillum. You also have to make sure that\nthe polygon normal points inwards or you won't get any light.\n\n\n> 2. I don't create window polygon (there's nothing, i.e. there is air). But\n> instead, I can scale RGB values for light solar with the glass transmissivity\n> values.\n\n\nThat is a reasonable approach but only accounts for the light\ncontributed by the sun. (See below about the sky).\n\n\n> Question 4. How can I scale the material of sky, if it is defined with:\n>\n> \u00a0 void brightfunc skyfunc\n> \u00a0 2 skybr skybright.cal\n> \u00a0 0\n> \u00a0 7 1 3.76e+00 3.72e+00 2.98e-01 -0.489041 -0.851114 0.190903\n> \u00a0 skyfunc glow skyglow\n> \u00a0 0\n> \u00a0 0\n> \u00a0 4 \u00a0.85 1.04 1.2 \u00a00\n>\n> I guess that is not allowed to scale the RGB values .85 1.04 1.2, because of\n> the equation: \u00a0 1 = 0.265*R + 0.670*G + 0.065*B.\n\n\nYou can scale the values of the glow material. It only needs\naverage to 1 because the actual brightness of this particular\nsky is already defined in the definition of \"skyfunc\". But you\nwant to reduce that brightness by 1/4 so you can apply the\ntransmittance values directly to the RGB values as above.\n\n\nHowever, this will not take into account the specific angular\ndependent transmission of glass for the light from the sky.\nTherefore, light that hits the glass from the sides will be\nequally reduced as the light from in front of the window.\nThis introduces some difference into the two calculation\nresults you have to be aware of.\n\n\n\n\n> Case 2. When one part of the sun rays pass directly between the venetian blind\n> \u00a0 \u00a0 \u00a0 \u00a0slats, and the second part indirectly from slats.\n>\n> This is perhaps the worst case for modeling. Let us assume that exterior\n> venetian blinds have 35 slats. If I want to make a proper model of window glass\n> polygon, I suppose that I need to replace one glass polygon with 69 glass\n> polygons. 34 are directly exposed to the sun and have some values for RGB\n> transmissivity (which depend from sun angle). Other 35 are in shade and have\n> some other values for RGB transmissivity (transmissivity for diffuse light). Of\n> course, I need to do some trigonometry calculations. This model of window glass\n> is valid only for one light source (solar source sun), but not for\n> skyglow source sky. This seems very complicated, and because of that would be\n> great if I could do what I asked in questions 3.2 and 4.\n>\n> Queation 5. I just need a short comment of paragraph above.\n\n\nSounds incredibly complicated and is not at all necessary.\nThere is no difference in the definition for glass for sunlight and\nglass for skylight. The various transmission values you have\nin your Window6 output are approximated/accounted for in the\nbase primitive \"glass\" or the BRTDfunc definition.\n\n\nI think this also deals with Case 3 and Question 6.\n\n\nIf you want to split you calculation into sun, sky and ground\nyou can do so in the scene definition and later add the individual\nresults. However, your scenario is not a good candidate for\nthat because the problem you see does not really exist.\n\n\n\n\nRegards and enjoy the holidays/in-between-days.\n\n\nThomas\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2010-December/007576.html).</sup>", "attachments": [], "created_by_name": "Thomas Bleicher", "created_at": "December 28, 2010 at 11:03AM", "created_by": "Thomas_Bleicher", "parent_id": "radiance-general_007574", "id": "radiance-general_007576"}