{"body": "Hi,\n\n\n\n\n> This is the only optimization you need, together with helping out Radiance\n> by\n> > pre-calculating the distribution behind the shading using mkillum.\n> > I'd propose that you just start with a simple case, e.g. the glazing\n> without\n> > blinds, set up the rendering procedure (e.g. a script or Makefile),\n> render\n> > illuminance on a work plane (maybe you put a desk surface into your\n> model)\n> > using rpict -i and get the sensor points' illuminances using rtrace -I.\n> Once\n> > you have completed that, there will be a better understanding of the more\n> > complicated tasks, and you will know how Radiance works in your case. It\n> is\n> > difficult to solve all questions in advance, better get the hands on this\n> > nice simulation toolbox and your model :-)\n> > And always feel free to ask if you face unexpected behaviour by the\n> software.\n>\n> Please, can you explain me this: \"render illuminance on a work plane (maybe\n> you\n> put a desk surface into your model) using rpict -i\".\n>\n>\nTo render illuminance on a work plane, no need to input additional desk\ngeometry into the scene. Everything you add in the scene has influence on\nlight distribution and calculation time, so it is better to avoid adding of\nfurniture geometry.\nYou can define sensor point on the workplane area  (for example on height\n0.8m from the floor level), and all points should be oriented towards up in\nformat: xorg yorg zorg xdir ydir zdir, one point per line. Example:\n0 0 0.8 0 0 1\n0 1 0.8 0 0 1\n...\n\n\nThen for created octree and these set of points (save points in some file),\nyou use rtrace -I option to calculate illuminance.\nHere is example command\nrtrace -I+ -h- -oov -ab 3 -ad 2048 -as 512 -aa 0.05 -av 0 0 0 -ar 100\nroom.oct < sensors.txt | rcalc -e \"$1=$1; $2=$2; $3=$3;\n$4=(0.67*$4+0.265*$5+0.065*$6)*179\"  >illuminance.txt\n\n\nSo rtrace command above calculates irradiance for sensor points defined in\n\"sensors.txt\". Then you pipe it to rcalc to convert it to illuminance.\n\n\nYou have similar method in dayfact.csh script (included in Radiance\ndistribution), so you can explore it.\n\n\nHope this helps,\nMarija\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2010-December/007580.html).</sup>", "attachments": [], "created_by_name": "Marija Velickovic", "created_at": "December 29, 2010 at 12:32AM", "created_by": "Marija_Velickovic", "parent_id": "radiance-general_007574", "id": "radiance-general_007580"}