{"body": "Interesting--I would have thought that was a constant, since the value \ncan be calculated at compile time.  But then, it is asking a lot of the \ncompiler to provide results consistent at run and compile times in that \ncase.  In The Old Days, I suppose a compiler would have just cavalierly \nignored the issue, in the same way compilers assume that computer \narithmetic is associative and commutative.\n\n\nRandolph\n\n\nOn 2011-02-18 08:59:04 -0800, Bernd Zeimetz said:\n\n\n> Hi,\n> \n> building radiance fails with gcc >=4.5 with\n> rhdobj.c:221:15: error: storage size of 'neighlist' isn't constant\n> \n> which is due to the fact that using a define like\n> #define NAZI\t\t((int)(PI/2.*NALT+.5))\n> to define the size of an array is not allowed - gcc 4.5 implements various\n> details of the standard stricter than versions before.\n> \n> Attached patch fixes that, not sure if it is the best way to handle it - I\n> didn't check if NAZI or NALT will be redfined somewhere. The issue should be\n> fixed in some way, though.\n> \n> Cheers,\n> \n> Bernd\n\n\n\n\n\n\nRandolph M. Fritz \u2022 RFritz at lbl.gov\nEnvironmental Energy Technologies Division \u2022 Lawrence Berkeley Labs\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2011-February/001113.html).</sup>", "attachments": [], "created_by_name": "Randolph M. Fritz", "created_at": "February 18, 2011 at 05:12PM", "created_by": "Randolph_M._Fritz", "parent_id": "radiance-dev_001110", "id": "radiance-dev_001113"}