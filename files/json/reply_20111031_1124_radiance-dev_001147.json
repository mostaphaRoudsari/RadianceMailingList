{"body": "On 10/30/11 12:09 PM, \"Lars O. Grobe\" <grobe at gmx.net> wrote:\n\n\n>\n>... However, in Radiance, we have no database concept. Maybe\n>this would be something to think about - a database interface. Than we\n>could access unique objetc and modifier id's, could connect to e.g.\n>library databases, prevent some locking problems... but - do we really\n>need it, and does it match the requirements of what is basically a\n>raytracing code???\n\n\n\n\nWhile not necessary for the raytracing work, it becomes very important in\nthe context of a broader simulation workflow where you're trying to\nintegrate Radiance in/output with other tools, such as EnergyPlus or\nwhatever. And, in a massively parallel simulation stream, for\noptimizations and the like, accountability is critical. You need to be\nable to go back and have a reliable account of what was simulated.\nOpenStudio has a RunManager application that manages packing up models\ninto \"jobs\", that can be parceled out to a cluster and all the results are\nmerged back to the OpenStudio project. We're just now integrating Radiance\nwith the RunManager application, but we hope that it will be very useful\nfor large parameter spaces.\n\n\n- Rob\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2011-October/001147.html).</sup>", "attachments": [], "created_by_name": "Rob Guglielmetti", "created_at": "October 31, 2011 at 11:24AM", "created_by": "Rob_Guglielmetti", "parent_id": "radiance-dev_001142", "id": "radiance-dev_001147"}