{"body": "Hi Marija!\n\n\n> I'm trying to model one complex blinds' lamelas in Radiance.\n> I have lamela model in SketchUp but when exported to Radiance it gives\n> 70 surfaces per one lamela - which is too much for simulations.\n> \n> So I have an idea to try to model surface with gensurf, but no idea how\n> exactly.\n> \n> Since I have SketchUP export I can extract data about sruface points so\n> it is some array of (x,y,z) coordinates:\n> (x1, y1,z1), (x2,y2,z2)...(xn,yn,zn).\n> Points in x and z aren't equidistant, while y={0,1}.\n> \n> Problem is how to use these values in gensurf.\n> I want to have surface composed of multiple surfaces in x direction and\n> 1 surface in y direction (length of a lamela)\n> \n> I suppose appropriate command format would be:\n> /gensurf mat name dfile dfile dfile m n /\n> \n> What is the format of dat files I need here? I tried to understand\n> something from manpage but no sucess.\n> \n> Is this the right way to model complex blind lamela (it has few\n> curvatures and w shape etc.)?\n\n\nMy impression is that this will get quite complicated. gensurf would\nstill need the coordinates to come in the right ordering, and I do not\nknow how you could achieve that when exporting from Sketchup. Without\nthat, gensurf does not know which vertex locations to combine into one\nsurface. Also, you would again get lots of surfaces, as gensurf would\ncreate flat surfaces between the vertex locations.\n\n\nTwo alternatives:\n\n\na) If you exactly know the profile of your lamellas, you could use a\nfunctional description instead. This would still lead to quite a lot of\nsurfaces for each, but probably less. And (most important) you would\nhave great control on the resolution of the facetting. This would e.g.\nmake it possible to find out at what resolution you see no effect on\nyour results any more.\n\n\nb) If you need to rely on your exported Sketchup model, I would advice\nlooking into instances or the mesh object. Create a \"short\" lamella,\nsomething like one unit length, and export it. Make it a frozen instance\n(using oconv -f) or a mesh object (using obj2mesh). Create a small scene\nfile containing only the mesh or instance primitive for this compiled\ngeometry. Than build your blinds from this element using an xform array\nin your scene file. This will lead to very little memory consumption for\nthese objects.\n\n\nIf your shading systems consists of lots of blinds, I would even\nconsider using instances when creating geometry using gensurf (case a).\nHowever in typical scenes, you do not reach critical polygon counts yet.\nRadiance is very good in handling lots of surfaces, unless memory gets\nused up.\n\n\nCheers, Lars.\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2011-November/008225.html).</sup>", "attachments": [], "created_by_name": "Lars O. Grobe", "created_at": "November 09, 2011 at 07:11AM", "created_by": "Lars_O._Grobe", "parent_id": "radiance-general_008224", "id": "radiance-general_008225"}