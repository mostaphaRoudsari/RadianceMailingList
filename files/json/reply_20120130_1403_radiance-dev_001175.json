{"body": "I've looked at this in the past.  Aside from the programming effort required to intersect voxels and rays with NURBS, there is the fact that most such algorithms end up dynamically subdividing such surfaces down to pixel resolution.  This is a problem for Radiance because pixel size is not known in the general context.  Also, subdividing once at the outset into triangles results (in most cases) in faster rendering times.  I decided it made more sense just to store a NURBS as a mesh object and render that.\n\n\nIt still would be nice to have code in obj2mesh to accept NURBS.  Do you know if anyone actually uses .OBJ format for higher-order surfaces?  I saw it in the specification, but I've never seen any example files.\n\n\nCheers,\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2012-January/001175.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "January 30, 2012 at 02:03PM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_001172", "id": "radiance-dev_001175"}