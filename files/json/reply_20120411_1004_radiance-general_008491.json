{"body": "Hi Randolph,\n\n\nFor what it's worth I don't use rpiece when I render on the cluster.  I have a script that takes divides takes a view file, tile number and number of rows an columns and will render the assigned tile number (run_render.csh).   In the job submit script I distribute these tile rendering tasks to multiple cores on multiple nodes.  I can't use the ambient cache with this method, but i typically use rtcontrib so I would be able to use it regardless.  There is also the problem that some processors sit idle after they've finished their tile while other processes are running, but I don't worry about it because computing time on lawrencium is cheap and available.\n\n\nSnippets from my scripts are below.\n\n\nAndy\n\n\n\n\n\n\n### job_submitt.bsh #####\n\n\n #!/bin/bash\n #    specify the queue: lr_debug, lr_batch  \n #PBS -q lr_batch\n #PBS -A ac_rad71t\n #PBS -l nodes=16:ppn=8:lr1\n #PBS -l walltime=24:00:00\n #PBS -m be\n #PBS -M amcneil at lbl.gov\n #PBS -e run_v4a.err\n #PBS -o run_v4a.out\n\n\n#   change to working directory & run the program\ncd ~/models/wwr60\n\n\nfor i in {0..127}; do \npbsdsh -n $i $PBS_O_WORKDIR/run_render.csh views/v4a.vf $(printf \"%03d\" $i) 8 16 &\ndone\n\n\nwait\n\n\n\n\n\n\n\n\n### run_render.csh ######\n#! /bin/csh \n\n\ncd $PBS_O_WORKDIR\nset path=($path ~/applications/Radiance/bin/ )\n\n\nset oxres = 512\nset oyres = 512\n\n\nset view = $argv[1]\nset thispiece = $argv[2]\nset numcols = $argv[3]\nset numrows = $argv[4]\nset numpieces = `ev \"$numcols * $numrows\"`\n\n\nset pxres = `vwrays -vf $view -x $oxres -y $oyres -d | awk '{print int($2/'$numcols'+.5)}'`\nset pyres = `vwrays -vf $view -x $oxres -y $oyres -d | awk '{print int($4/'$numrows'+.5)}'`\n\n\nset vtype = `awk '{for(i=1;i<NF;i++) if(match($i,\"-vt\")==1) split($i,vt,\"\")} END { print vt[4] }' $view`\nset vshift = `ev \"$thispiece - $numcols * floor( $thispiece / $numcols) - $numcols / 2 + .5\"`\nset vlift = `ev \"floor( $thispiece / $numcols ) - $numrows / 2 + .5\"`\n\n\nif ($vtype == \"v\") then\nset vhoriz = `awk 'BEGIN{PI=3.14159265} \\\n\t\t\t{for(i=1;i<NF;i++) if($i==\"-vh\") vh=$(i+1)*PI/180 } \\\n\t\t\tEND{print atan2(sin(vh/2)/'$numcols',cos(vh/2))*180/PI*2}' $view`\nset vvert = `awk 'BEGIN{PI=3.14159265} \\\n\t\t\t{for(i=1;i<NF;i++) if($i==\"-vv\") vv=$(i+1)*PI/180 } \\\n\t\t\tEND{print atan2(sin(vv/2)/'$numrows',cos(vv/2))*180/PI*2}' $view`\nendif\n\n\nvwrays -ff -vf $view -vv $vvert -vh $vhoriz -vs $vshift -vl $vlift -x $pxres -y $pyres \\\n| rtcontrib -n 1 `vwrays -vf $view -vv $vvert -vh $vhoriz -vs $vshift -vl $vlift -x $pxres -y $pyres -d` \\\n\t-ffc -fo \\\n\t-o binpics/wwr60/${view:t:r}/${view:t:r}_wwr60_%s_%04d_${thispiece}.hdr \\\n\t-f klems_horiz.cal -bn Nkbins \\\n\t-b 'kbin(0,1,0,0,0,1)' -m GlDay -b 'kbin(0,1,0,0,0,1)' -m GlView \\\n\t-w -ab 6 -ad 6000 -lw 1e-7 -ds .07 -dc 1 oct/vmx.oct\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2012-April/008491.html).</sup>", "attachments": [], "created_by_name": "Andy McNeil", "created_at": "April 11, 2012 at 10:04AM", "created_by": "Andy_McNeil", "parent_id": "radiance-general_008486", "id": "radiance-general_008491"}