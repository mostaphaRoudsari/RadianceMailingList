{"body": "Hi Francois,\n\n\nYeah, Windows doesn\u2019t always support some of the more elegant ways we can shuttle input and output around to unix programs.  Here\u2019s a snippet of Ruby code from the OpenStudio Radiance daylight sim program, which uses rtcontrib as well. You can see that if running on Windows, the script does the vwrays call and stores it as a variable (vwrays_out) and then passes that in, later. If running on Mac or Linux, the second command takes the form of Akel\u2019s from his tutorial.\n\n\nputs \"computing daylight coefficients for #{space_name}\"\n            view_def = \"\"\n            dims = options.dims\n           view_def =\"-x #{dims} -y #{dims} -vf #{Dir.pwd}/numeric/#{space_name}.sns\"\n            if /mswin/.match(RUBY_PLATFORM) or /mingw/.match(RUBY_PLATFORM)\n              vwrays_out = `vwrays -d #{view_def}`.strip\n              exec_statement(\"vwrays -ff #{view_def} | rtcontrib #{rtrace_args = \"#{opts_map}\"} -V- -fo -ffc #{vwrays_out} -f tregenza.cal -bn 146 -b tbin -o #{binDir}/#{space_name}_treg%03d.hdr -m skyglow model_dc.oct\")\n            else\n              exec_statement(\"vwrays -ff #{view_def} | rtcontrib #{rtrace_args} -n #{simCores} -V- -fo -ffc $(vwrays -d #{view_def}) -f tregenza.cal -bn 146 -b tbin -o #{binDir}/#{space_name}treg%03d.hdr -m skyglow model_dc.oct\")\n\n\nI hate to suggest another dependency to make this work, but that\u2019s how we did it for our purposes. Maybe some savvy Windows users know a workaround that can be employed directly in the Windows shell. ?\n\n\n\n\n-          Rob\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2012-June/008686.html).</sup>", "attachments": [], "created_by_name": "Rob Guglielmetti", "created_at": "June 25, 2012 at 10:37AM", "created_by": "Rob_Guglielmetti", "parent_id": "radiance-general_008685", "id": "radiance-general_008686"}