{"body": "Hey Denny,\n\n\nBravo for taking on the job of offering RPMs!\n\n\nMaybe we can take this offline as I have some Ruby scripts you might be able to start with. For example I have a ruby script that does an automated build and test run, and submits test results to the dashboard nightly. I think I have a bash example around here someplace too, that the Kitware guys set me up with. Cmake just needs a little \"help\" in order to do what you want.\n\n\nRob Guglielmetti\nNational Renewable Energy Laboratory (NREL)\nCommercial Buildings Research Group\n15013 Denver West Parkway MS:RSF202\nGolden, CO 80401\n303.275.4319\nrobert.guglielmetti at nrel.gov\n\n\n\n\n\n\nOn 10/25/12 2:03 PM, \"Denny\" <lumnis at googlemail.com<mailto:lumnis at googlemail.com>> wrote:\n\n\n\n\n\n\n\n\nHi Andy,\n\n\nI seen the video before. That is a great demo. However, it's also confusing to have several options to build available not knowing it which state they are.\n\n\n\n\n\n\nWhy I gave cmake a go is quite simple:\n\n\nIn order to create rpm's automatically on a build system, you need to have an non-interactive build process.\n\n\nThe interactive makeall script doesn't help here as it requires user interaction. It would require patching to disable it, what you need to rework everytime things changed in the script.\n\n\n\n\n\n\nWould there be a config file or similar together with a non-interactive mode, I could use that. As it is now, it's quite hard to work around it. I was hoping cmake/scons would help here - as it wasn't my first attempt to package radiance.\n\n\n\n\n\n\nDenny\n\n\n\n\n\n\n\n\n\n\nAm Donnerstag, 25. Oktober 2012, 10:12:07 schrieb Andrew McNeil:\n\n\nHi Denny,\n\n\n\n\nI want to know more about why you're using cmake.  The cmake build system was added by NREL as part of their quest to provide windows installers.  If you're using cmake because you want to try it out and work out all the kinks, then carry on.\n\n\n\n\nIf your goal is to install a working HEAD version of Radiance on a linux os, then you are probably better served using the makeall script. The makeall script is the most reliable build option for unix type operating systems (since that is what the Greg uses).  Also, makeall.sh is updated by Greg when he adds new programs - cmake updates take longer because NREL needs to do them, and pass them back to Greg.  Someday cmake might be the preferred build platform for Radiance, but for now if you're using Linux, you're better off with makeall.sh.  You can follow these instructions (written for compiling on mac). Ignore the first step - installing xcode.\n\n\nhttp://www.radiance-online.org/download-install/installation-information/mac-osx-1#Compiling\n\n\n\n\nAndy\n\n\n\n\n\n\n\n\nOn Thu, Oct 25, 2012 at 8:44 AM, Denny <lumnis at googlemail.com<mailto:lumnis at googlemail.com>> wrote:\n\n\n\n\n\n\nDear all,\n\n\nwhen compiling with static libraries, I get a dependency error when the program gets packaged for rpm:\n\n\n\n\n\n\nfile:\n\n\nsrc/util/trad.wsh:\n\n\ncontains\n\n\n#!/usr/local/bin/wish4.0\n\n\n\n\n\n\nand therefor a dependency is automatically generated for it, which is not allowed/possible.\n\n\n\n\n\n\nSolution (if wish is still needed):\n\n\nReplace the line with\n\n\n#!/usr/bin/wish\n\n\n\n\n\n\nwhich will create a dependency a tk package meets.\n\n\n\n\n\n\nRegards,\n\n\n\n\n\n\nDenny\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAm Dienstag, 23. Oktober 2012, 10:36:47 schrieb Guglielmetti, Robert:\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2012-October/001275.html).</sup>", "attachments": [], "created_by_name": "Rob Guglielmetti", "created_at": "October 25, 2012 at 01:18PM", "created_by": "Rob_Guglielmetti", "parent_id": "radiance-dev_001266", "id": "radiance-dev_001275"}