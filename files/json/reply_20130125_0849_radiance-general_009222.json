{"body": "Hi Martin,\n\n\nYour understanding of the -i option is correct in the basics, but there is a \"hack\" in the code to ignore glass and other typically transparent surfaces.  Otherwise, you would end up calculating illuminance on surfaces that generally don't care about illuminance.  And in the case of your diffuse trans material, it is unclear whether you would care more about illuminance on the inside (which would be the default reporting for interior views), or illuminance arriving at the other side.  Do you see the problem?\n\n\nLars' solution of using rtrace to compute the location then a second rtrace to compute irradiance (or illuminance) using -I+ is the best, because it gives you full control over what gets reported.  John Mardaljevic has used this to good effect in several specialized cases, which he has described here:\n\n\n\thttp://radsite.lbl.gov/radiance/refer/Notes/jm_technote_02.pdf\n\n\nAs Lars mentions, Axel Jacobs also has some great tutorials:\n\n\n\thttp://www.jaloxa.eu/resources/radiance/documentation/docs/radiance_tutorial.pdf\n\n\n\thttp://www.jaloxa.eu/resources/radiance/documentation/docs/radiance_cookbook.pdf\n\n\nJust generally speaking, you're looking for a command of the form:\n\n\n\tvwrays -ff -vf view.vf -x 1000 -y 1000 | rtrace -ff -h -opN scene.oct | rtrace -ffc -I+ `vwrays -d -vf view.vf -x 1000 -y 1000` [rendering options] scene.oct > result.hdr\n\n\nIf you want to speed up the second calculation on a multiprocessing machine, add a -n option to the second rtrace with the number of parallel processes. Be sure to specify an ambient file with -n if -ab > 0, or you won't see much speedup.\n\n\nCheers,\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2013-January/009222.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "January 25, 2013 at 08:49AM", "created_by": "Greg_Ward", "parent_id": "radiance-general_009195", "id": "radiance-general_009222"}