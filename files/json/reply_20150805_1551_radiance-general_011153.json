{"body": "Hi Jan,\n\n\nAre you thinking that the \"directional diffuse\" component as described in the reference manual refers to light that transfers from direct sources to the diffuse hemisphere?  I suppose this is confusing terminology, and it is something adopted from the computer graphics community rather than the lighting simulation community, but \"directional diffuse\" refers to reflections and transmission that is neither specular nor Lambertian, but somewhere in between.  As such, it does not refer to how the light arrived at the surface, only what happens to it afterwards.\n\n\nIf you want to treat the Lambertian and specular portions differently, use the separate functions provided in the BRTDfunc type.  The first three variables specify the amount of light reflected in the mirror direction, and the next three specify the amount of light transmitted in the \"through\" direction.  These are ordinary variables, and may be defined as such in your .cal file, e.g.:\n\n\n{ Mirror reflection color as a function of ray parameters }\nrefl_red = 0.25*RdotP;\nrefl_grn = 0.3*RdotP;\nrefl_blu = 0.31*RdotP;\n{ Direct transmission color as a function of ray parameters -- I am just making these up as examples }\ntrans_red = 0.1/(1+RdotP);\ntrans_grn = 0.2/(1+RdotP);\ntrans_blu = 0.15/(1+RdotP);\n\n\nNote that we have no information about the incoming light direction for the specular values.  The assumption is that light behaves the same whether it comes from a source or from somewhere else.\n\n\nFor the directional diffuse, we do provide the incident direction, which would be the light source by virtue of how this primitive is evaluated.  This is only provided so you can create a full BSDF function if you like, which needs incident & scattered vectors.  You can name these functions as you like, but they should take at least 3 arguments:\n\n\n{ Example directional-diffuse component, again just making this up }\nsoft_red(ix,iy,iz) = 0.2/PI*abs(ix*Dx+iy*Dy+iz*Dz);\nsoft_grn(ix,iy,iz) = 0.1/PI*abs(ix*Dx+iy*Dy+iz*Dz);\nsoft_blu(ix,iy,iz) = 0.5/PI*abs(ix*Dx+iy*Dy+iz*Dz);\n\n\nFor these functions, the incident source direction is given as the 3 parameters, which are normalized and directed away from the surface.  The standard variables (Dx,Dy,Dz) tell you the normalized direction vector pointed towards the surface.  You would put the above definitions into a file \"testingBRTDf.cal\" and specify:\n\n\nvoid BRTDfunc testing\n10\n\trefl_red refl_grn refl_blu\n\ttrans_red trans_grn trans_blu\n\tsoft_red soft_grn soft_blu\n\ttestingBRTDf.cal\n0\n9\n\t0\t0\t0\n\t0\t0\t0\n\t0\t0\t0\n\n\n\n\nI have chosen to have zero diffuse components added, to give you full control over the diffuse portion in your .cal file.\n\n\nI hope this helps!\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2015-August/011153.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "August 05, 2015 at 03:51PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_011150", "id": "radiance-general_011153"}