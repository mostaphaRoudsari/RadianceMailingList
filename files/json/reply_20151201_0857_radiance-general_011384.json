{"body": "From my old blog\u2026.\n\n\nThe idea is to create a simple mirror, a \u2018caustic\u2019 effect and apply a pattern to it, to create holes without having to modify the geometry.\nThe geometry is a classic:\ncap.rad - the cap for the ring\nmix ring top\n0\n0\n8\n0 0 25\n0 0 1\n57.29432507 60\nscene.rad - a spot light and a plane\nvoid spotlight spot\n0\n0\n7 50000 50000 50000 35 0 -1 -1\nspot sphere source\n0\n0\n4 0 200 200 2.5\nvoid plastic white\n0\n0\n5 .5 .5 .5 0 0\nwhite polygon plan\n0\n0\n12\n-500 -500 0\n-500 500 0\n500 500 0\n500 -500 0\nsingle.rad - a single sector of the ring, to array\nmix polygon int\n0\n0\n12\n-.5 -57.29432507 0\n-.5 -57.29432507 25\n.5 -57.29432507 25\n.5 -57.29432507 0\nmix polygon ext\n0\n0\n12\n-.5237120674 -60 0\n.5237120674 -60 0\n.5237120674 -60 25\n-.5237120674 -60 25\nAnd now the interesting stuff:\nTo activate secondary sources use -dr N  (N>0).\nWe will use mirror.\nUnfortunately when mirror is nested into a mixfunc material is invisible to the secondary source tracer... but there is a workaround...\nmodel.mat\n#alterate the reflectance of the metal - optional\nvoid brightfunc stripes\n2  'sin(A1*Pz)' . \n0\n1 .8\n#metal\nstripes metal metal\n0\n0\n5 .8 .8 .8 0.001 0\n#mix the metal with void to create holes\nvoid mixfunc strip\n4  metal void 'if(sin(A1*Py),0,1)' .\n0\n1 .2\n#alterate the reflectance of mirror, reflectance is 0% for holes\nvoid brightfunc band\n2 'if(sin(A1*Py),0,1)' .\n0\n1 .2\n#mirror attached to the metal surface, with holes\nband mirror mix\n1 strip\n0\n3 1 1 1\n\n\n\n\nNow, array the single.rad file:\nxform -a 360 -rz 1 -i 1 single.rad  > ring.rad\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2015-December/011384.html).</sup>", "attachments": [], "created_by_name": "giulioandrea antonutto foi", "created_at": "December 01, 2015 at 08:57AM", "created_by": "giulioandrea_antonutto_foi", "parent_id": "radiance-general_011381", "id": "radiance-general_011384"}