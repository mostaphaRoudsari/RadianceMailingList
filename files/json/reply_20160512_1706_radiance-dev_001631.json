{"body": "I agree the code in wordfile.c is a bit over-complex and confusing.  Hopefully, it will make more sense to you tomorrow.\n\n\nMeanwhile, you can try running the following code on the attached files:\n\n\n#include <stdio.h>\n#include \"platform.h\"\n\n\nint\nmain(int argc, char *argv[])\n{\n\tchar\trdbuf[40];\n\tint\tn;\n\n\n\twhile ((n = read(0, rdbuf, sizeof(rdbuf))) > 0) {\n\t\tchar\t*cp = rdbuf;\n\t\tprintf(\"Read %d characters:\\n\\\"\", n);\n\t\twhile (n--)\n\t\t\tfputc(*cp++, stdout);\n\t\tfputs(\"\\\"\\n\", stdout);\n\t}\n\treturn 0;\n}\n\n\nRunning \"checkread < testfile_unix.txt\" gives me the following on Mac OS X:\n\n\nRead 40 characters:\n\"123456789\n123456789\n123456789\n123456789\n\"\nRead 20 characters:\n\"123456789\n123456789\n\"\n\n\nYou should get the same result on Windows using this file.  However, using the \"testfile_dos.txt\" as your input, you might get:\n\n\nRead 37 characters:\n\"123456789\n123456789\n123456789\n1234567\"\nRead 23 characters:\n\"89\n123456789\n123456789\n\"\n\n\nUsing \"testfile_dos2.txt\", I get:\n\n\nRead 40 characters:\n\"12345678\n12345678\n12345678\n12345678\n\"\nRead 20 characters:\n\"12345678\n12345678\n\"\nYou should get the same, but with different character counts -- 36 in the first read and 18 in the second as it removes the '\\r' characters from the result in the default _O_TEXT mode.  Now, try adding an extra character to the beginning of the \"testfile_dos2.txt\" file, so that the \"\\r\\n\" sequence splits the read calls.  I'm hoping this will demonstrate the bug, or else I'm still confused about what's going wrong in Windows.\n\n\nCheers,\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2016-May/001631.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "May 12, 2016 at 05:06PM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_001617", "id": "radiance-dev_001631"}