{"body": "> On May 13, 2016, at 2:08 AM, Georg Mischler <schorsch at schorsch.com> wrote:\n> \n> Ok, I think I got it figured out.\n> \n> The code in wordfile() blindly assumed that read() would always return\n> exactly the number of bytes requested. This is NOT garanteed by the\n> specification. It's perfectly valid for read() to return less, but\n> never more data than requested.\n\n\nOn Unix a short read from a regular file always means EOF.  Read(2) is an operating system function call.\n\n\n> Windows is doing something very reasonable here. When the requested\n> read size would split up a CRNL, then it stops reading one byte earlier.\n> This ensures that the next read() will be able to correctly convert the\n> CRNL into a single NL.\n\n\nOn Windows, apparently, not always.  Unix handles such things in the stdio library.\n\n\nBah!\n\n\nRandolph\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2016-May/001633.html).</sup>", "attachments": [], "created_by_name": "Randolph Fritz", "created_at": "May 13, 2016 at 04:36AM", "created_by": "Randolph_Fritz", "parent_id": "radiance-dev_001617", "id": "radiance-dev_001633"}