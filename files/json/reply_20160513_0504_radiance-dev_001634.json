{"body": "Am 2016-05-13 13:36, schrieb Randolph Fritz:\n>> On May 13, 2016, at 2:08 AM, Georg Mischler <schorsch at schorsch.com> \n>> wrote:\n> \n> On Unix a short read from a regular file always means EOF.  Read(2) is\n> an operating system function call.\n\n\nNot necessarily. It could also mean having been interrupted by a signal\n(except on systems with BSD semantics). I think we had a similar \ndiscussion\njust recently here, though I can't find it anymore...\n\n\nThe Linux manpage very succinctly tells us to expect \"up to count \nbytes\".\nThis means that we *must* be prepared for it to deliver a smaller \namount.\nIt usually happens to be the case that unix systems (barring any \nexternal\nintervention like signals) don't have a reason to read less than was \nasked for.\nBut that is just a happy coincidence, and not part of the specification.\n\n\n\n\n>> Windows is doing something very reasonable here. When the requested\n>> read size would split up a CRNL, then it stops reading one byte \n>> earlier.\n>> This ensures that the next read() will be able to correctly convert \n>> the\n>> CRNL into a single NL.\n> \n> On Windows, apparently, not always.  Unix handles such things in the\n> stdio library.\n\n\nThis is managed by the CRT on all systems. The thing on Windows is that\nthere are many seperate versions of the CRT around, because in the past \nit\nwas considered part of the compiler. In the future (starting with Win 10\nand VS 2015), the new \"universal\" CRT is considered part of the OS like\non unix, which will eliminate most inconistencies in the long run.\n\n\nCheers\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2016-May/001634.html).</sup>", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "May 13, 2016 at 05:04AM", "created_by": "Georg_Mischler", "parent_id": "radiance-dev_001617", "id": "radiance-dev_001634"}