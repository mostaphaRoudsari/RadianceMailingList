{"body": "Mengdi,\n\n\nAnswers inline below...\n\n\n1.       No matter what parameters I\u2019ve set for rtrace function, there\u2019s\n> only one ray in the output. Yet, I\u2019m expecting multiple rays emitted from\n> the receiver points to the light source, as described in radiance manual.\n\n\n\n\nBy default rtrace outputs the accumulated value of the input ray. If you\nwant it to output information for rays traced to arrive at the reported\nvalue you should use -o with either t or T.  See the rtrace manual page for\nmore output options:\nhttp://radiance-online.org/learning/documentation/manual-pages/pdfs/rtrace.pdf\n\n\n2.       I\u2019d also like to know what parameters can control reflections\n> characters of rays. For instance, I want the rays to partly diffuse after\n> reflecting on the surface. The desirable condition is: for a bundle of rays\n> hitting the surface, 1) 70% of the rays will follow specular reflection,\n> 30% will be scattered after reflection. 2) for the scattered part, I want\n> them to be reflected within an angle (e.g. 30 degree) to the specular\n> reflected ray.\n>\n\n\nThe relative weight of specular vs. diffuse rays is a result of the\nmaterial applied to the surface. if you use a plastic material such as\nbelow (with 15% diffuse reflectance, 35% specular reflectance, and 0.05\nroughness):\nvoid plastic test70-30\n0\n0\n5 0.15 0.15 0.15 0.35 0.05\n\n\nthen the specular rays will account for 30% of the final ray value and the\ndiffuse rays will account for 70% of the final ray value. However the\nactual number of rays spawned are controlled by the -ad parameter for\ndiffuse rays and -ss parameter for specular rays, with the caveat that only\none ray is traced for the specular reflections if the roughness is 0,\notherwise you'd be tracing the same ray several times.\n\n\nIt seems to me that you want pure specular and scattered specular rays\ntogether, so you'll probably need want to use a plasdata material\ndefinition. The reference manual provides info on materials:\nhttp://radsite.lbl.gov/radiance/refer/refman.pdf\n\n\n\n\n\n\n> 3.       Another question is: acknowledged that the emitted rays are not\n> evenly distributed for hemispherical sampling. I'm still wondering if it's\n> possible to evenly send rays with radiance.\n\n\n\n\nThe spawned rays are random, but are distributed such that each ray as\nequal influence on the result. This produces a non-biased estimate. If by\neven you mean that you don't want a cosine factor on the distribution of\nrays, you should look at plasdata. If however by evenly distributed you\ndon't want them to be randomized, I'm not sure that's possible without\ngoing into the Radiance code, and doing this will result in a biased\nestimate.\n\n\nJohn Mardaljevic gives a good presentation on how radiance spawns rays in\norder to find a result:\nhttp://radiance-online.org/community/workshops/2014-london/presentations/day1/Mardaljevic_AmbientCrash.pdf\n\n\nAnd chapter 12 in Rendering with Radiance gives a detailed overview of how\nthis all works:\nhttp://radiance-online.org/learning/documentation/book/rwrcontents\n\n\nBest,\nAndy\n\n\nOn Mon, Jun 13, 2016 at 10:56 PM, Mengdi Guo <mengdi.guo1988 at gmail.com>\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2016-June/011804.html).</sup>", "attachments": [], "created_by_name": "Andy McNeil", "created_at": "June 22, 2016 at 02:53PM", "created_by": "Andy_McNeil", "parent_id": "radiance-general_011801", "id": "radiance-general_011804"}