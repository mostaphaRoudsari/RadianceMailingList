{"body": "Hi Stephen,\n\n\nThe rcontrib command underpinning rfluxmtx and therefore genBSDF can become i/o bound if the model is not particularly complicated and/or there are few non-specular rays being generated.  If your system is purely specular, this is the sort of behavior I might expect.  As the number of receiving bins increases from -t4 5 to -t4 6, you go from 1024 output directions per input direction to 4096.  If you leave your sampling (-c) parameter at 2000, then you're actually sending fewer samples per incident direction than you have output bins.  This might be OK, depending on your model, but it means that the number of bin results being sent from one process to another exceeds the number of rays being calculated, thus i/o becomes the bottleneck over CPU if you have enough processes.  In a sense, you could increase your -c setting by a factor of 2 or 3 and get better accuracy in the same calculation time.  Try it and see if it doesn't improve your CPU utilization.\n\n\nRemember that if your number of processes exceeds the number of physical cores (not virtual ones), then your time-linearity will go down dramatically, even if your CPU utilization shows 100%.\n\n\nCheers,\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2016-October/011908.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "October 04, 2016 at 07:07PM", "created_by": "Greg_Ward", "parent_id": "radiance-general_011907", "id": "radiance-general_011908"}