{"body": "Hi Germ\u00e1n,\n\n\nUnless you really like making work for yourself, I wouldn't recommend eliminating oconv by building everything in memory.  You wouldn't save yourself much time (if any) in the end, and you would end up using a lot more memory that way, as the process of writing out and reloading the octree cleans up the set lists and other structures.\n\n\nYou can still run oconv from your program, and even pass it scene data via a pipe using popen() or similar.  I would then avail myself of the routines in src/rt/raycalls.c which are designed for your kind of code.  You can call the \"ray_init(char*)\" function, passing it the name of your octree file, and it takes care of all the set-up details for you.  The call \"ray_trace(RAY*)\" performs ray evaluation, and all the various command-line settings are available as global variables for your amusement.\n\n\nCheers,\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2017-September/001714.html).</sup>", "attachments": [], "created_by_name": "Greg Ward", "created_at": "September 13, 2017 at 09:30PM", "created_by": "Greg_Ward", "parent_id": "radiance-dev_001713", "id": "radiance-dev_001714"}