{"body": "Hi Santiago,\n\n\nI pretty much did the exact same thing that you mentioned to run \nmultiple instances of dctimestep with Python. The syntax is something like:\n\n\n/import multiprocessing as mp/\n\n\n/import os//\n/\n\n\n/#Run dctimesteps, 16 at at time./\n\n\n/#runCommand is just a call to os.system\n/\n\n\n/#commands is a list of dctimestep commands like [\"dctimestep dc.mtx \nsky0001.smx > res0001.smx\", ///\"dctimestep dc.mtx sky0002.smx > \nres0002.smx\" ...]\n//\n\n\n/pools = mp.Pool(processes=16)/\n\n\n/pools.map(runCommand, commands)/\n\n\n\n\nFor the above, you'd have to do some additional scripting to run rmtxop \nand compile all the results into a single file. There is also a method \nthat was discussed by Wangda Zuo and Andy Mcneil in this paper: \nhttp://www.ibpsa.org/proceedings/BS2011/P_1155.pdf\n\n\nSarith\n\n\n//\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2017-September/012260.html).</sup>", "attachments": [], "created_by_name": "Sarith Subramaniam", "created_at": "September 22, 2017 at 08:53AM", "created_by": "Sarith_Subramaniam", "parent_id": "radiance-general_012259", "id": "radiance-general_012260"}