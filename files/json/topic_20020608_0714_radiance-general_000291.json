{"topic": "FYI CVS, ANSI", "category": "radiance-general", "attachments": [], "created_by_name": "Greg Ward", "created_at": "June 08, 2002 at 07:14AM", "body": "I agree that a code rewrite would be nice, but would require way more \nfree time than I have, and I'm not sure I'd trust the task to someone \nelse.  Making Radiance ANSI-C compatible, at least as far as adding \nfunction prototypes and the like, wouldn't be terribly difficult, and is \nprobably a recommended first step to having others working on the code \nbase.  I only wish I were more familiar with what's in ANSI-C and what's \nnot.\n\n\nThere are two reasons Radiance wasn't converted to ANSI-C long ago.  \nFirst, some systems (Sun in particular) were distributed with a free K&R \ncompiler, but you had to pay for the ANSI-C compiler, so many people \ncouldn't have built Radiance if it were ANSI-C.  Second, I had a bias \nagainst ANSI-C because I never ran into portability problems before its \ninvention, but had nothing but trouble afterwards.  From my perspective, \nANSI-C was a giant step backwards in compatibility, with a subsequent \nexplosion of header files and prototypes and subtle system differences.  \nBefore ANSI, I could hop onto virtually any machine and read the header \nfiles to know what was going on.  After ANSI and the related attempts to \n\"standardize\" UNIX, I couldn't make sense of any of the headers anymore, \nsince there were about a dozen #ifdef's in each one for all the various \nattempted compatibilities.\n\n\nIf I were to really rewrite Radiance, I would want to start from the \nground up and take a different approach to many problems.  The process \nmight take years, and it's by no means certain that the final result \nwould be any better than what we currently have.  Furthermore, who would \nfund such a development effort?  It was a brutal struggle to do it in \nthe first place within all the budget constraints at LBNL, and what \nlittle money there was for research software development there and \nelsewhere in the U.S. has all but dried up.\n\n\nI solved Len's compile problems by jumping onto his machine and making a \nfew changes.  Besides the sys_errlist definition, there were a couple of \nother things that were messed up due to the combination of GNU-C and \nSolaris.  That's a good idea to use strerror(), though -- I'll put that \ninto the next release.  I embarrassed to say that I didn't know about it.\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2002-June/000291.html).</sup>", "id": "radiance-general_000291", "created_by": "Greg_Ward"}