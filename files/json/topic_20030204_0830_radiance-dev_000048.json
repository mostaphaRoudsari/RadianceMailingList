{"topic": "Radiance-dev digest, Vol 1 #19 - 3 msgs", "category": "radiance-dev", "attachments": [], "created_by_name": "Greg Ward", "created_at": "February 04, 2003 at 08:30AM", "body": "Schorsch writes:\n\n\n> Ok, independently of the specific implementation details, I see\n> the following strategies that we could test:\n\n\nOf these, I like the following solutions the best:\n\n\n>  System lock (as implemented for unix)\n>  * direct read access to ambient file\n>  * direct write access to ambient file\n>  * locking through fcntl() (resp. the standard Windows locking\n>    mechanisms, translated through Samba when needed)\n>\n>  Simple lock file\n>  * direct read access to ambient file\n>  * direct write access to ambient file\n>  * locking through lock file, broken after a TTL of n minutes\n>\n>  Unidirectional data server\n>  * direct read access to ambient file\n>  * ambient data written through server process\n>  * server may use one of the above locking mechanisms if file\n>    writing is still shared with other processes, or none if it\n>    has exclusive access\n\n\nI presume by the \"system lock\" you mean the one we have now, and I'd \nlike to keep this around (or some variant of it) for systems with \nworking lock managers, or for a fantastic future when NFS finally gets \nits act together and fixes their lockd implementation.\n\n\nOf the various servers suggested, the unidirectional data server makes \nthe most sense to me, particularly if it can be run on the file server \nmachine.  That way, the network traffic is no worse than it was, and \nsince most of the ambient file i/o is read calls, the server has much \nless chance of being overwhelmed than a bidirectional server would.\n\n\nHowever, there is another advantage to the locking mechanisim approach, \nwhich is that we need it also for rpiece, which we haven't talked \nabout.  Having one solution we could put in the library for making and \nbreaking file locks would be great!\n\n\n-Greg\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-February/000048.html).</sup>", "id": "radiance-dev_000048", "created_by": "Greg_Ward"}