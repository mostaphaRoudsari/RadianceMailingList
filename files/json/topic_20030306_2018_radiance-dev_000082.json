{"topic": "Inheriting modifiers (was: alias handling)", "category": "radiance-dev", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "March 06, 2003 at 08:18PM", "body": "Greg Ward wrote:\n\n\n> Jack de Valpine writes:\n> >\n> > void alias abc_c101 foo.white\n> >\n> > where now abc_c101 'inherits' both modifier and material\n> > characteristics.\n>\n> I like this suggestion.  However, I don't think using \"void\" to\n> indicate that the alias should use the same modifiers as the original\n> is a good idea, as one might want to break the modifier chain in\n> creating an alias, and this is a valid use of \"void\" in the current\n> implementation.  However, we could introduce, for this one purpose, a\n> modifier keyword to associate with the alias pseudotype -- let's call\n> it \"linked\".  Then, your example above becomes:\n>\n>    linked alias abc_c101 foo.white\n\n\n\n\nWhy not just spell it out as \"inherit\"?  It would be hard to make\nit more explicit what actually happens if this is implemented...\n\n\nI like the idea too, even if I might not use it a lot myself,\nsince Rayfront juggles aliases in other ways at the moment.\nActually, it might even simplify the implementation of some\nof the features that I have in mind for a future release.\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-March/000082.html).</sup>", "id": "radiance-dev_000082", "created_by": "Georg_Mischler"}