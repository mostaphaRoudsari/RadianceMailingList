{"topic": "Opening the question: Radiance test suite", "category": "radiance-dev", "attachments": [], "created_by_name": "Randolph Fritz", "created_at": "July 21, 2003 at 02:11PM", "body": "As the development of Radiance continues, and we contemplate major \nchanges in the code base, as well as cross-platform operation, it seems \nmore and more necessary to have a test suite, so that, at least, \nobvious problems are caught before release.\n\n\nIn broad outline, it seems to me that unit tests--tests of particular \nsoftware modules--and system tests--tests of whole programs, and \nprogram groups--are needed.  I personally would also choose to do \nusability testing for user interface development, as well.\n\n\nSome of these can be completely automated, but it is going to be very \nhard to automate those tests that involve user interaction; a scripted \ntest will often not provide the behavioral variability of a human \noperator.\n\n\nGoing by source directory, Radiance can be broadly broken down like \nthis:\n\n\n\n\nDir.\t\tComponent\n\n\ncal     \tFunction definition language\ncommon\tCommon library routines\ncv      \tSpecial-purpose object generators--ies2rad, for instance\ngen     \tModelling language tools: gen*\nhd\t\tThe holodeck\nmeta \tPlotting language and tools\not      \tOctree generation and manipulation tools\npx      \tConversion, post-processing, and viewing tools\nrt      \tRendering core--rview and rpict.\nutil    \tRendering scripting utilities\n\n\nI've been using the cabin scene in the objects directory as rough \nsystem tests for some of the scripting utilities, the rendering core, \nand the holodeck.  Running it, I am assured that, at least, I have not \nintroduced any outright crashes in my work on the Radiance core, but it \nreally is not enough.  I think a test scene that contains all possible \nobject types is called for, as well as tests for individual objects.  \nBut there's a lot more to do--probably test plans and designs for test \nutilities are needed for each component.  Then, of course, tests must \nbe written and, finally, they must be run before each major release on \neach supported platform.  There's a lot of grunt work in this, and I \ndon't want to do it all--I don't want to spend that much time, and I \nwould end up hating Radiance.\n\n\nRandolph\n\n\nFor some introductory information on testing practices, I refer anyone \ninterested to the comp.software.testing FAQ, \n<http://www.faqs.org/faqs/software-eng/testing-faq/>.\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-July/000150.html).</sup>", "id": "radiance-dev_000150", "created_by": "Randolph_Fritz"}