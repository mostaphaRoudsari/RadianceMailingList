{"topic": "Radiance quality assurance suggestions", "category": "radiance-dev", "attachments": [], "created_by_name": "Randolph Fritz", "created_at": "July 21, 2003 at 02:12PM", "body": "Let me here put in a plea and proposal for two particular coding \npractices that I believe will greatly ease the work of Radiance testing \nand debugging:\n\n\n1. Use conditional compilation only in isolated source files, and not \nat all in header files.\n\n\nWhy?  The more conditional compilation and platform-dependence there is \nin the code, the more test development and testing is required.  Each \ncombination of compilation conditionals creates a different version of \nthe program.  If conditional compilation is scattered throughout the \ncode, there is a combinatoric explosion of program versions--4 \nvariables means 16 versions, 5 means 32, and so on.  If we wish to \nclaim that we have tested Radiance we must either test for all \ncombinations of conditionals, or specify particular conditionals which \nwe test.  If conditional compilation is used only in isolated source \nfiles, those files can be thorougly unit-tested, and we have some \nassurance that the whole of Radiance does not need to be thorougly \ntested for each possible combination of conditionals.\n\n\n2. Keep most of Radiance to ISO C90.\n\n\nWhy?  The more platform dependencies are spread through the code, the \nmore platforms need to be tested.  Moreover, platforms themselves vary \ninternally--thus, there are multiple variants of POSIX, BSD Unix, and \nMS-Windows and each is a potential testing problem.  The less \nplatform-dependent code, the fewer places for the code to have \nunexpected bugs on different platforms.\n\n\nRandolph\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-July/000151.html).</sup>", "id": "radiance-dev_000151", "created_by": "Randolph_Fritz"}