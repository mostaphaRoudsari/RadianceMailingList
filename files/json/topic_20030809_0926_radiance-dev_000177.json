{"topic": "SCons", "category": "radiance-dev", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "August 09, 2003 at 09:26AM", "body": "Greg Ward wrote:\n\n\n> 1) Is Python available precompiled or easily built on all systems we\n> support?\n\n\nPython is easy and very reliable to compile on all platforms.\nIn fact, many of my ideas about portability are \"borrowed\" from\nthe Python sources and/or installation procedures.\n\n\nFor Windows, VisualC workspace and project files are included\nwith the sources, enabling a full build in one click. Of course,\nthere's also a binary installer available (actually several).\n\n\nBuilding on unix systems is setup with autoconf (since Python\nwraps a large number of OS APIs, that's really helpful in this\ncase). It will just automatically build all the modules that it\ncan, based on the installed libraries it finds. A very basic set\nof modules is sufficient for SCons, though.\n\n\nBinary packages are included with or available for all relevant\nLinux distributions, normally installed by default (the Redhat\ninstaller is even based on Python).\n\n\nOS X comes with a working Python, although some usually expected\nmodules aren't included (SCons works fine with that version).\n\n\nBesides those already mentioned, installers for one or several\nprecompiled Python versions are available for Sparc Solaris,\nOS/2, Amiga, AROS, RISC OS, BeOS, AS/400, OS/390, z/OS, VMS, QNX,\nVxWorks, DOS, Windows 3.1, WindowsNT Alpha, WindowsCE, PalmOS,\nPsion, PlayStation, Sharp Zaurus, etc...\n\n\n\n\n> 2) Is SCons sufficiently stable that we don't have to be updating our\n> build input to keep compatibility with different SCons releases?  This\n> can be a nightmare for deployment.\n\n\n>From http://www.scons.org/ :\n\n\n \"We ensure that today's functionality isn't broken by tomorrow's\n release through rigorous use of a development methodology that\n adds incrementally to an extensive set of regression tests:\n non-comment lines of test code outnumber lines of production\n code by more than 2.5 to 1.\"\n\n\nYou might consider that excessive, but hey, if it works... ;)\n\n\n\n\n> 3) What benefit does SCons offer over our current script-builds-rmake\n> system,\n\n\nAgain, from http://www.scons.org/ (just the most relevant points):\n\n\n- Reliable, automatic dependency analysis\n\n\n- Built-in support for fetching source files from SCCS, RCS, CVS,\n  BitKeeper and Perforce. [not sure if we need this]\n\n\n- Built-in support for Microsoft Visual Studio .NET and past\n  Visual Studio versions, including generation of .dsp, .dsw,\n  .sln and .vcproj files. [makes some of my own work obsolete...]\n\n\n- Reliable detection of build changes using MD5 signatures;\n  optional, configurable support for traditional timestamps.\n\n\n- Improved support for parallel builds -- like make -j but keeps\n  N jobs running simultaneously regardless of directory\n  hierarchy.\n\n\n- Integrated Autoconf-like support for finding #include files,\n  libraries, functions and typedefs.\n\n\n- Global view of all dependencies -- no more multiple build\n  passes or reordering targets to build everything.\n\n\n- Designed from the ground up for cross-platform builds, and\n  known to work on Linux, POSIX systems (including AIX, *BSD\n  systems, HP/UX and IRIX), Windows NT, Mac OS X, and OS/2.\n\n\n\n\nSo far, the configuration files we have played with were between\n20% and 50% the size and complexity of makeall and the respective\nRmakefiles, but added automatic X11 and GL configuration and\nautomatic dependency management to their functionality. The still\nmissing installation part should take less than two dozen lines.\n\n\n\n\n> I'd like to see what SCons expects as input.\n\n\nYou've seen some of that by now. More about this part seperately.\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-August/000177.html).</sup>", "id": "radiance-dev_000177", "created_by": "Georg_Mischler"}