{"topic": "RPIECE Code Modificaiton", "category": "radiance-dev", "attachments": [], "created_by_name": "Marcus Jacobs", "created_at": "November 29, 2003 at 07:57PM", "body": "Dear Group\n\n\nAs I have mentioned before, I am attempting to rewrite code for rpiece to \nallow for me to improve specular sampling of metal and metal2 reflections. I \ndo have some questions that I hope that someone can answer. To give you a \nbasic idea of the concept, see the following link:\n\n\nhttp://f1.pg.photos.yahoo.com/ph/marcdevon/vwp?.dir=/RadiancePics&.dnm=example.jpg&.src=ph&.view=t&.hires=t\n\n\n\n\nWhat I wish to do is to render within the highlighted window within a \nspecified view. I have gone the some of the rpiece source code so I do think \nthat I understand how it basically works. My first question deals with the \nderivation of of pview horizontal and vertical view parameters. In the \nsource code it is given as:\n\n\npview.horiz = 2.*180./PI*atan(tan(PI/180./2.*ourview.horiz)/hmult );\npview.vert = 2.*180./PI*atan(tan(PI/180./2.*ourview.vert)/vmult );\n\n\n\n\nIn my modified version of rpiece, instead of dividing by hmult/vmult at the \nend, I multiply times a fraction of the rendered scene. In other words, if \nthe render window is a 100 x 250 portion of a 500 x 500 view, I will \nmultiply times 0.2 and 0.5 to each of the respective equations in lieu of \ndividing by hmult and vmult. One thing that helps with this approach is that \nhoriz and vert members of the VIEW type are all declared as double such that \nI should not have any issues with precision when using pcompos to merge the \nimage (I hope).   My question is if there anyone here who can explain the \nbackground/derivation of these equations and does anyone know whether they \nwill be applicable to my approach? Also in the program, I modified the \nequations for hoff and voff to correspondto the lower left corner of the \nrender window (see example picture). Once again this is expressed as a \nfraction of the entire image. For example, if the lower left corner of the \nrender window correnspond to point (229,125), hoff and voff are 0.458 and \n0.25 respectively. Similar to vert and horiz, hoff and voff are declared as \ndouble such that precision should not present any problems.\n\n\nTaking this approach has not produced the view that I was expecting to \nrender. For starters, if the overall view is 500 x 500 (the entire image is \nnot rendered in the program, only the portion specified by the user) and I \nwish to render a 99 x 155 portion, the rendered view comes out as a 99 x 99 \npiece. Also, the view that is rendered isn't where I have theorized it will \nbe based on my assumption of how the horizontal and vertical offsets \ninteract with the program. Any help and/or insight to how I can accomplish \nmy objectives would be very appreciated.\n\n\nMarcus\n\n\n_________________________________________________________________\nSet yourself up for fun at home!  Get tips on home entertainment equipment, \nvideo game reviews, and more here.   \nhttp://special.msn.com/home/homeent.armx\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-November/000262.html).</sup>", "id": "radiance-dev_000262", "created_by": "Marcus_Jacobs"}