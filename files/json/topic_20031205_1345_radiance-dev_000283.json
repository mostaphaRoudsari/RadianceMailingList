{"topic": "Quo Vadis Radiance ...", "category": "radiance-dev", "attachments": [], "created_by_name": "Carsten Bauer", "created_at": "December 05, 2003 at 01:45PM", "body": "Hi,\n\n\nthe recent photon-map thread left me - once more -  rather puzzled. OK, \nI haven't any active Radiance-projects going on right now, so I look at \nthe matter from a little distance. But from  a distant point you often \nsee things better :-)  Furthermore, I myself have developed a (small) \nRadiance-addon, and I'm one of the (seemingly still few) people who have \nalready used the photon-map, so I feel the need to add my statements to \nthis discussion .\n\n\nConcerning the photon-map istelf, I cannot say that much, as I only used \nit once (reason: see above) for a Visualization case ( a rather \nchallenging one). I patched the code in, made some tests to get \naquainted with the option settings and then let it loose on the image. \n And-  it simply worked ! (How boring ....), produced  what I wanted to \nhave  and what was to be expected by physical reasoning. Hey, isn't that \nwhat a tool should do??? There are some drawbacks, one e.g. is the \nawkward handling, having to produce an extra pmap doesn't sound much but \nnevertheless is inconvenient. It should go somehow automatically, by \nsetting some controlling options -Px  xxx  -Pf filename etc etc.. in a \n.rif  file for rad.\nThe other is not really one, of course one has to learn a bit of new \nstuff (what means 1 million photons for the current scene, shall I mix \n50 or 100 photons in the gathering process, etc.) but these things are \nmore intuitive than some other classic options like -ar and -aa. From my \nexperience in developing the direct cache I know that its not easy to \ntranslate the limitations of the machine into parameters which are easy \nto understand, covering all cases, being only a few etc\n\n\nSo far for this point. Now to the discussion. In some days time we have \n2004, not 1984. I've dug deep into the Radiance code and learned a lot \nby it, but no matter how sophisticated it once was/is, the outside world \nhas moved on. Now we have new tools and concepts (pmap is only one \nexample),  which basically make use of the fact that todays machines \nhave far more memory  (and higher speed, of course), but - many \napologies for the harsh word - instead of integrating them a lot of \npea-counting is going on in the discussion.\n\n\nI can image that, if machines where as capable back then as they are \nnow, something like the pmap would already have been written long ago. \nGreg himself called for a forward module in the 'Rendering with \nRadiance'  book. This holds especially, as pmap is no exotic stuff, its \nnot some hacking performed by some freak sitting in his cellar behind \nhis machines (OK, in this case it IS programmed by a freak, but thats a \ndifferent story ... :-)) , there's a research institute behind it, there \na validation measurements/caculations going on, apparently being \nsuccessful in a wide range of cases. So, if pmap right now doesn't \nsupport some of the strange transdatafuncwhatever primitives, which \nmaybe one in a thousand users uses once in his lifetime, is that a \nreason to exclude this tool from the distribution? Was Radiance as \ncomplete and almost bug-free as it is now right from the beginning? Work \nin progress, thats what software is about!\n\n\nA lot of argumentation has already been layed out in the preceding \nthread, so I don't need to repeat it. I don't see any technical reason \nto exclude the tool, especially as it only interferes if switched on \ndeliberately.\nBut apart from the technical facts, there are other things in life, e.g. \nthere's politics. So far, Radiance  is connected to the name of Greg \nWard (and LBNL), and I understand that there is a high concern that the \nprogram maintains its high quality standard and is kept free of whicky \nwhacky gimmicks. But looking at the complexity of the matter, I doubt \nthat one person alone, no matter how fit he is, will be able to \nadminister and futher develop the software. So the real question is, is \nthere a will to continue the development as a team effort, inevitably \nincluding code writen by someone else? What's the alternative? Don't \nmove on and become out-of date and finally forgotten? Not a real \nalternative, I think...\n\n\nso long for now\n\n\n-Carsten\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2003-December/000283.html).</sup>", "id": "radiance-dev_000283", "created_by": "Carsten_Bauer"}