{"topic": "Testing Framework Available", "category": "radiance-general", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "December 07, 2003 at 03:58PM", "body": "Hi all,\n\n\nI just checked a first prototype of the promised testing framework\ninto CVS, so it should be included in the HEAD dump tomorrow\n(monday) morning. For those who don't want to dig it out on their\nown, below are the contents of the README file.\nContributed test cases are very much welcome!\n\n\n\n\n-schorsch\n\n\n\n\n\n\nRadiance Testing Framework\n\n\n\n\nA toolkit to test all (eventually) components of the Radiance\nsynthetic image generation system for conformance to their\nspecification.\n\n\n\n\nLimitations\n\n\nFor the moment, we use PyUnit to run our tests. This means that\nwe're restricted to test only complete programs, and not actual\nunits (since PyUnit was designed to test Python units, not C).\nA C-level testing framework may be added later.\n\n\nThere's no good way to automatically test GUI programs like\nrview. We have to rely on good human testers to check whether\nthose work correctly or not.\n\n\n\n\nRequirements\n\n\nYou need a working installation of Python 2.1 (or newer) on your\nsystem. The reason for this is that the PyUnit framework isn't\nincluded with earlier versions. If you prefer to use an older\nPython (back to 1.5.2), you can get PyUnit here, and install it\nsomewhere on your PYTHONPATH:\n  http://pyunit.sourceforge.net/\n\n\nOur testing framework currently assumes that the Radiance files\nreside in the following local file tree (seen from the \"test/\"\nsubdirectory where this file resides):\n\n\n  executables:    ../bin/*[.exe]\n  support files:  ../lib/*\n  data files:     ./test data/*\n\n\nThis is the location where the experimental SCons build system\nwill place everything, so it might be easiest to compile Radiance\nusing SCons for testing.\nThe space character in the name of the test data directory is\ndeliberate, because it is a design requirement that all our\nexecutables can handle path names with spaces.\n\n\n\n\nHow to run tests\n\n\nOn unix systems, just type \"run_all.py\" in this directory to\ntest everything. If that file doesn't have execute rights, you\ncan supply it to the python interpreter as its single argument:\n\"python run_all.py\". You can also run individual test suites from\nthe \"py_tests\" directory directly: \"python test_getinfo.py\".\n\n\nOn Windows, this should usually work as well. As an alternative,\nuse the \"winrun.bat\" script. WARNING: You need to change the\npaths in this script to match your Python installation first.\n\n\n\n\nWhat gets tested\n\n\nThere are several test groups, each containing a number of test\nsuites, each containing one or more tests. When running tests,\nthe name of the test groups and test suites will get printed to\nthe console, the latter with an \"ok\" if they succeeded.\n\n\nIf any test fails, there will be diagnostic output about the\nnature of the failure, but the remaining tests will continue to\nbe executed. Note that several utility programs may be used to\naccess the results of other calculations, so if eg. getinfo is\nbroken, that may cause a number of seemingly unrelated tests to\nfail as well.\n\n\n\n\nHow to report failures\n\n\nIf any of the tests fail on your platform, please report your\nresults (and as much ancilliary information about your system and\nRadiance version as possible) to the radiance code development\nmailing list on http://www.radiance-online.org/\nThe developers will then either try to fix the bug, or instruct\nyou on how to refine your testing to get more information about\nwhat went wrong.\n\n\n\n\nHow to contribute test cases\n\n\nThe list of tests run is still very much incomplete, but will\nhopefully grow quickly. You can contribute by creating tests too!\nPlease ask on the code development mailing list first, so that we\ncan avoid overlaps between the work of different contributors.\n\n\nThere are two classes of tests to be considered:\n\n\n- Testing individual executables\n  This means that an individual program like ev, xfom, or getinfo\n  is tested with typical input data, and the output is compared\n  against the expected result.\n\n\n- Testing specific calculations\n  This will mainly affect the actual simulation programs rpict\n  and rtrace. For example, there should be a test suite for every\n  material (and modifier) type, which uses rtrace to shoot a\n  series of rays against a surface under varying angles, in order\n  to verify material behaviour under different parameters. Tests\n  of this kind may require a custom script.\n\n\nContributed tests can be of two kinds. In the simplest case, you\ncan contribute a small(!) set of test data, the command line(s)\nused to run your tests on them, and a list of expected results.\nResult comparisons are typically done in text form (by line).\nIf the result is a picture, we'll use ttyimage to pick out a few\nscan lines for comparison (the image dimensions must be less than\n128 pixels). Other binary data needs to be converted into a\nsuitable text representation as well. If you're not sure what to\nuse, the developers can help you about that point. They will then\nalso wrap your test case into a Python module for integration\nwith the framework.\n\n\nContributors sufficiently familiar with the Python programming\nlanguage and the PyUnit test framework can also submit complete\ntest suites in Python. Please use the existing tests in the\n\"py_tests\" directory as a template, and check out the helper\nmodules in \"py_tests/unit_tools\".\n\n\nIn any case, please note that we can't use any shell scripts or\nsimilar tools in our tests. All tests should be able to run on\nall supported platforms, where your favourite shell may not be\navailable. The Python programming language is available for\npretty much any platform, so we decided to use only that.\n\n\n\n\n\n\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2003-December/001287.html).</sup>", "id": "radiance-general_001287", "created_by": "Georg_Mischler"}