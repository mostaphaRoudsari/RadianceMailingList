{"topic": "Measuring materials", "category": "radiance-general", "attachments": [], "created_by_name": "Rob Guglielmetti", "created_at": "January 18, 2004 at 06:54PM", "body": "Recently, Visarc Jack said:\n\n\n>  I think that Rob G. could give everyone a really superb summary on  \n> how to setup a measuring environment for glazing materials.\n\n\nThen he went on to say:\n\n\n> Depending on the application is might be worth checking out glaze.csh  \n> in the latest release. This calculates models for both single and  \n> double surface glazing materials. I am not sure how it compares to  \n> glazing.cal in terms of the accuracy of the underlying model. Note  \n> however that glaze.csh is built around a handful (5 or 6) sets of  \n> reflectance and transmittance values as it \"database\". Some of these  \n> were actually measure by me and looking back on it, I would prefer to  \n> measure the \"pvb\" materials under a more precise protocol than I did  \n> originally (again Rob G. would be the real resource here).\n\n\nHa.  Well, Greg's the real resource here.  All I did was come up with a  \ncockamamie scheme to use a luminance meter and an illuminance meter to  \ntry and figure out a diffuse glass sample we had; Greg's the one who  \nprovided the brains to both verify that my scheme would actually work,  \nand to implement the procedure.  The materials we measured were also  \nmundane enough to be modeled with just a trans; we didn't need to use  \nBRTDfunc.  But here's what we did:\n\n\nI had a couple of glass samples, an ellipsoidal reflector spotlight  \n(\"leko\"), a Minolta illuminance meter and a Minolta luminance meter.   \nWhat I did was aim the spotlight at the glass, take an illuminance  \nreading incident on the front of the glass, then a luminance reading on  \nthe back of the glass.  Dividing the luminance by Pi, then by the  \nilluminance, gave me a reasonable estimate of transmittance.  We took  \nluminance readings at 15 degree intervals from nadir to +- 60 degrees,  \nfor incident angles of 0-45 (also in 15 degree increments).  There's a  \npicture of the measurement rig here:\n\n\nhttp://www.rumblestrip.org/stat-img/setup.jpg\n\n\nThe transmissions were then hastily emailed to Greg Ward, who did some  \ntrial & error with trans parameters, using bgraph to visualize the  \ntransmission models until the trans definitions matched the measured  \ndataset.   Greg sent me a valid trans description, but I of course  \nwanted to know how he accomplished this.  Greg's email that explained  \nwhat he did included this shell script:\n\n\n#!/bin/csh -f\n#\n# Plot one or more files and display them\n#\nset dest=/tmp/plot$$\nbgraph $* | meta2tga -x 700 -y 700 -o $dest\nopen -a Preview ${dest}*.tga\n\n\n... but I could never get this to work on my end.  If you or anyone  \nelse on the list wants to have a look at this and help me out, I'd  \nappreciate it.  When Greg first sent me this stuff, I really didn't get  \nit at all.  I just used his trans material definition.  But in  \nreviewing it all for this email, I understand it now.  I just lack the  \nunderstanding of bgraph to fully troubleshoot this script on my  \ncomputer.  But it's a very useful technique!  WHat he did was take each  \ndataset I sent him and used that for the \"Adata\", then used a  \nmathematical model based on the trans parameters for the second  \ndataset, the \"B\".  He played with the Ts Td and roughness (alpha)  \nparameters and used bgraph to see how they matched up.  Here's a sample  \nbgraph input file; this is for the 15 degree incident angle (reflected  \nin the theta variable) dataset:\n\n\ninclude=polar.plt\nxmin=-90\nxmax=90\nAdata=\n-60     0.086210394\n-45     0.103198913\n-30     0.174652116\n-15     0.244228975\n0       0.363959998\n15      0.424915818\n30      0.304880523\n45      0.201275914\n60      0.146151974\n;\nAcolor=2\nBcolor=4\ntheta:15*PI/180\nsq(x):x*x\nTs:.31\nTd:.345\nalpha:.62\nB(x)=Td/PI+Ts/(PI*sq(alpha)*sqrt(cos(theta)*cos(PI/180*x)))*exp(- \nsq(tan(PI/180*x-theta)/alpha))\nBnpoints=50\n\n\nUnfortunately, I don't have any copies of the graphs here on my laptop,  \nbut basically this input file and the script above creates a polar  \ntransmission plot showing two curves, one for the measured data and one  \nfor the mathematical plot of the Radiance trans performance, based on  \nthe input parameters in the input file.  Greg played with the T  \nparameters until the curves looked similar.  It's one of those  \napplications of the Radiance suite that shows the beauty and power of  \nRadiance.  I just wish I could get the script to run on my own  \nmachines, so I could experiment on my own.\n\n\nI hope this all makes sense, and sheds some light on what we did.\n\n\n\n\n\n\n    Rob Guglielmetti\nwww.rumblestrip.org\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2004-January/001415.html).</sup>", "id": "radiance-general_001415", "created_by": "Rob_Guglielmetti"}