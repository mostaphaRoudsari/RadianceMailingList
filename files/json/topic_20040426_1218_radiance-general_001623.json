{"topic": ".oct-instances, overlapping octrees?", "category": "radiance-general", "attachments": [], "created_by_name": "Lars O. Grobe", "created_at": "April 26, 2004 at 12:18PM", "body": "Hi list.\n\n\nI have a question regarding the useage of octrees as instances. Are \nproblems experienced when the bounding boxes of instances overlap, or \nonly if the actual geometry contained in the instances overlap.\n\n\nE.g. if I have one hollow cube (instance1) and one small cube \n(instance2) inside instance1, the bounding boxes overlap, while the \ngeometry doesn't conflict (because instance1 is like an empty room, \ninstance2 like a piece of furniture). Should I expect problems in such \nconfigurations?\n\n\nThe reason for my question is that I am \"atomizing\" a huge model into \nsmall objects, which will be instances placed by markers. The objects' \ngeometries will all fit nicely and won't overlap, but of course a lot \nof the octrees' bounding boxes will overlap, and I am a bit worried if \nthis concept will make trouble later...\n\n\nGreg Ward wrote in a reply to my ideas about geometrical structured \nsurfaces some time ago:\n\"If we were to minimize code changes, we'd be using instances of some \nkind with clipping, and we'd end up with a lot of overlapping \nsuboctrees.  Many on this list can tell you their headaches surrounding \nthose if you haven't had enough of your own.  Getting tighter bounds on \nthe instanced geometry would require some rather fundamental changes to \nthe handling of octrees, and still wouldn't completely remedy the \nproblems with side-by-side instances.  They just don't work that well.\"\n\n\n\n\nTIA+CU Lars.\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2004-April/001623.html).</sup>", "id": "radiance-general_001623", "created_by": "Lars_O._Grobe"}