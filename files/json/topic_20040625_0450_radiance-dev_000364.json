{"topic": "rpict/rpiece dies in inithemi", "category": "radiance-dev", "attachments": [], "created_by_name": "Mark Stock", "created_at": "June 25, 2004 at 04:50AM", "body": "[discussion moved over from Radiance-general\n\n\nSummary:\nrpict and rpiece bomb with the \"bad ray direction in inithemi\"\nerror, optimization not (?) to blame\n\n\nLonger story:\nI keep encountering trouble rendering my scene with rpiece.\nI will start 6 rpiece jobs and after a few hours each one\nwill have stopped because it encountered the \"bad ray direction\nin inithemi\" error (rt/ambcomp.c). I am running 3.6a on Linux\non a cluster of Opterons, and compiling with gcc. I have tried\nversions compiled with -O3, -O2, -O, and no optimization.\n\n\nAn image of the scene can be viewed here:\nhttp://mark.technolope.org/image/p42_temp/img15e1.png\n(from 8x8 rpiece, larger image in works is 24x24 pieces)\n\n\nThe scene contains many cones with zero radius at one end,\n2000 of them, to be precise. I looked at the code in\nrt/o_cone.c, but couldn't quite figure out how the RAY->ron\nvalue is set (intersection surface normal).\n\n\nThe error stems from a test in rt/ambcomp.c that checks the\n3 components of the ray's intersection surface normal for any\ncomponents outside of the bounds [-0.6:0.6]. I'd like, if I\nmay, to ask what this check accomplishes. I removed the\ncheck and re-ran it, but I get other errors.\n\n\nIs there something inherently bad with cones with zero-radius\nends? Or is the 64-bit gcc simply unreliable (and I have\nto render this piece on the slower 2-proc Athlon)?\n\n\nMark\n\n\nOn Thu, 27 May 2004, Greg Ward wrote:\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-June/000364.html).</sup>", "id": "radiance-dev_000364", "created_by": "Mark_Stock"}