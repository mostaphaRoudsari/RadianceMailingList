{"topic": "Windows build", "category": "radiance-dev", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "October 23, 2004 at 09:26PM", "body": "Siegbert Debatin wrote:\n\n\n> Georg Mischler wrote:\n>> I didn't see any specfic fixes from you. Did you only intend\n>> to send those, or is this a mail system failure?\n>\n> I sent them on Tuesday morning this week to schorsch at schorsch.com. I just\n> redirected the original mail to you. Please give me a note, if you didn't\n> receive it.\n\n\nMail with a *.zip attachment is sorted into a seperate folder\non my server, together with all the viruses and worms. Quite\nlikely that I didn't spot yours in between those and accidentally\ndeleted it.\n\n\nBut I got the second copy, and applied as much of it as I could.\nThe changes are checked in and should be in tomorrows HEAD dump.\n\n\nFollowing below are my comments to those items where I didn't\nsimply use your fix. The explanations and questions may also be\ninteresting for others to better understand the task at hand.\nIf anyone sees a specific problem that they'd like to tackle,\nplease speak up so we can discuss the details.\n\n\n1.\nYou added a \"typedef RT_PID pid_t\" to common/rtprocess.h.\nHowever, we shouldn't be using pid_t, as it is platform specific.\nI found only one place where it was still used, in the dummy\ndefinition of kill() in util/win_netproc.h. I removed this\nfunction, because the new win_kill() in common/win_process.c\nshould be used instead (but see next item).\n\n\n2.\nThe kill(pid, SIGALRM) in gen/mkillum.c was added recently and\npoints to a more general problem on Windows. First there is no\nkill() in Windows anyway. I added a #define in rtprocess.h, so\nthat it will call win_kill() and ultimately SafeTerminateProcess()\nfrom common/win_process.c. But this only solves part of the\nproblem, because it ignores the signal number and always does the\nequivalent of a \"kill -9\". The reason unix uses SIGALRM here is\nto alert the subprocess, so that it has a chance to clean up its\ntemporary files etc. before exiting. I assume there's equivalent\nnotification functionality available in the native Win32 APIs.\nMaybe we should create an abstraction like \"send_alarm_to_die()\"\nto generalize the task?\n\n\n3.\nThis leaves us with select() not linked in gen/mkillum2.c.\nThe select() call was recently added for parallel processing.\nIt may be possible to compile this with the right libaries, but\nit will NOT work on Windows because the Windows select() only\nsupports sockets. Does anyone know a good alternative to poll a\nnumber of file descriptors without doing a busy-wait on Windows?\n\n\n4.\nWhat does Windows define in sys/file.h? Is it present on all\nversions? In that case, it might be better to include that in\ncommon/paths.h or common/platform.h instead of directly in\not/obj2mesh.c.\nYou also added sys/file.h to rt/rpict.c, but in a section that is\nonly relevant to posix-but-non-bsd systems, which I assume is not\nwhat you meant. Did moving platform.h further up there solve\nanything?\n\n\n5.\nThe missing goto label in util/rad.c was still present in the\nsources to Radiance3.3 (from DR), so I added it again.\nThat code allows to pass view parameters in through environment\nvariables. This is/was necessary for programs that are called\nthrough system()/popen(), where the shell would limit the number\nof arguments passed to a subprocess. I'm not sure if it is still\nneeded, or if it even might be helpful on other platforms as\nwell.\n\n\n6.\nincluding sys/wait.h only for POSIX systems in util/rpiece.c is\nugly, but the simplest workaround for the moment. We'll need an\nabstraction for the process management in rpiece to make this\nportable.\n\n\n7.\nYou changed the first argument of bfree() in common/bmalloc.c to\nchar*, so we can operate arithmetics on it (analog to my fix for\nbposition). However, changing the signature of that function\nwould require numerous casts elsewhere. I now created a seperate\nlocal char* variable, which should give us the positive effect\nwithout the signature change.\nActually, what was the latest consensus again? Do we really still\nneed common/bmalloc.c anymore on any current platforms?\n\n\n8.\nYou included resolu.h a second time in gen/genrev.c. Did that\nchange anything, or was the actual solution to link against\nrtio.lib?\n\n\n9.\nRa_bmp.exe now links against rtproc.lib, and common/tmapcolrs.c\nincludes rtprocess.h, so that they will have our popen()\nreplacement available and should build on Windows as well.\n\n\n\n\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2004-October/000460.html).</sup>", "id": "radiance-dev_000460", "created_by": "Georg_Mischler"}