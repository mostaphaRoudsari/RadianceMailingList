{"topic": "yes response :)", "category": "radiance-dev", "attachments": [], "created_by_name": "Ignacio Mun\u00e1rriz", "created_at": "May 28, 2005 at 11:59AM", "body": "Thanks all , i started to feel bad, as artist i'm very \"sensitive\", you\nknow. :-)\n\n\nGreg : \"What are your motivations, goals, etc.?  Without spelling some of\nthese things out, it's difficult to know when and how others might\nhelp you.\"\n\n\nI work in a spanish version of Visarc and i thought, as many people, that a\nrealtime\narchitecture visualizer would be cool for my work. Rholo is a very powerful\nprogram, but\nhas the problem that in architecture straight lines(edges) are very\nimportant , and rholo gets (still) a bit\nslowly the refined image.\n\n\nNow i am merging rview and glrad, so you can swicth from one to other with\nan icon click. In future i\nwould like to reuse glrad opengl depth values to optimize the rview ray\nintersects, and try to find other\nways to optimizing rview speed without compromising accurate, althought i'm\nsure it will be a hard work\nbecause greg has done a very good work.\n\n\nmerging rview and glrad over a windows system i've found some problems, as\nglrad uses for mesh conversion\nthe same pointer to functions as rview for ray intersects (face, sphere...),\nit is resolved using a exernal rtrace\nprocess for rview that in addition alows not to idle the windows enviroment.\n\n\nIan : \"Sure. A nicer GUI would be good. And the non-X11 (Windows and OS/X)\nusers\nwould probably like a native replacement for rview/rvu.\"\n\n\nI would like to make a very easy program, so all windows users can use it\nbut also hold every possible radiance\noptions and ways of work so advanced users can use it too.\n\n\n\n\n\"If I were trying to maintain a native Radiance description in an\neditor, I'd probably require the user or CAD system isolate objects\nin separate scene files.  My editor would then place these with the\nappropriate  xform's or instances (a la replmarks) in the main scene,\npossibly building a hierarchy.  I wouldn't attempt to parse all the\nvarious scene-generating commands in Radiance, particularly because\nusers are allowed and encouraged to write their own.\"\n\n\nYes i got the same conclusion,and i think it will be the best way. but i'm\nnow wondering what can i do\nwith material edition. a parser the erases all material definitions and\ncreates a memory structure and\n an additional material file?\n\n\n\"Yes, I think that the persistent mode of rtrace and rpict have been a\npersistent problem under Windows, so to speak.  Why don't you simply\ntrack which rays belong with which views, and discard returned rays\nfrom the previous view(s)?  That way, you don't have to restart\nrtrace, which is bound to be a lot more expensive than discarding a\nfew rays.  So long as your input queue to rtrace is held to a\nreasonable length, i.e., the average number of rays it computes in a\nsecond, the delay should be tolerable.  This is the approach I take\nin rholo, for instance.\"\n\n\nyes but it would be very nice that rview can show something( 1,4,8.. nodes)\nat interactive speed(while orbiting, dolling ...), isnt it?\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2005-May/000620.html).</sup>", "id": "radiance-dev_000620", "created_by": "Ignacio_Mun\u00e1rriz"}