{"topic": "Ray Parameters", "category": "radiance-dev", "attachments": [], "created_by_name": "Marcus Jacobs", "created_at": "August 13, 2005 at 10:44PM", "body": "Dear Group\n\n\nI am seeking to make a minor modification of the Radiance source code to \nsolve an issue that I am having with my renders. The issue that I am trying \nto resolve is the color shift (i.e. color bleeding) that occurs. My goal is \nto allow for me or anyone else to wishes to utilize the added functionality \nto gain some artistic control on the amount of color bleeding that occurs \nwithout invalidating the physical accuracy of the result. I have been able \nto accomplish this in RADZILLA by utilizing its alternate ambient material. \nI have an idea which may accomplish the same goal in classic Radiance.\n\n\nIn rayinit.cal there are many variables (i.e. Dx, Dy, Dx, Lu, Lv, etc.) that \nare available to the user for use in function files. What I would like to do \nis to gain control of the ray type parameter (rtype) defined in ray.h. The \nbasic concept is that in a function file associated with colorpict or \ncolorfunc, if the ray type is equal to anything excluding an ambient ray, \nthe color will remain unchanged. If the ray type is an ambient ray, the \ncolor could be defined by the user.  I have created my own function file \n,colorshift.cal, which would define the ambient color of a material as:\n\n\nred = (1- B4) * grey(B1,B2,B3) + B4*B1;\ngreen = (1- B4) * grey(B1,B2,B3) + B4*B2;\nblue = (1- B4) * grey(B1,B2,B3) + B4*B3;\n\n\nwhere B1, B2, B3, B4  is the color's red, green, blue components and color \nbleeding factor (detemined by the user) respectively. This will have the \neffect of desaturating the color according to the color bleedig factor \nwithout altering its overall reflectance (i.e. grey(r,g,b) will remain \nconstant). I have done some research in func.h and func.c to see how I might \ngain some control over the ray type parameter. I have not had much luck in \ncompletely understanding how the code works. I am assuming that many of the \nstandard parameters listed in rayinit.cal are extracted in the function \nchanvalue. One problem that I am having is that I can find where this \nparticular function is being called elsewhere in the source code. Any \ninsight as to how to accomplish my goal would be greatly appreciated.\n\n\nRegards,\n\n\nMarcus Jacobs\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2005-August/000628.html).</sup>", "id": "radiance-dev_000628", "created_by": "Marcus_Jacobs"}