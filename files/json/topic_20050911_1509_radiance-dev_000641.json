{"topic": "Radiance compiled with mingw gcc (windows)", "category": "radiance-dev", "attachments": [], "created_by_name": "Francesco Anselmo", "created_at": "September 11, 2005 at 03:09PM", "body": "Hi all!\n\n\nI've finally started looking at rtcontrib to replace my own scripts to\ncalculate daylight coefficients, and need to use it with windows\n(unfortunately!) and without cygwin, so I've been \"forced\" to try the mingw\n(http://www.mingw.org/) version of gcc to compile Radiance.\n\n\nScons has worked pretty well to compile most of the console programs. \nI used these variables in platform\\win32_custom.cfg:\n\n\n[build]\nCPPDEFINES: _WIN32 NDEBUG _CONSOLE _MBCS NON_POSIX\nCC:        gcc\nCCFLAGS:   -O2 -DHDSUF=.exe\n\n\n[code]\nRAD_SPEED: -DSPEED=200 -DHDSUF=.exe\nRAD_COMPAT: fixargv0.c\nRAD_MATHCOMPAT: erf.c\nRAD_MEMCOMPAT: \nRAD_MLIB:   m\nRAD_PROCESS: win_process.c win_popen.c\n\n\nand had to manually add some extra RAD_COMPAT inside a couple of SConstruct files\n(maybe somebody can suggest a better CPPDEFINES line ...).\n\n\nAs for the source files: \n\n\n1.\nI had to redefine kill() inside rad.c and ranimate.c\nusing \"RT_PID pid\" instead of \"int pid\":\n\n\nint\nkill(RT_PID pid, int sig) /* win|unix_process.c should also wait and kill */\n{\n\treturn 0;\n}\n\n\nAlso, inside win_process.c for the close_process() function:\nwas -----------------> int win_kill(pid, 0);\ni've changed it to --> win_kill(pid, 0);\n\n\n2.\nThe mingw version of signal.h doesn't have a definition for SIGALRM, so\nkillpersist() inside mkillum.c needs to be changed:\nIt is like this:\nif (fscanf(fp, \"%*s %d\", &pid) != 1 || kill(pid, SIGALRM) < 0)\nbut I've used SIGTERM instead of SIGALRM, don't know if this make much sense ...\n\n\n3.\nrtcontrib was calling rtrace with a wrong command line. It was something like\nthis:\n\n\nc:\\radiance\\bin/rtrace.exe rtrace [args ...]\n\n\nAfter some little searching I used this quick workaround inside win_process.c\n\n\n\t        cmdpath = getpath(av[0], getenv(\"PATH\"), X_OK);\nadded by me -->\tav[0] = \"\";\n\t        cmdstr = quoted_cmdline(cmdpath, av);\n\n\nthat may have broken something somewhere else, so probably\na better solution would be to do some extra checks inside the _WIN32 section\nof getpath.c.\n\n\nI am interested only in rtcontrib right now, so I haven't checked\nif other programs that call open_process() are still working or not.\n\n\n4.\nMingw doesn't have fseeko(), and I replaced it with fseek() inside rtcontrib.c.\nThis seems to have broken the file output, that is working well with both\ncygwin and linux. Is there an easy workaround for this? I don't have very\nmuch experience to figure it out myself. Output to stdout now works fine ...\n\n\nI hope not to have forgotten anything.\n\n\nSorry for the long email and thanks in advance,\n\n\nFrancesco\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2005-September/000641.html).</sup>", "id": "radiance-dev_000641", "created_by": "Francesco_Anselmo"}