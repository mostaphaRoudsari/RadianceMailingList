{"topic": "Modulating diffuse albedo by an image", "category": "radiance-general", "attachments": [], "created_by_name": "Claus B. Madsen", "created_at": "December 13, 2007 at 05:28AM", "body": "Dear List members,\n\n\n\n\nI have written a function file which allows me to project real images\ntaken with a calibrated camera onto the (manually) modelled geometry of\nthe scene (see attached images). Writing the function file was dead\nsimple thanks to the really powerfull and well-designed function file\nframework.\n\n\nI have used colorpict to modify a plastic material with parameters (1 1\n1 0 0), i.e. a perfect diffuse reflector. My function file tells\ncolorpict what uv coordinates to use for a given ray.\n\n\nMy question/problem is: how to handle the ray intersection points that\ndo not map to a pixel in the back projected image (i.e., points that are\noutside the field-of-view of the original image). The attached image\nclearly shows how the top and bottom image lines, and left and right\nimage columns get smeared across the geometry because I am computing uv\ncoordinates which in fact are outside the image bounds.\n\n\nWhat I really want is to be able to return a controlled (constant) RGB\nvalue for all uv coords falling outside the image bounds.\n\n\nSuggestions, anyone?\n\n\nBest,\nClaus\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-general/2007-December/004638.html).</sup>", "id": "radiance-general_004638", "created_by": "Claus_B._Madsen"}