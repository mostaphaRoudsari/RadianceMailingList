{"topic": "Radiance cross-platform issues & GUIs, oh my!", "category": "radiance-dev", "attachments": [], "created_by_name": "R Fritz", "created_at": "July 07, 2008 at 10:24PM", "body": "I've been looking into this. I'm planning a thesis involving Radiance,  \nso I think I'll have some time to put into this. (I am probably  \nrehashing older discussions here; forgive me.)\n\n\nI'm looking at a cross-platform set of build scripts, which I think  \nare plausible now that we're down to three or four platforms, though  \nI'm going to carefully avoid the problem of building, for instance, X  \nwindows components on Microsoft Windows. These proposed scripts are  \nintended to be in addition to current scripts rather than  \nreplacements. I think I can make these simple and effective; we'll  \nhave to see how well I do.\n\n\nPerhaps I can embed most of the the existing commands in C++ classes.  \nIdeally, all the current code would be left unchanged; this would also  \nbe \"in addition to,\" rather than \"instead of\". The classes could then  \nbe invoked from conventional cross-platform GUI code. I am looking at  \nWxWidgets for the GUI, but in principle any GUI classes or functions  \ncould be used--even native Windows or Mac classes.\n\n\nOne area where I think Radiance might reap some benefit from changes  \nin the core code--though if the community doesn't want to go this way  \nI'll leave it be--would be to integrate some shell functionality in  \nthe processing of the Radiance Scene Description Language (RSDL?)  \nPerhaps we can imagine an rdsl_open() routine which contains a simple  \nnon-interactive shell and implements pipes, simple argument quoting,  \nxform, tmesh2rad, gen*, and perhaps a few other operations as built- \nins. Anything complicated and shellish rdsl_open() would forward to  \nthe system shell, with the understanding that this makes the RDSL code  \nsystem-dependent. This would enormously simplify Microsoft porting,  \nand might even lead to speed improvements in oconv, since it would  \ntrade memory for process creation. Memory is cheap these days;  \nprobably cheaper than Unix processes and probably much cheaper than MS  \nprocesses.\n\n\nWhat do people think?\n\n\nRandolph\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2008-July/000878.html).</sup>", "id": "radiance-dev_000878", "created_by": "R_Fritz"}