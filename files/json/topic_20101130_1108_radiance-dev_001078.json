{"topic": "releases, revisions, radiance, rage - some thoughts on packaging Radiance", "category": "radiance-dev", "attachments": [], "created_by_name": "Peter Apian-Bennewitz", "created_at": "November 30, 2010 at 11:08AM", "body": "Hi maintainers of packages, Hi folks,\n\n\nmaybe some thoughts on Radiance and its situation, from someone who had \nwatched this from the periphery for a decade or two. Maybe it saves you \nsome high blood pressure when \"fixing other people's code\".\n\n\na) getting Radiance into distributions, IMHO, is very helpful and much \nappreciated by anyone in the community. This will get the tool to the \nend user more easily.\n\n\nb) Radiance code is not always easy to handle, e.g. since the built \nprocess never followed the mainstream. On the other hand, when it \nstarted, the now standard \"configure; make\" sequence wasn't mainstream \nanyway. If you never got mad over \"string.h\" versus \"strings.h\", you're \nlucky. Apache, the Linux kernel, all more modern.\n\n\nc) Radiance's situation is somewhat similar to Cyrus IMAP, which had \nbeen developed by Carnegie Mellon, and which had its Achilles heel of a \nsubstantial lack of docu around 2005. That was only overcome by CM \ngetting some funding to further care for its baby (as far as I know). \nRadiance is viewed by LBNL (www.lbl.gov) as their baby, which at least \nis true for the code distributed by the release process on \nradiance-online.org. LBNL had never, to my knowledge, gotten funds for \nsupport or even further development of code. And both the number of \ndevelopers and the size of the community are much smaller than for \nCyrus, Apache, GNU tools or similar projects. Think two orders of \nmagnitude here.\n\n\nd) There are a number of enhancements that would be very useful to have \nin Radiance: Algorithmic features that actually extend the work that can \nbe done with Radiance, thoughts on getting the code more modular, built \nprocess, test process. For me, for example, the first would be the \nutmost important. For you, packaging comes with other priorities. In \nregard to some emails lately, please be prepared that your view might \nnot be the greatest common divisor among Radiance users or folks concern \nwith Radiance development.\n\n\ne) make, dmake, gmake, RCS, GIT, subversion etc. : All nice and cool and \nuseful. Newer tools could be used to Radiance's advantage. If you want \nmy two cent recommendation on how to get them: Explain to LBNL why \nRadiance differs from other packages that you maintain, what the \nadvantages for the end user are (e.g. thinking of 'correct' version \nnumbers like 4.5.0.1 instead of 'HEAD from 11/12/2010' when Radiance is \nincluded on Debian's next release), and how many people are potentially \nusing your release (estimated numbers for your distribution).\nThe situation that Radiance is included with Linux distros is \ncomparatively new to Radiance. If you require principal changes to the \nupstream system, explain the advantages for the end-user and yourself \n(see last sentence) to folks managing the funds. Same goes for Solaris, \nWindows, Mac, etc.\n\n\nf) Most any release process can be streamlined. The RCS/CVS I added in \n2003 on the then pirate-state radiance-online, is by no means cast in \ngold. It had been a step forward from the very first SCCS and came after \nan intermediate interval with no source revisions. Maybe CVS can be \nextended or used more fully, maybe another tool is more powerful.\n\n\nIn any case:\n\n\nGetting Radiance to move is not so much a problem of suggesting new \ntechnology, but getting funds to pay folks who know what to do and \nputting them in a framework to do so over a reasonably foreseeable time \ninterval.\n\n\nthanks for your interest, best regards\nPeter\n\n\n\n\npab advanced technologies Ltd, http://www.pab.eu\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2010-November/001078.html).</sup>", "id": "radiance-dev_001078", "created_by": "Peter_Apian-Bennewitz"}