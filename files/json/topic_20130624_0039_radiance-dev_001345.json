{"topic": "RGBE in OpenCV", "category": "radiance-dev", "attachments": [], "created_by_name": "Axel Jacobs", "created_at": "June 24, 2013 at 12:39AM", "body": "Dear dev,\n\n\nOne or the other might be interested in this: This year's Summer of\nCode has two projects under 'OpenCV' that deal with HDR/RGBE:\n\n\nhttp://www.google-melange.com/gsoc/projects/list/google/gsoc2013\n\n\n- High Dynamic Range imaging\nThe goal of the project is to add full HDR support to openCV. This\nincludes loading HDR images from popular formats to floating-point\nmatrices, supporting various tone-mapping techniques and implementing\nHDR image creation from a set of bracketed images times with different\nenhancements including camera calibration and single-shot HDR images.\n\n\n- Photometric calibration for imaging devices\nThis project aims at developing a library for photometric calibration\nof imaging devices.Specifically, I would like to implement functions\nfor the radiometric response calibration, vignetting calibration,\nnoise level estimation, and the point spread function estimation,\nwhich are essential for computer vision algorithms dealing with\nphotometric information (i.e. color constancy, High-dynamic range\nimages, inverse rendering).\n\n\nAlso for the Pythonistas amongst you:\n- OpenCV-Python Tutorials\n\n\n1 - Develop a new tutorials for OpenCV-Python API covering a major\nportion of the API (Similar to the existing C++ tutorials). 2 - Extend\nPython bindings for the newly added modules and any missing\nfunctionalities. 3 - Fix discovered bugs, missing docs etc on the way.\n\n\nI messed with Python OpenCV just over a year ago, and got stuck\nbecause the Python API is poorly documented. Also because I didn't\nknow what I was doing, but I won't mention this here...\n\n\nCheers\n\n\nAxel\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2013-June/001345.html).</sup>", "id": "radiance-dev_001345", "created_by": "Axel_Jacobs"}