{"topic": "State of the SCons", "category": "radiance-dev", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "March 09, 2016 at 06:27PM", "body": "Hi all,\n\n\nafter all those years, I found that my CVS write access is\nstill active.\n\n\nSo I went and updated the SCons build system.\n\n\nIt now works nicely again with the last few SCons versions.\nUnfortunately, SCons still reqires Python 2.7, I'm really\nhoping for it to support Python 3 soon.\n\n\nThe compile results are now placed in a seperate \"scbuild\"\ndirectory tree. Each target platform gets its own subbranch\nin there.\n\n\nTarget configurations now differentiate between 32 and 46 bit\nsystems. I had to rename the platform config files for that.\nCurrently the build is autmatically set to the architecture\nof the host platform.\n\n\nIt might be nice to be able to cross-compile at least for the\ncompanion bit-architecture of the same platform, which should be\npossible to do.\nOn the other hand, I'm not sure if its really worth the effort.\nHow many people are still running Radiance on 32 bit systems?\nBut at least the possibility should be kept open, so we won't\nneed another redesign when the first 128 bit systems come out in\na few years...\n\n\nOn linux, everything builds without a hitch. We get the same\nexecutables as with makeall, and then some.\nIt's also much faster than ten years ago! ;)\n\n\nOn Windows, everything without third-party dependencies builds\nfine with the current VC 2015 \"Community\" compiler.\nI haven't yet gotten around to fetching the Windows dev packages\nof Tifflib and QT, so those parts need some more work.\nX11 is probably not worth the hassle (though there might be ways).\n\n\nThe tifflib included with the NREL binaries didn't work, which\nmeans they used a different compiler. In fact, they must be using\ngcc on Windows, because I found (and fixed) some non-standard\nallocation magic in src/cv/bsdftrans.cpp that only gcc accepts.\n\n\nI haven't looked at qtrvu very closely. But even on a cursory\nglance it looks straightforward to build. This should not be a\nproblem for SCons and MSCC, once all the dependencies are in place.\nAh... can we standardize on a file name extension for C++ files in\nRadiance? Right now we have both *.cxx and *.cpp.\n\n\nWith the current MS compiler on 64 bit, there are a huge number\nof coercion warnings all throughout the code. Most of those are\nprobably harmless, even if annoying.\n\n\nThere are two files tough, where the warning says that \"the\nresult of a 32 bit shift operation was coerced to 64 bit. Was\nthere a 64 bit shift intended?\"\n   src/common/bmpfile.c\n   src/util/rttree_reduce.c\nI can't really tell, so I've just marked the lines with an\n\"XXX\" comment for review.\n\n\n\n\nIf anyone wants to give the \"new\" SCons a try on any platform,\ngo ahead!\n\n\nPlease tell me about your results, particularly about any\nchanges to the config files you might find necessary.\nInstructions are in ray/INSTALL.scons and ray/platform/README.\nAll changes are in CVS, the HEAD package should include those\nchanges in a day or so.\n\n\n\n\nhave fun!\n\n\n-schorsch\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2016-March/001487.html).</sup>", "id": "radiance-dev_001487", "created_by": "Georg_Mischler"}