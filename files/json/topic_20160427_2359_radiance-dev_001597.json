{"topic": "Radiance and Open-Gl", "category": "radiance-dev", "attachments": [], "created_by_name": "Georg Mischler", "created_at": "April 27, 2016 at 11:59PM", "body": "That's quite interesting information (at least for me, after\nbeing out of the loop for a while).\n\n\nBut I think there are two different contexts to consider here.\nGlrad is obviously a quick-and-dirty solution, but it works and is\nincluded in the distribution. I think it's absolutely worth it to\nfix some small stuff in there like checking for another two event\nkeys to get the scroll wheel working properly.\n\n\nFor more advanced features, I'd prefer a less platform dependent\nsolution (which then in turn tends to add toolkit dependencies).\n\n\nI've already wondered what might have happened with rshow.\nI don't see Tk as a problem at all. I use it all the time (it comes\nincluded with Python) and consider it the most underestimated GUI\ntoolkit on the planet.\nTcl as a language though... might be hard for anyone but you to\nmaintain.\nBtw: The simplest approach for the complexity problem seems to be\nfrustrum clipping. Probably works well for trees in a forest, but not\nso well when you have very detailed geometry within the space you're\nlooking at.\n\n\nI've looked at higher level 3d toolkits from time to time out of a\nmore general interest (again from a Python perspective). Many are\nrather huge and loaded with game-related features that we wouldn't\nneed. My current favourites are Panda3D and VTK. They both are\nsufficiently powerful, cross-platform, with mature APIs in several\nlanguages, and adequately free licenses.\nBut I haven't managed to actually play around with either of them yet.\n\n\nCheers\n-schorsch\n\n\n\n\nAm 2016-04-28 07:17, schrieb Peter Apian-Bennewitz:\n> Hi folks,\n> \n> before you get all carried away with Xlib events for mouse scroll , -\n> and to add some thoughts on the rediscovery of glrad:\n> \n> Rshow, http://www.pab-opto.de/progs/rshow/ , the current Open-Gl\n> version of my 1993 rshow on the then Iris-Gl, is still existing. Comes\n> with GUI and some extra features, like generating image mapping, data\n> display, grid generation, raytracing and multiple windows. Not much\n> advertising for it over the years (except this one, also see 1998\n> paper on rshow), it is still in daily use here and at Fraunhofer ISE.\n> (Note to LBNL: ISE is /not/ IBP, in case you shift all credit to IBP\n> again).\n> \n> Lessons learned:\n> The core problem with Open-Gl display in practice seems complexity.\n> E.g.: Being inside a cabin with a forest outside doesn't matter for\n> raytracing speed, but it does for plain Open-Gl, since it tries to\n> draw all trees outside, visible or not. Today\u2019s entry graphic cards\n> have more power then a 1995 SGI Onyx2 , yes, but scenes have become\n> more complex too, so brute force works only so much.\n> Rshow has a commandline option to ignore geometry below a certain\n> size, so that allow interactive navigation with smooth, tessellated\n> CAD surfaces, but it is a rather amateurish solution. Its Tcl/Tk GUI\n> is a bit dated too, although, Tcl/Tk libraries are still supported by\n> Debian and others. Apart from all this, I had not a single project in\n> the last 20 years where rshow was not used, - \"works for me\".\n> \n> There's at least one other Radiance geometry renderer out there,\n> written by Andreas Gerber, based on some graphics library, but I don't\n> further details at hand.\n> And one of the nicest Open-GL renderers had been the one in \"Ecotect\",\n> - before it disappeared in the garbage bin of Autodesk.\n> \n> Both rshow and glrad use the legacy API of Open-Gl, which has changed\n> since then with the introduction of \"shaders\". It is still backward\n> compatible (and probably will be a while with the mass of existing\n> programs), but users are encouraged to upgrade.\n> \n> Actually, I would have a look at the rendering engines available for\n> some games if I were to start a very fast hardware Radiance-previewer\n> from scratch today. They probably solved the Level-of-detail problem\n> neatly. The drawback is, of course, the dependency on their feature\n> library.\n> \n> cheers\n> Peter\n> \n> On 04/28/16 05:17, Douglas L Reeder wrote:\n>> Randolph,\n>> \n>> Yes, after I saw your 5 values I rotated it both ways and \n>> got/duplicated your\n>> results.\n>> \n>> Doug\n>>> On Apr 27, 2016, at 8:25 PM, Randolph M. Fritz <rmfritz3 at gmail.com\n>>> <mailto:rmfritz3 at gmail.com>> wrote:\n>>> \n>>> \n>>> On Apr 27, 2016 6:50 PM, \"Douglas L Reeder\" <dlr1 at centurylink.net\n>>> <mailto:dlr1 at centurylink.net>> wrote:\n>>> >\n>>> > Randolph,\n>>> >\n>>> > On os x with a logitech 3 button mouse with the center button being a mouse\n>>> wheel xev returns button 1 for the left button, 2 for depressing the \n>>> wheel, 3\n>>> for the right button, and 4 for rotating the wheel.\n>>> >\n>>> >\n>>> \n>>> Hunh, interesting. Did you try rotating the wheel both ways?\n>>> \n>>> _______________________________________________\n>>> Radiance-dev mailing list\n>>> Radiance-dev at radiance-online.org \n>>> <mailto:Radiance-dev at radiance-online.org>\n>>> http://www.radiance-online.org/mailman/listinfo/radiance-dev\n>> \n>> \n>> \n>> _______________________________________________\n>> Radiance-dev mailing list\n>> Radiance-dev at radiance-online.org\n>> http://www.radiance-online.org/mailman/listinfo/radiance-dev\n>> \n>> --\n>>   pab-opto, Freiburg, Germany, http://www.pab-opto.de\n> \n> _______________________________________________\n> Radiance-dev mailing list\n> Radiance-dev at radiance-online.org\n> http://www.radiance-online.org/mailman/listinfo/radiance-dev\n\n\n\n\nGeorg Mischler  --  simulations developer  --  schorsch at schorsch com\n+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/\n___\n<sup>Automatically generated content from [radiance mailing-list](https://radiance-online.org/pipermail/radiance-dev/2016-April/001597.html).</sup>", "id": "radiance-dev_001597", "created_by": "Georg_Mischler"}