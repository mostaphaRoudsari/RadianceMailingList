From radiance-general@radiance-online.org  Mon Nov  5 15:42:21 2001
From: radiance-general@radiance-online.org (radiance-general@radiance-online.org)
Date: Mon, 5 Nov 2001 16:42:21 +0100
Subject: [Radiance-general] transdata formula & sky component
Message-ID: <3BE6C16D.23060.1B3368F0@localhost>

Hi!

1) I am using the transdata material for incorporating measured 
BTDF's [1/sr] in Radiance. With the help of 'rtrace', I will verify the 
results. Is it possible to compute luminance values with 'rtrace'? 

2) In the Radiance Digest I have found a formula for the metdata 
material:

radiance (watts/sr/m^2) Lo = spec * cos(theta_i) * omega_i * Li * f

where:
        f = BTDF in 1/sr
mega_i = solid angle of source in sr
       Li = avg. radiance of source in watts/sr/m^2
theta_i = angle between surface normal and source direction
   spec = multiplier for specular component from material arguments

I would like to calculate the luminance values back to the 
measured BTDF's using the transdata formula. How can I get the 
transdata formula?

3) Another question concerns the diffuse sky component. How will 
Radiance compute this component with the transdata material?

Could anybody answer my questions or give me reference how I 
can solve these problems?

Best regards,

Frank

From radiance-general@radiance-online.org  Tue Nov  6 16:54:03 2001
From: radiance-general@radiance-online.org (Greg Ward)
Date: Tue, 06 Nov 2001 08:54:03 -0800
Subject: [Radiance-general] Re: transdata formula & sky component
References: <200111061101.fA6B12610565@darkside-animation.com>
Message-ID: <3BE815AB.443540B3@lmi.net>

Hi Frank,

There is a very helpful document that describes the material formulas on
the Radiance website:

	http://radsite.lbl.gov/radiance/refer/materials.pdf

You should note that the function you give to the transdata material for
the specular component should integrate to 1 over the sphere, not 4pi as
would be the case for a true BTDF.  This is because you are supplying
only the specular distribution, not the actual reflectance function, as
the formula for transdata includes some other factors (such as a diffuse
component) to build a complete BTDF.

Regarding the integration of the sky distribution, all of the BRTDF
types in Radiance approximate non-source contributions as diffuse,
because I never built in the machinery to properly integrate arbitrary
distribution functions.  So, the answer will not be exactly correct if
you use the custom reflectance materials.  Only light sources, such as
the sun, will utilize the distribution functions you specify.

I hope this helps.
-Greg

From radiance-general@radiance-online.org  Mon Nov 19 22:46:39 2001
From: radiance-general@radiance-online.org (Lars O. Grobe)
Date: Mon, 19 Nov 2001 23:46:39 +0100
Subject: [Radiance-general] panotools to map textures, patterns etc?
Message-ID: <3BF98BCF.B22D897F@gmx.net>

Hi!

For me (as I am a student of architecture and not of mathematics) it's
very difficult to understand how to map onto non-planar objects. E.g. if
I want to map onto a cylinder, I know that there is a cal-file, but I
don't really understand this. Now, maybe I should try, but I just found
a set of tools called panotools (www.panotools.org), which is able to
convert bitmap-files from different projections. Would it be possible to
use it to create imagefiles that could be mapped onto e.g. a radiance
cylinder without any further calculations, just like mapping iot onto a
plane? I would really like to have pic-files that don't need any further
calculations.

So, maybe someone tried something like this before? Or am I completely
wrong with this?

Thank You, CU, Lars.

From radiance-general@radiance-online.org  Tue Nov 20 06:29:37 2001
From: radiance-general@radiance-online.org (Peter Apian-Bennewitz)
Date: Tue, 20 Nov 2001 07:29:37 +0100
Subject: [Radiance-general] panotools to map textures, patterns etc?
References: <3BF98BCF.B22D897F@gmx.net>
Message-ID: <3BF9F851.CCC6632F@pab-opto.de>

--------------A522AABA7AADAA10EF38208A
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

"Lars O. Grobe" wrote:

> Hi!
>
> For me (as I am a student of architecture and not of mathematics) it's
> very difficult to understand how to map onto non-planar objects. E.g. if
> I want to map onto a cylinder, I know that there is a cal-file, but I
> don't really understand this. Now, maybe I should try, but I just found
> a set of tools called panotools (www.panotools.org), which is able to
> convert bitmap-files from different projections. Would it be possible to
> use it to create imagefiles that could be mapped onto e.g. a radiance
> cylinder without any further calculations, just like mapping iot onto a
> plane? I would really like to have pic-files that don't need any further
> calculations.
>
> So, maybe someone tried something like this before? Or am I completely
> wrong with this?
>
> Thank You, CU, Lars.
> _______________________________________________
> Radiance-general mailing list
> Radiance-general@radiance-online.org
> http://www.radiance-online.org/mailman/listinfo/radiance-general

Hi Lars,

don't know panaotools, but wouldn't think its feasible. The mapping  glues
world coordinates
(the xyz-coordinates your cylinder is defined in) to texture coordinates
(the pixel number in your image),
so it's somewhat 'outside' the image itself.

--math-on--
>From a math point of view this transformation could be one general one,
with a second one
implicitly defined in 'warping' the image, but that fails (mathematically)
at singular points in
the transformation. E.g. the mapping of a texture onto a polygon is just
too different from mapping
on a sphere.
 --math-off--

However, it's disappointing for casual users that Radiance hasn't got
default mappings for geometric
primitives (GUI builders- any comments ?).

For cylinders, I once used:

     merkur $ more picture_cyl.cal
     {
             Calculation of 2d picture coordinates for cylinders.
             A1, A2  are coordinates of cylinder, which extends along
     z-axis
             A3 is radius
             A4 is pic_ascpect
             A5 is scaling
     }

     pic_aspect=A4;
     pic_u = A3*atan2(Px-A1,Py-A2)/A5;
     pic_v = Pz / A5;

     tile_u = mod(pic_u,max(1,1/pic_aspect));
     tile_v = mod(pic_v,max(1,pic_aspect));

Which worked for a brick cylinder wall.

hope that helps
cheers
Peter

--
 pab-opto, Freiburg, Germany, www.pab-opto.de



--------------A522AABA7AADAA10EF38208A
Content-Type: text/html; charset=us-ascii
Content-Transfer-Encoding: 7bit

<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
"Lars O. Grobe" wrote:
<blockquote TYPE=CITE>Hi!
<p>For me (as I am a student of architecture and not of mathematics) it's
<br>very difficult to understand how to map onto non-planar objects. E.g.
if
<br>I want to map onto a cylinder, I know that there is a cal-file, but
I
<br>don't really understand this. Now, maybe I should try, but I just found
<br>a set of tools called panotools (www.panotools.org), which is able
to
<br>convert bitmap-files from different projections. Would it be possible
to
<br>use it to create imagefiles that could be mapped onto e.g. a radiance
<br>cylinder without any further calculations, just like mapping iot onto
a
<br>plane? I would really like to have pic-files that don't need any further
<br>calculations.
<p>So, maybe someone tried something like this before? Or am I completely
<br>wrong with this?
<p>Thank You, CU, Lars.
<br>_______________________________________________
<br>Radiance-general mailing list
<br>Radiance-general@radiance-online.org
<br><a href="http://www.radiance-online.org/mailman/listinfo/radiance-general">http://www.radiance-online.org/mailman/listinfo/radiance-general</a></blockquote>
Hi Lars,
<p>don't know panaotools, but wouldn't think its feasible. The mapping&nbsp;
glues&nbsp; world coordinates
<br>(the xyz-coordinates your cylinder is defined in) to texture coordinates
(the pixel number in your image),
<br>so it's somewhat 'outside' the image itself.
<p>--math-on--
<br>From a math point of view this transformation could be one general
one, with a second one
<br>implicitly defined in 'warping' the image, but that fails (mathematically)
at singular points in
<br>the transformation. E.g. the mapping of a texture onto a polygon is
just too different from mapping
<br>on a sphere.
<br>&nbsp;--math-off--
<p>However, it's disappointing for casual users that Radiance hasn't got
default mappings for geometric
<br>primitives (GUI builders- any comments ?).
<p>For cylinders, I once used:
<blockquote>merkur $ more picture_cyl.cal
<br>{
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Calculation of 2d picture
coordinates for cylinders.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A1, A2&nbsp; are coordinates
of cylinder, which extends along z-axis
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A3 is radius
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A4 is pic_ascpect
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A5 is scaling
<br>}
<p>pic_aspect=A4;
<br>pic_u = A3*atan2(Px-A1,Py-A2)/A5;
<br>pic_v = Pz / A5;
<p>tile_u = mod(pic_u,max(1,1/pic_aspect));
<br>tile_v = mod(pic_v,max(1,pic_aspect));</blockquote>
Which worked for a brick cylinder wall.
<p>hope that helps
<br>cheers
<br>Peter
<pre>--&nbsp;
&nbsp;pab-opto, Freiburg, Germany, www.pab-opto.de</pre>
&nbsp;</html>

--------------A522AABA7AADAA10EF38208A--


From radiance-general@radiance-online.org  Thu Nov 22 23:42:56 2001
From: radiance-general@radiance-online.org (Georg Mischler)
Date: Thu, 22 Nov 2001 18:42:56 -0500 (EST)
Subject: [Radiance-general] panotools to map textures, patterns etc?
In-Reply-To: <3BF9F851.CCC6632F@pab-opto.de>
Message-ID: <Pine.BSF.4.30.0111221822230.18128-100000@emancholl.pair.com>

Peter Apian-Bennewitz wrote:

> However, it's disappointing for casual users that Radiance
> hasn't got default mappings for geometric
> primitives (GUI builders- any comments ?).


Automatic mappings on single geometric primitives would be
relatively simple, but also not very useful. In most cases,
mappings will be applied to a group of primitives together,
eg. all the polygon segments of a curved wall. There's no
good way to automatically determine the axis of a cylindrical
mapping without user interaction in such a case.

I can only speak for myself, but enabling casual users to
place mappings without effort is not very high on my list of
priorities. Neither your example file nor the very similar
cyl.cal in the standard library require any deep mathematical
understanding. And of course, Lars isn't really a casual user,
(especially after buying a certain piece of software on Ebay)
so I'm sure he'll eventually figure them out... ;)


-schorsch

-- 
Georg Mischler  --  simulations developer  --  schorsch at schorsch.com
+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/


From radiance-general@radiance-online.org  Sat Nov 24 12:23:05 2001
From: radiance-general@radiance-online.org (Lars O. Grobe)
Date: Sat, 24 Nov 2001 13:23:05 +0100
Subject: [Radiance-general] panotools to map textures, patterns etc?
References: <Pine.BSF.4.30.0111221822230.18128-100000@emancholl.pair.com>
Message-ID: <3BFF9129.2FA456C2@gmx.net>

Hi!

Georg Mischler wrote:

> Automatic mappings on single geometric primitives would be
> relatively simple, but also not very useful. In most cases,
> mappings will be applied to a group of primitives together,
> eg. all the polygon segments of a curved wall. There's no
> good way to automatically determine the axis of a cylindrical
> mapping without user interaction in such a case.

Ok, I didn't want "automatic mapping" (something like this might be done
in the modeler, as I can find the axis of a cylinder quite easy there -
so this is what makes conrad interesting, as it exports 3ds-mappings).
What I think about is a way to create a static map for the object, so
that I can edit the mapping for this object until it fits and save this
pic-file. So I would not have the calculations in cal-files any more. Of
course this means a loss of flexibility, maybe it's simply better to
hold the complete object as an oct-file. 

> I can only speak for myself, but enabling casual users to
> place mappings without effort is not very high on my list of
> priorities.

Mappings are usually not the most important feature in radiance at all.

> (especially after buying a certain piece of software on Ebay)

;-) this "piece of software" is happily running on my laptop now!
There's just one reason for my question. I am working on a model of a
church. In fact, mappings are not the most important for our project,
but we have documented most important surfaces. So we have photos of the
domes, what AFAIK means a planar projection of a spherical surface. I
wonder how I would map this easily, if it gets important... ooops....
might it be that I could simply map it as on a planar surface in this
case...?

CU, Lars.

From radiance-general@radiance-online.org  Sat Nov 24 14:28:26 2001
From: radiance-general@radiance-online.org (Peter Apian-Bennewitz)
Date: Sat, 24 Nov 2001 15:28:26 +0100
Subject: [Radiance-general] panotools to map textures, patterns etc?
References: <Pine.BSF.4.30.0111221822230.18128-100000@emancholl.pair.com> <3BFF9129.2FA456C2@gmx.net>
Message-ID: <3BFFAE8A.35AB799F@pab-opto.de>

--------------58D68BBB729ED468D9AC0D89
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

"Lars O. Grobe" wrote:

> > I can only speak for myself, but enabling casual users to
> > place mappings without effort is not very high on my list of
> > priorities.
>
> Mappings are usually not the most important feature in radiance at all.

I've found rshow's  semi-automatic mapping for polygons quite useful in
projects, but
maybe that's why it had been added....

> > (especially after buying a certain piece of software on Ebay)
>
> ;-) this "piece of software" is happily running on my laptop now!

?

> There's just one reason for my question. I am working on a model of a
> church. In fact, mappings are not the most important for our project,
> but we have documented most important surfaces. So we have photos of the
> domes, what AFAIK means a planar projection of a spherical surface. I
> wonder how I would map this easily, if it gets important... ooops....
> might it be that I could simply map it as on a planar surface in this
> case...?

Reproducing the 3d->2d transformation of the camera results in the image
being where it was (well, not actually very suprisingly).
For  long focal length, a planar mapping  approximates the perspective
transformation. That works whether the surface is
actually planar or spherical, as you guessed,

-Peter


--
 pab-opto, Freiburg, Germany, www.pab-opto.de



--------------58D68BBB729ED468D9AC0D89
Content-Type: text/html; charset=us-ascii
Content-Transfer-Encoding: 7bit

<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
"Lars O. Grobe" wrote:
<blockquote TYPE=CITE>> I can only speak for myself, but enabling casual
users to
<br>> place mappings without effort is not very high on my list of
<br>> priorities.
<p>Mappings are usually not the most important feature in radiance at all.</blockquote>
I've found rshow's&nbsp; semi-automatic mapping for polygons quite useful
in projects, but
<br>maybe that's why it had been added....
<blockquote TYPE=CITE>> (especially after buying a certain piece of software
on Ebay)
<p>;-) this "piece of software" is happily running on my laptop now!</blockquote>
?
<blockquote TYPE=CITE>There's just one reason for my question. I am working
on a model of a
<br>church. In fact, mappings are not the most important for our project,
<br>but we have documented most important surfaces. So we have photos of
the
<br>domes, what AFAIK means a planar projection of a spherical surface.
I
<br>wonder how I would map this easily, if it gets important... ooops....
<br>might it be that I could simply map it as on a planar surface in this
<br>case...?</blockquote>
Reproducing the 3d->2d transformation of the camera results in the image
being where it was (well, not actually very suprisingly).
<br>For&nbsp; long focal length, a planar mapping&nbsp; approximates the
perspective transformation. That works whether the surface is
<br>actually planar or spherical, as you guessed,
<p>-Peter
<br>&nbsp;
<pre>--&nbsp;
&nbsp;pab-opto, Freiburg, Germany, www.pab-opto.de</pre>
&nbsp;</html>

--------------58D68BBB729ED468D9AC0D89--


