From radiance-dev@radiance-online.org  Wed Jul  2 16:53:55 2003
From: radiance-dev@radiance-online.org (=?iso-8859-2?Q?Ond=F8ej=20Jakub=E8=EDk?=)
Date: Wed, 02 Jul 2003 17:53:55 +0200 (CEST)
Subject: [Radiance-dev] =?iso-8859-2?Q?CVS=20access?=
Message-ID: <7971.22490-21888-967385653-1057161235@seznam.cz>

Hello,
I would like to have access to the repository using CVS.
I would like to add autoconf/automake support to Radiance and to
debianize it. I also found an error in CHECK macro (gcc 2.95.4
was unable to compile sources with it) and corrected it.

Good bye.
Ondrej Jakubcik
ojakubcik@seznam.cz

______________________________________________________________________
Reklama:
POZOR! Nova SkodaFabia RS - Adrenalin & Diesel http://ad2.seznam.cz/redir.cgi?instance=56529%26url=http://www.adrenalindiesel.cz


From radiance-dev@radiance-online.org  Wed Jul  2 17:12:47 2003
From: radiance-dev@radiance-online.org (Charles Ehrlich)
Date: Wed, 2 Jul 2003 09:12:47 -0700 (PDT)
Subject: [Radiance-dev] CVS access
In-Reply-To: <7971.22490-21888-967385653-1057161235@seznam.cz>
Message-ID: <20030702161247.29679.qmail@web80306.mail.yahoo.com>

--0-217588604-1057162367=:26745
Content-Type: text/plain; charset=us-ascii

Hi Ondrej,
 
Don't be surprised if Greg Ward politely declines your offer to add autoconf/automake support.  He much prefers his "makeall" script.  I suggest that you describe the many benefits that autoconf/automake would provide Radiance.  Greg's experience is that it is not necessary.
 
And, do you fuel your Skodas with Biodiesel? (RME)  I've got a VW Golf TDI that I have a lot of fun with.
 
-Chas

Ondøej Jakubèík <ojakubcik@seznam.cz> wrote:
Hello,
I would like to have access to the repository using CVS.
I would like to add autoconf/automake support to Radiance and to
debianize it. I also found an error in CHECK macro (gcc 2.95.4
was unable to compile sources with it) and corrected it.

Good bye.
Ondrej Jakubcik
ojakubcik@seznam.cz

______________________________________________________________________
Reklama:
POZOR! Nova SkodaFabia RS - Adrenalin & Diesel http://ad2.seznam.cz/redir.cgi?instance=56529%26url=http://www.adrenalindiesel.cz

_______________________________________________
Radiance-dev mailing list
Radiance-dev@radiance-online.org
http://www.radiance-online.org/mailman/listinfo/radiance-dev
--0-217588604-1057162367=:26745
Content-Type: text/html; charset=us-ascii

<DIV>Hi Ondrej,</DIV>
<DIV>&nbsp;</DIV>
<DIV>Don't be surprised if Greg Ward politely declines your offer to add autoconf/automake support.&nbsp; He much prefers his "makeall" script.&nbsp; I suggest that you describe the many benefits that autoconf/automake would provide Radiance.&nbsp; Greg's experience is that it is not necessary.</DIV>
<DIV>&nbsp;</DIV>
<DIV>And, do you fuel your Skodas with Biodiesel? (RME)&nbsp; I've got a VW Golf TDI that I have a lot of fun with.</DIV>
<DIV>&nbsp;</DIV>
<DIV>-Chas<BR><BR><B><I>Ondøej Jakubèík &lt;ojakubcik@seznam.cz&gt;</I></B> wrote:</DIV>
<BLOCKQUOTE style="PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #1010ff 2px solid">Hello,<BR>I would like to have access to the repository using CVS.<BR>I would like to add autoconf/automake support to Radiance and to<BR>debianize it. I also found an error in CHECK macro (gcc 2.95.4<BR>was unable to compile sources with it) and corrected it.<BR><BR>Good bye.<BR>Ondrej Jakubcik<BR>ojakubcik@seznam.cz<BR><BR>______________________________________________________________________<BR>Reklama:<BR>POZOR! Nova SkodaFabia RS - Adrenalin &amp; Diesel http://ad2.seznam.cz/redir.cgi?instance=56529%26url=http://www.adrenalindiesel.cz<BR><BR>_______________________________________________<BR>Radiance-dev mailing list<BR>Radiance-dev@radiance-online.org<BR>http://www.radiance-online.org/mailman/listinfo/radiance-dev</BLOCKQUOTE>
--0-217588604-1057162367=:26745--

From radiance-dev@radiance-online.org  Wed Jul  2 17:16:40 2003
From: radiance-dev@radiance-online.org (Greg Ward)
Date: Wed, 2 Jul 2003 09:16:40 -0700
Subject: [Radiance-dev] Re: Building Radiance 3.5 on Tru64
In-Reply-To: <E19XdiK-0001S1-00@unix.ccc.nottingham.ac.uk>
Message-ID: <90719E68-ACA8-11D7-A2F8-00306540F848@lmi.net>

Unless people feel strongly otherwise, I'm going to suggest we move 
this discussion to the radiance-dev list.

The error you get from oconv suggests that its getting confused about 
basic types, as the "bad # arguments" should not show up at all unless 
it thinks the light is a sphere or a face or something.

My first suggestion is that you try building from CVS head, which may 
be found on the radiance-online.org site under the "download Radiance" 
link.  Download the current experimental bug-fix version, called 
radiance-HEAD.tgz, and compile from that.  If you still get compile 
errors with the latest random.h, please forward them directly to me and 
I'll see what I can do.  It's probably best to send me the entire 
output of makeall.

-Greg
gward@lmi.net

Begin forwarded message:

> From: Colin Bannister <cczcb@unix.ccc.nottingham.ac.uk>
> Date: Wed Jul 2, 2003  2:15:43  AM US/Pacific
> To: radiance-general@radiance-online.org
> Subject: [Radiance-general] Building Radiance 3.5 on Tru64
>
> Hello,
>
> Has anyone any experience building Radiance 3.5 on Compaq tru64
> systems ?  I am trying this, and having some difficulty.
>
> Initially, I was getting errors in the librt build due to conflicting
> definitions of random functions.  I have cut down the file random.h
> to a minimum (included below) and now can get all the programs built
> without errors (although warnings are quite numerous).
>
> On running the oconv program on a file cut from the tutorial I get:
>
> cropwell2$ /opt/pkg/radiance/bin/oconv room.rad
> #?RADIANCE
> /opt/pkg/radiance/bin/oconv room.rad
> FORMAT=Radiance_octree
>
> /opt/pkg/radiance/bin/oconv: fatal - bad # arguments for light "bright"
>
>
> the room.rad is also included below.  Any advice would be welcome.
>
> regards,
>
> Colin Bannister
>
> room.rad:
>
> #
> #  My first scene.
> #
> #
> # The basic primitive format is:
> #
> # modifier TYPE identifier
> # number_string_arguments [string arguments...]
> # number_integer_arguments [integer arguments...]
> # number_real_arguments [real arguments...]
> #
> # The special modifier "void" means no modifier.
> # TYPE is one of a finite number of predefined types, and
> # the meaning of the arguments following is determined by
> # this type.  (See RADIANCE Reference Manual for details.)
> # The identifier may be used as a modifier later
> # in this file or in files following this one.
> # All values are separated by white space
> # (spaces, tabs, newlines).
> #
>
> # this is the material for my light source:
>
> void light bright
> 0
> 0
> 3  100  100  100
> #  red_emission  green_emission  blue_emission  #
>
> # this is the material for my test ball:
>
> void plastic red_plastic
> 0
> 0
> 5  .7  .05  .05  .05  .05
> #  red  green  blue  specularity  roughness  #
>
> # here is the light source:
>
> bright sphere fixture
> 0
> 0
> 4  2  1  1.5  .125
> #  xcent  ycent  zcent  radius  #
>
> # here is the ball:
> red_plastic sphere ball
> 0
> 0
> 4  .7  1.125  .625  .125
>
>
> random.h:
>
> /* RCSid $Id: random.h,v 2.9 2003/02/25 02:47:21 greg Exp $ */
> /*
>  *  random.h - header file for random(3) and urand() function.
>  */
>
> #include "copyright.h"
>
> #define frandom() random()
>
> #define urand(i) frandom()
>
> extern unsigned short	*urperm;
>
> -- 
>
> Dr. Colin Bannister	
> Information Services		Tel:  0115 9513326
> Cripps Computing Centre		
> The University of Nottingham	Fax: 	0115 9513358
> Nottingham  NG7 2RD
> www:             http://www.nottingham.ac.uk/~cczcb/	
> email:		 Colin.Bannister@nottingham.ac.uk


From radiance-dev@radiance-online.org  Wed Jul  2 17:28:27 2003
From: radiance-dev@radiance-online.org (Greg Ward)
Date: Wed, 2 Jul 2003 09:28:27 -0700
Subject: [Radiance-dev] CVS access
In-Reply-To: <7971.22490-21888-967385653-1057161235@seznam.cz>
Message-ID: <35A3BE64-ACAA-11D7-A2F8-00306540F848@lmi.net>

Hi Ondrej,

Chas is right -- I am going to politely decline your offer.  Actually, 
I was about to be rude, because I'm in a pissy mood this morning....

I have not seen much benefit to the autoconf approach, as it tends to 
make a mess of the code with a lot of HAS_THIS and HAS_THAT kinds of 
macros.  I'm suspicious that Georg Mischler is trying to push the code 
in this direction already, and this is a very dangerous direction to 
head.  The whole reason the code is as solid as it is and has lasted as 
long as it has is because I've tread a very careful path along what I 
perceive as the "lowest common denominator" of all operating systems, 
thus avoiding most system-specific features.  As things change, and 
they always change, I prefer to readjust the code to use common 
features rather than splitting with #ifdef's along different paths 
simultaneously, the approach that autoconf favors.  The result of that 
path is sloppy, unreadable, and unreliable code.  I won't be convinced 
otherwise, so you may as well not try.

As for the faulty CHECK() macro, this was fixed shortly after the 3.5 
release, and you'd do well to download the latest experimental 
bug-fixed version following the "download Radiance" link on 
<www.radiance-online.org>.  If you still find problems, please forward 
them to the radiance-dev list or to me directly and we'll take care of 
it.  Currently only three individuals have CVS access, Peter A-B, 
Georg, and myself, and we're going to keep it that way for a while.

But thanks for your offer.  Who knows, I may get outvoted and we'll 
take you up on it later.

-Greg

> From: Ondøej Jakubèík <ojakubcik@seznam.cz>
> Date: Wed Jul 2, 2003  8:53:55  AM US/Pacific
> To: radiance-dev@radiance-online.org
> Subject: [Radiance-dev] CVS access
> Reply-To: radiance-dev@radiance-online.org
>
> Hello,
> I would like to have access to the repository using CVS.
> I would like to add autoconf/automake support to Radiance and to
> debianize it. I also found an error in CHECK macro (gcc 2.95.4
> was unable to compile sources with it) and corrected it.
>
> Good bye.
> Ondrej Jakubcik
> ojakubcik@seznam.cz



From radiance-dev@radiance-online.org  Wed Jul  2 18:06:36 2003
From: radiance-dev@radiance-online.org (Randolph Fritz)
Date: Wed, 2 Jul 2003 10:06:36 -0700
Subject: [Radiance-dev] CVS access
In-Reply-To: <7971.22490-21888-967385653-1057161235@seznam.cz>
Message-ID: <89BA83E4-ACAF-11D7-B53F-0030658EA95E@panix.com>

On Wednesday, July 2, 2003, at 08:53  AM, Ondøej Jakubèík wrote:

> I would like to have access to the repository using CVS.
> I would like to add autoconf/automake support to Radiance and to
> debianize it. I also found an error in CHECK macro (gcc 2.95.4
> was unable to compile sources with it) and corrected it.

Please post the correction to the CHECK macro.

I'd love to see debian support, and improvements in the build 
scripting, but we dislike automake/autoconf for reasons of quality 
assurance and complexity--conditional compilation is a big testing 
problem.

Randolph

"Everyone knows that debugging is twice as hard as writing a program in 
the first place. So if you are as clever as you can be when you write 
it, how will you ever debug it?--B. Kernighan"



From radiance-dev@radiance-online.org  Thu Jul  3 09:21:46 2003
From: radiance-dev@radiance-online.org (radiance-dev@radiance-online.org)
Date: Thu,  3 Jul 2003 10:21:46 +0200
Subject: [Radiance-dev] CVS access
In-Reply-To: <7971.22490-21888-967385653-1057161235@seznam.cz>
References: <7971.22490-21888-967385653-1057161235@seznam.cz>
Message-ID: <1057220506.3f03e79ac34a3@www.dream.unipa.it>

Ondøej Jakubèík <ojakubcik@seznam.cz> wrote:

> I would like to add autoconf/automake support to Radiance and to
> debianize it. I also found an error in CHECK macro (gcc 2.95.4
> was unable to compile sources with it) and corrected it.

Check out the following url:

http://www.dream.unipa.it/dream/pub/dot/anselmo/radiance/packages/

You will find some experimental debian packages (if you're interested
into the source packages, just let me know).

'bye.

--
Francesco Anselmo
anselmo@dream.unipa.it

-------------------------------------------------
This mail sent through IMP: http://horde.org/imp/

From radiance-dev@radiance-online.org  Thu Jul  3 15:11:07 2003
From: radiance-dev@radiance-online.org (Carsten Bauer)
Date: Thu, 3 Jul 2003 14:11:07 +0000
Subject: [Radiance-dev] CVS access
In-Reply-To: <35A3BE64-ACAA-11D7-A2F8-00306540F848@lmi.net>
References: <35A3BE64-ACAA-11D7-A2F8-00306540F848@lmi.net>
Message-ID: <200307031410.40735.cbauer-@t-online.de>

On Wednesday 02 July 2003 16:28, Greg Ward wrote:

> But thanks for your offer.  Who knows, I may get outvoted and we'll

My two cent comment on this... .
In this case Greg has my vote, shure, and he doesn't even need to move to 
Florida to count it :-). While installing some stuff for recording and 
sound-processing I recently came in contact with the autoconf madness, I 
peeped shortly into the scripts, it's absolutely weird. BTW, the whole 
autoconf configure wawa was bigger than the actual code of the sound program 
itself ...   

PS: (Ondrej,please, please don't feel offended :-) ...)

-Carsten


From radiance-dev@radiance-online.org  Wed Jul 16 21:49:05 2003
From: radiance-dev@radiance-online.org (Chris Jessee)
Date: Wed, 16 Jul 2003 16:49:05 -0400
Subject: [Radiance-dev] OSX install issues
Message-ID: <F0458D21-B7CE-11D7-AD5A-000A95902986@virginia.edu>

Hi,

I had the following experience installing Radiance on OSX (10.2.6) and 
thought I would post it here in hopes of helping others and perhaps 
finding a better way of getting it installed.
The machine: dual 1.4 ghz G4, 1.5 Gb ram, 2-180 Gb drives.
Software: Apple Developer Tools and  x11r6.

Initially I downloaded "radiance-rad3R5.tgz"  and "rad3R5supp.tar.gz" 
from http://www.radiance-online.org/.

After unpacking the files I ran the install command (./makeall install) 
and got the following error after the first few prompts:

Where do you want the library files [/usr/local/lib/ray]?
ls: lib: No such file or directory
d1: Subscript out of range.

The directory exists and not really understanding the nuances of the 
install script I then downloaded  "rad3R5.tar.gz" and  
"radbin_osx.tar.gz" from http://radsite.lbl.gov/radiance/HOME.html. I 
copied the radbin_osx directory to /usr/local/. Changed my .tcshrc to 
include the following paths, the last one pointing to my current 
radiance project.

setenv PATH /usr/local/radbin_osx:$PATH
setenv RAYPATH /usr/local/lib/ray:$PATH
setenv PATH /Users/username/Documents/Projects/CP_test:$PATH

I then moved the ray/lib to /usr/local/lib/ray per a note I found in 
the email archive. This doesn't work but I'll come back to that. The 
same email from the archive also noted to copy all the .cal files from 
the ray/source directory using this command:

cp -p src/*.cal /usr/local/lib/ray

This didn't work, reporting "no match found" so I went through the each 
of the sub-directories of ray/src and used this command to get them to 
their proper home:

mv *.cal /usr/local/lib/ray

On first test picture.cal wasn't found so I downloaded 
"rad3R5supp.tar.gz" from
http://www.radiance-online.org/ unpacked it and moved the contents of 
its ray/lib to /usr/local/lib/ray. Somehow picture.cal wasn't being 
seen in /usr/local/lib/ray/lib/ after the initial copy.

Now radiance works!

Ultimately I hope some knowledgeable person updates the install script 
to make it functional but in the interim perhaps these crude 
workarounds will help.

some of the renders
http://jefferson.village.virginia.edu/london/model/gallery1/index.html

Take care,

Chris Jessee
jessee@virginia.edu


From radiance-dev@radiance-online.org  Thu Jul 17 08:17:59 2003
From: radiance-dev@radiance-online.org (Peter Apian-Bennewitz)
Date: Thu, 17 Jul 2003 09:17:59 +0200
Subject: [Radiance-dev] OSX install issues
In-Reply-To: <F0458D21-B7CE-11D7-AD5A-000A95902986@virginia.edu>
References: <F0458D21-B7CE-11D7-AD5A-000A95902986@virginia.edu>
Message-ID: <3F164DA7.6000206@pab-opto.de>

Chris Jessee wrote:

> ....
>
> Initially I downloaded "radiance-rad3R5.tgz"  and "rad3R5supp.tar.gz" 
> from http://www.radiance-online.org/. 

Many thanks for your detailed report. Although I'm not sure wether this 
fixes your problem, it is better to download  /radiance-HEAD.tgz/  
instead of  /radiance-rad3R5.tgz/ - quite a few bug fixes with a very 
minor chance for troublesome changes.  Labeling it "current 
experimental/bug-fixed version" may not sound attractive enough,- sorry 
for that.
For those with limited bandwidth to the Internet, there's also a 
cumulative patch available on radiance-online which contains the 
differences between all files in rad3R5 and HEAD.
Btw: It's called HEAD because the software revision control system (CVS) 
labels the most recent versions with a tag 'HEAD' . The HEAD files are 
generated nightly and since Greg and Schorsch are  actively fixing and 
extending the source, it makes HEAD a good choice.

While we're at it and because someone asked for CVS access lately:  
Realtime read access to the CVS system and the history of changes and 
log messages for each file is offered by a web interface at  
http://www.radiance-online.org/cgi-bin/viewcvs.cgi/ray/src/ .

-Peter

-- 
 pab-opto, Freiburg, Germany, www.pab-opto.de



From radiance-dev@radiance-online.org  Thu Jul 17 11:57:04 2003
From: radiance-dev@radiance-online.org (Chris Jessee)
Date: Thu, 17 Jul 2003 06:57:04 -0400
Subject: [Radiance-dev] OSX install issues
In-Reply-To: <3F164DA7.6000206@pab-opto.de>
Message-ID: <66C60758-B845-11D7-8F30-00039386208A@virginia.edu>

Thank you for the quick reply. I had previously tried the 
radiance-HEAD.tgz with the same resulting error. I believe the problem 
lies in the makeall script, something incorrect with a path designation 
or a loop that is incorrect. If someone will attempt to correct the 
installer I would be happy to test it and report the results. There are 
several people here who want to run Radiance on OSX and a working 
installer would really help. Have you considered putting Radiance in 
the Fink Project? (http://fink.sourceforge.net/) They have a great 
installer integrated with CVS making for easy installs and updates.

Thank you,

Chris Jessee
jessee@virginia.edu


On Thursday, July 17, 2003, at 03:17 AM, Peter Apian-Bennewitz wrote:

> Chris Jessee wrote:
>
>> ....
>>
>> Initially I downloaded "radiance-rad3R5.tgz"  and "rad3R5supp.tar.gz" 
>> from http://www.radiance-online.org/.
>
> Many thanks for your detailed report. Although I'm not sure wether 
> this fixes your problem, it is better to download  /radiance-HEAD.tgz/ 
>  instead of  /radiance-rad3R5.tgz/ - quite a few bug fixes with a very 
> minor chance for troublesome changes.  Labeling it "current 
> experimental/bug-fixed version" may not sound attractive enough,- 
> sorry for that.
> For those with limited bandwidth to the Internet, there's also a 
> cumulative patch available on radiance-online which contains the 
> differences between all files in rad3R5 and HEAD.
> Btw: It's called HEAD because the software revision control system 
> (CVS) labels the most recent versions with a tag 'HEAD' . The HEAD 
> files are generated nightly and since Greg and Schorsch are  actively 
> fixing and extending the source, it makes HEAD a good choice.
>
> While we're at it and because someone asked for CVS access lately:  
> Realtime read access to the CVS system and the history of changes and 
> log messages for each file is offered by a web interface at  
> http://www.radiance-online.org/cgi-bin/viewcvs.cgi/ray/src/ .
>
> -Peter
>
> -- 
> pab-opto, Freiburg, Germany, www.pab-opto.de
>
>
> _______________________________________________
> Radiance-dev mailing list
> Radiance-dev@radiance-online.org
> http://www.radiance-online.org/mailman/listinfo/radiance-dev


From radiance-dev@radiance-online.org  Thu Jul 17 16:22:57 2003
From: radiance-dev@radiance-online.org (Greg Ward)
Date: Thu, 17 Jul 2003 08:22:57 -0700
Subject: [Radiance-dev] Re: OSX install issues
In-Reply-To: <F0458D21-B7CE-11D7-AD5A-000A95902986@virginia.edu>
Message-ID: <8BABAC16-B86A-11D7-8ED7-00306540F848@lmi.net>

Hi Chris,

I'm sorry you're having troubles with makeall on OS X, especially using 
my exact machine and configuration!  I'm really puzzled in fact how 
you're getting this error.  I looked at the makeall and installib 
scripts, and I think they're OK, it's just the download part that's 
screwing up.

> From: Chris Jessee <cj8n@virginia.edu>
> Date: Wed Jul 16, 2003  1:49:05  PM US/Pacific
>
> Hi,
>
> I had the following experience installing Radiance on OSX (10.2.6) and 
> thought I would post it here in hopes of helping others and perhaps 
> finding a better way of getting it installed.
> The machine: dual 1.4 ghz G4, 1.5 Gb ram, 2-180 Gb drives.
> Software: Apple Developer Tools and  x11r6.
>
> Initially I downloaded "radiance-rad3R5.tgz"  and "rad3R5supp.tar.gz" 
> from http://www.radiance-online.org/.
>
> After unpacking the files I ran the install command (./makeall 
> install) and got the following error after the first few prompts:
>
> Where do you want the library files [/usr/local/lib/ray]?
> ls: lib: No such file or directory
> d1: Subscript out of range.

The problem is not with the installer, it's with the download 
procedure.  If you download in your browser, it automatically calls 
StuffIt Expander, which creates TWO ray directories, one for the source 
and the other for the auxiliary files.  The first download gets named 
ray, and the second directory gets named ray.1.  In fact, the two 
distributions are meant to be merged, which is what would happen 
normally if you called tar xzf on the distributions from the same 
directory.  As a result, your lib directory doesn't end up where it's 
supposed to be on the same level as installib.

I don't have a fix for this, other than to instruct users of Mac OS X 
to install the distributions manually using tar instead of StuffIt 
Expander.

> The directory exists and not really understanding the nuances of the 
> install script I then downloaded  "rad3R5.tar.gz" and  
> "radbin_osx.tar.gz" from http://radsite.lbl.gov/radiance/HOME.html. I 
> copied the radbin_osx directory to /usr/local/. Changed my .tcshrc to 
> include the following paths, the last one pointing to my current 
> radiance project.
>
> setenv PATH /usr/local/radbin_osx:$PATH
> setenv RAYPATH /usr/local/lib/ray:$PATH

PATH shouldn't be part of this variable setting, unless you really want 
to search all your executable directories for Radiance auxiliary files.

> setenv PATH /Users/username/Documents/Projects/CP_test:$PATH

I won't even ask what this is about, but it doesn't sound like 
something to recommend to others.

> I then moved the ray/lib to /usr/local/lib/ray per a note I found in 
> the email archive. This doesn't work but I'll come back to that. The 
> same email from the archive also noted to copy all the .cal files from 
> the ray/source directory using this command:
>
> cp -p src/*.cal /usr/local/lib/ray
>
> This didn't work, reporting "no match found" so I went through the 
> each of the sub-directories of ray/src and used this command to get 
> them to their proper home:
>
> mv *.cal /usr/local/lib/ray
>
> On first test picture.cal wasn't found so I downloaded 
> "rad3R5supp.tar.gz" from
> http://www.radiance-online.org/ unpacked it and moved the contents of 
> its ray/lib to /usr/local/lib/ray. Somehow picture.cal wasn't being 
> seen in /usr/local/lib/ray/lib/ after the initial copy.

Again, it may be because you weren't actually copying from the correct 
distribution download.  Maybe you forgot to remove ray and ray.1 before 
downloading from radsite, so you got a ray.2 directory as well.

> Now radiance works!
>
> Ultimately I hope some knowledgeable person updates the install script 
> to make it functional but in the interim perhaps these crude 
> workarounds will help.
>
> some of the renders
> http://jefferson.village.virginia.edu/london/model/gallery1/index.html

These are very cool -- how did you build your model?

More notes from your second e-mail...

> From: Chris Jessee <cj8n@virginia.edu>
> Date: Thu Jul 17, 2003  3:57:04  AM US/Pacific
>
> Thank you for the quick reply. I had previously tried the 
> radiance-HEAD.tgz with the same resulting error. I believe the problem 
> lies in the makeall script, something incorrect with a path 
> designation or a loop that is incorrect. If someone will attempt to 
> correct the installer I would be happy to test it and report the 
> results. There are several people here who want to run Radiance on OSX 
> and a working installer would really help. Have you considered putting 
> Radiance in the Fink Project? (http://fink.sourceforge.net/) They have 
> a great installer integrated with CVS making for easy installs and 
> updates.

Fink is nice in that it has the downloads all done for you 
automagically via wget commands or something like it.  However, I 
wasted an entire day, perhaps two, trying to get Fink to install an X11 
server on my Mac, with no luck.  It went through the most tedious, 
extensive install and compile procedure imaginable, and I never did 
figure out what it was doing or why it didn't work.  What I ended up 
with was hundreds of megabytes of mystery programs, with no clue where 
to start or what it was all about.  I guess it gave me a taste for what 
a lot of novice Radiance users go through...  In the end, I ended up 
keeping the distribution around for a while, thinking I'd look into it, 
but I never did.  It's gone, and I haven't missed it.

-Greg


From radiance-dev@radiance-online.org  Thu Jul 17 16:57:32 2003
From: radiance-dev@radiance-online.org (Rob Guglielmetti)
Date: Thu, 17 Jul 2003 11:57:32 -0400
Subject: [Radiance-dev] Re: OSX install issues
In-Reply-To: <8BABAC16-B86A-11D7-8ED7-00306540F848@lmi.net>
References: <8BABAC16-B86A-11D7-8ED7-00306540F848@lmi.net>
Message-ID: <3F16C76C.5000909@rumblestrip.org>

Greg Ward wrote:

> Hi Chris,
> 
> I'm sorry you're having troubles with makeall on OS X, especially using 
> my exact machine and configuration!  I'm really puzzled in fact how 
> you're getting this error.  I looked at the makeall and installib 
> scripts, and I think they're OK, it's just the download part that's 
> screwing up.

Thanks for sorting that out, Greg.  I was baffled by Chris' error, and 
rad3R5 installed just fine on my OSX machine.  I *am* still unable to 
compile 3.5 on my RHL8 box, but alas, no time to investigate.

>> some of the renders
>> http://jefferson.village.virginia.edu/london/model/gallery1/index.html 
> 
> These are very cool -- how did you build your model?

Yes, please, Chris.  Details!  How'd ya build it?  How many ambient 
bounces?  Render times?  They are really very nice.  Are you excluding 
heavily?  The render with the sky full of cumulus clouds, was that a 
Photoshop trick, or did you use colorpict?  They look great.  Are you 
extracting quantitative data from these renderings as well?

> Fink is nice in that it has the downloads all done for you automagically 
> via wget commands or something like it.  However, I wasted an entire 
> day, perhaps two, trying to get Fink to install an X11 server on my Mac, 
> with no luck.  It went through the most tedious, extensive install and 
> compile procedure imaginable, and I never did figure out what it was 
> doing or why it didn't work.  What I ended up with was hundreds of 
> megabytes of mystery programs, with no clue where to start or what it 
> was all about.  I guess it gave me a taste for what a lot of novice 
> Radiance users go through...  

Haha, I'd have paid admission for a ringside seat to watch YOU get 
baffled by a machine, Greg.  A taste, perhaps, yes.  Of course, I'm the 
guy who typed 
/usr/rpg/stuff/nested/deep/down/in/the/tree/downloads/radiance/current/makeall 
install, the first few times I attempted installing Radiance.  Learning 
about the magical dot was a watershed moment!  Sigh.  It's an uphill 
battle learning Radiance, and if you have to learn UNIX at the same 
time, it's pretty daunting.  Too bad Fink is funky.  "Automatic" 
installers can help newbies a great deal.  But there is a pretty wide 
array of binaries available for Radiance, so I guess it's really not 
that big a deal.

----

      Rob Guglielmetti

e. rpg@rumblestrip.org
w. www.rumblestrip.org


From radiance-dev@radiance-online.org  Thu Jul 17 18:46:35 2003
From: radiance-dev@radiance-online.org (Randolph Fritz)
Date: Thu, 17 Jul 2003 10:46:35 -0700
Subject: [Radiance-dev] OSX install issues
In-Reply-To: <F0458D21-B7CE-11D7-AD5A-000A95902986@virginia.edu>
References: <F0458D21-B7CE-11D7-AD5A-000A95902986@virginia.edu>
Message-ID: <20030717174635.GA4107@panix.com>

On Wed, Jul 16, 2003 at 04:49:05PM -0400, Chris Jessee wrote:
> 
> Where do you want the library files [/usr/local/lib/ray]?
> ls: lib: No such file or directory
> d1: Subscript out of range.
> 

I've seen this--I forget the ins & outs of the problem, but it's
something I've looked at.  Next week, when I have time.

Randolph

From radiance-dev@radiance-online.org  Thu Jul 17 22:01:29 2003
From: radiance-dev@radiance-online.org (Chris Jessee)
Date: Thu, 17 Jul 2003 17:01:29 -0400
Subject: [Radiance-dev] OSX install issues
In-Reply-To: <20030717174635.GA4107@panix.com>
Message-ID: <D613ACC4-B899-11D7-85AC-000A95902986@virginia.edu>

Hello all,

Thank you all for the tips and suggestions regarding OSX install  
issues. Its good to know others have had success on a similar system,  
I'll try a clean install on another machine using tar rather than  
stuffit to unpack files and take greater care in setting up my path  
statements. Admittedly my limited knowledge of unix may be the real  
problem.

On a previous attempt at using FINK I also encountered serious problems  
requiring a complete reinstall of the system. Thank goodness for CCC  
(http://www.bombich.com/software/ccc.html) The latest version of Fink  
combined with FINK commander (http://finkcommander.sourceforge.net/)  
actually works and avoids the pile of unneeded apps. Although on my  
next install of Radiance I'll skip any prior install of FINK to  
eliminate it as possible problem source.

More information about the Crystal Palace model is available here.
http://jefferson.village.virginia.edu/london/model/

In broad strokes, Will Rourk (will@virginia.edu)and I built the model  
in FormZ and used objtorad to move it to Radiance. Will also built a  
nice VRML version using Cosmo. I setup a master .rif file and materials  
file and ran the initial tests. Some of these were rendered at SDSC on  
Big machines. Ying Yao (yy8b@virginia.edu) is currently attempting to  
render the entire model in Radiance. She has only been able to render  
about 1/3 of the model at a time due to the large amount of geometry.  
Our aging Sun server doesn't seem to be up to the task. Here are a few  
notes from Ying's rendering efforts:

To generate an octree file for one section (Center or East or West) of
the Crystal Palace, usually takes about 5 hours or so.
After the octree is generated, to render the image with medium quality,
it takes about 5 hours to render the first 360x360 image.
With the previous ambient file ready for 360x360 image, it takes  
additional
4 to 8 hours to render 2880x2880 image, which depends on how much  
geometry
overlap between the two images.

High quality images take a little longer:

to render 360*360 image, takes 3.5 day;
to render 2880*2880 image with the ambient file from 360*360 image,  
takes 1.6 days;
to render 2880*2880 image without any ambient file, it takes 5.5 days.

We get the following error when attempting to render all three sections  
of the building at once.

oconv: system - out of octree space
rad: error generating octree

Any suggestions on this front would be most welcome.

The image with the clouds is a composite done in Photoshop. The clouds  
were generated in Alias Power Animator, several years ago.
(http://jefferson.village.virginia.edu/london/model/gallery1/source/ 
image18.html)
The horizon line is kind of screwy, guess I should fix that. I have a  
number of those old sky images. If anyone wants to use them just drop  
me a note.

Take care,

Chris Jessee
jessee@virginia.edu


From radiance-dev@radiance-online.org  Fri Jul 18 15:46:09 2003
From: radiance-dev@radiance-online.org (Chris Jessee)
Date: Fri, 18 Jul 2003 10:46:09 -0400
Subject: [Radiance-dev] OSX installs, more attempts
Message-ID: <9201896B-B92E-11D7-A64D-000A95902986@virginia.edu>

On my first attempt compiling Radiance on OSX I received the following 
error.

Where do you want the library files [/usr/local/lib/ray]?
ls: lib: No such file or directory
d1: Subscript out of range.

Based on suggestions from list subscribers I attempted installs on 2 
other OSX machines. Both failed with similar errors. See this link for 
full text of install, with errors:
http://jefferson.village.virginia.edu/~cj8n/radiance/cubeinstall.txt


The first machine: imac G4 800 mghz, 512 mb ram, 60Gb drive, OSX 10.2.6
The second machine mac Cube, G4 500mghz, 512 mb ram, 30Gb drive, OSX 
10.2.6

The basic install sequence:
FINK not installed.
Installed developer tools from Apple.
Ran software update (nothing updated).
Installed x11 from Apple.
Downloaded radiance-HEAD.tgz  and rad3R5supp.tar.gz.
In terminal (tcsh)
cd Desktop
tar xzf  radiance-HEAD.tgz
tar xzf  rad3R5supp.tar.gz
both files unpacked into a single ray directory
cd ray
su
./makeall install

What is your preferred editor [vi]?  enter (really its BBedit)
Where do you want the executables [/usr/local/bin]? enter
Please select your system type from the following list:

         1)      Sun Solaris
         2)      HP workstation
         3)      Silicon Graphics
         4)      AIX (RS/6000)
         5)      BSDI BSD/386
         6)      Linux
         7)      MacOS X
         8)      FreeBSD
         9)      Other

Choice? 7 enter

Where do you want the library files [/usr/local/lib/ray]? enter
(directory not found but I opened a second shell and created it)
Install library files now [n]? enter
Current rmake command is:
#!/bin/sh
exec make "SPECIAL=ogl" \
         "OPT=-O2 -DSPEED=200" \
         "MACH=-DBSD -DNOSTEREO -Dfreebsd -I/usr/X11R6/include 
-L/usr/X11R6/lib" \
         ARCH=PowerPC "COMPAT=bmalloc.o" \
         INSTDIR=/usr/local/bin \
         LIBDIR=/usr/local/lib/ray \
         CC=cc CONFIGURE_ARCH=powerpc "$@" -f Rmakefile
Do you want to change it? n

the shell spews text for several minutes, and I'm seeing lots of error 
messages

make: Target `install' not remade because of errors.
/Users/myusrname/Desktop/ray/src
There were some errors.

That's nice.

./makeall clean (this cleans up stuff left by the install?)

cd /usr/local/

rm -r bin
rm -r radbin

hum... doesn't look like FINK was the problem.

See this link for full text of install, with errors:
http://jefferson.village.virginia.edu/~cj8n/radiance/cubeinstall.txt

Take care,

Chris Jessee
jessee@virginia.edu


From radiance-dev@radiance-online.org  Fri Jul 18 16:09:18 2003
From: radiance-dev@radiance-online.org (Jack de Valpine)
Date: Fri, 18 Jul 2003 11:09:18 -0400
Subject: [Radiance-dev] OSX installs, more attempts
References: <9201896B-B92E-11D7-A64D-000A95902986@virginia.edu>
Message-ID: <3F180D9E.1050202@visarc.com>

Hi Chris,

I am not a Mac guy nor do I know that much about OSX other than it is a 
*nix variant/flavor. But one question that occurs to me in looking at 
your install log is what userid are you installing as and does this user 
have permission to create directories in /usr/local/lib and install 
files in /usr/local/bin. Typically root has write permissions for these 
directories not other users. Another thought is to wonder whether the 
correct path information is configured for the userid doing the install, 
for example it looks like some X11 header files are not being found 
correctly. Or is the X11 stuff installed in a non typical location or 
name. I am not sure what shell you are using, but you could try 
'printenv' to see what the shell variables such as PATH are set to. This 
could also be helpful information in diagnosing the problem further.

Best Regards,

-Jack de Valpine

Chris Jessee wrote:

> On my first attempt compiling Radiance on OSX I received the following 
> error.
>
> Where do you want the library files [/usr/local/lib/ray]?
> ls: lib: No such file or directory
> d1: Subscript out of range.
>
> Based on suggestions from list subscribers I attempted installs on 2 
> other OSX machines. Both failed with similar errors. See this link for 
> full text of install, with errors:
> http://jefferson.village.virginia.edu/~cj8n/radiance/cubeinstall.txt
>
>
> The first machine: imac G4 800 mghz, 512 mb ram, 60Gb drive, OSX 10.2.6
> The second machine mac Cube, G4 500mghz, 512 mb ram, 30Gb drive, OSX 
> 10.2.6
>
> The basic install sequence:
> FINK not installed.
> Installed developer tools from Apple.
> Ran software update (nothing updated).
> Installed x11 from Apple.
> Downloaded radiance-HEAD.tgz  and rad3R5supp.tar.gz.
> In terminal (tcsh)
> cd Desktop
> tar xzf  radiance-HEAD.tgz
> tar xzf  rad3R5supp.tar.gz
> both files unpacked into a single ray directory
> cd ray
> su
> ./makeall install
>
> What is your preferred editor [vi]?  enter (really its BBedit)
> Where do you want the executables [/usr/local/bin]? enter
> Please select your system type from the following list:
>
>         1)      Sun Solaris
>         2)      HP workstation
>         3)      Silicon Graphics
>         4)      AIX (RS/6000)
>         5)      BSDI BSD/386
>         6)      Linux
>         7)      MacOS X
>         8)      FreeBSD
>         9)      Other
>
> Choice? 7 enter
>
> Where do you want the library files [/usr/local/lib/ray]? enter
> (directory not found but I opened a second shell and created it)
> Install library files now [n]? enter
> Current rmake command is:
> #!/bin/sh
> exec make "SPECIAL=ogl" \
>         "OPT=-O2 -DSPEED=200" \
>         "MACH=-DBSD -DNOSTEREO -Dfreebsd -I/usr/X11R6/include 
> -L/usr/X11R6/lib" \
>         ARCH=PowerPC "COMPAT=bmalloc.o" \
>         INSTDIR=/usr/local/bin \
>         LIBDIR=/usr/local/lib/ray \
>         CC=cc CONFIGURE_ARCH=powerpc "$@" -f Rmakefile
> Do you want to change it? n
>
> the shell spews text for several minutes, and I'm seeing lots of error 
> messages
>
> make: Target `install' not remade because of errors.
> /Users/myusrname/Desktop/ray/src
> There were some errors.
>
> That's nice.
>
> ./makeall clean (this cleans up stuff left by the install?)
>
> cd /usr/local/
>
> rm -r bin
> rm -r radbin
>
> hum... doesn't look like FINK was the problem.
>
> See this link for full text of install, with errors:
> http://jefferson.village.virginia.edu/~cj8n/radiance/cubeinstall.txt
>
> Take care,
>
> Chris Jessee
> jessee@virginia.edu
>
> _______________________________________________
> Radiance-dev mailing list
> Radiance-dev@radiance-online.org
> http://www.radiance-online.org/mailman/listinfo/radiance-dev
>
>


From radiance-dev@radiance-online.org  Fri Jul 18 16:27:17 2003
From: radiance-dev@radiance-online.org (Rob Guglielmetti)
Date: Fri, 18 Jul 2003 11:27:17 -0400
Subject: [Radiance-dev] OSX installs, more attempts
In-Reply-To: <9201896B-B92E-11D7-A64D-000A95902986@virginia.edu>
References: <9201896B-B92E-11D7-A64D-000A95902986@virginia.edu>
Message-ID: <3F1811D5.1090206@rumblestrip.org>

Chris Jessee wrote:


> make: Target `install' not remade because of errors.
> /Users/myusrname/Desktop/ray/src
> There were some errors.
> 
> That's nice.

Do you have permissions?  Try sudo makeall install, and when asked feed 
it the administrative password.

----

      Rob Guglielmetti

e. rpg@rumblestrip.org
w. www.rumblestrip.org


From radiance-dev@radiance-online.org  Fri Jul 18 22:17:28 2003
From: radiance-dev@radiance-online.org (Chris Jessee)
Date: Fri, 18 Jul 2003 17:17:28 -0400
Subject: [Radiance-dev] OSX installs, more attempts
In-Reply-To: <3F180D9E.1050202@visarc.com>
Message-ID: <3C5DFC0A-B965-11D7-8E9E-000A95902986@virginia.edu>

It turns out that I needed to install the following additional x11 
package from Apple: X11SDKForMacOSX.pkg

Once installed radiance-HEAD.tgz installs without a problem.

Thanks to everyone for their helpful tips and suggestions.

Take care,

Chris Jessee
jessee@virginia.edu


On Friday, July 18, 2003, at 11:09  AM, Jack de Valpine wrote:

> Hi Chris,
>
> I am not a Mac guy nor do I know that much about OSX other than it is 
> a *nix variant/flavor. But one question that occurs to me in looking 
> at your install log is what userid are you installing as and does this 
> user have permission to create directories in /usr/local/lib and 
> install files in /usr/local/bin. Typically root has write permissions 
> for these directories not other users. Another thought is to wonder 
> whether the correct path information is configured for the userid 
> doing the install, for example it looks like some X11 header files are 
> not being found correctly. Or is the X11 stuff installed in a non 
> typical location or name. I am not sure what shell you are using, but 
> you could try 'printenv' to see what the shell variables such as PATH 
> are set to. This could also be helpful information in diagnosing the 
> problem further.
>
> Best Regards,
>
> -Jack de Valpine
>
> Chris Jessee wrote:
>
>> On my first attempt compiling Radiance on OSX I received the 
>> following error.
>>
>> Where do you want the library files [/usr/local/lib/ray]?
>> ls: lib: No such file or directory
>> d1: Subscript out of range.
>>
>> Based on suggestions from list subscribers I attempted installs on 2 
>> other OSX machines. Both failed with similar errors. See this link 
>> for full text of install, with errors:
>> http://jefferson.village.virginia.edu/~cj8n/radiance/cubeinstall.txt
>>
>>
>> The first machine: imac G4 800 mghz, 512 mb ram, 60Gb drive, OSX 
>> 10.2.6
>> The second machine mac Cube, G4 500mghz, 512 mb ram, 30Gb drive, OSX 
>> 10.2.6
>>
>> The basic install sequence:
>> FINK not installed.
>> Installed developer tools from Apple.
>> Ran software update (nothing updated).
>> Installed x11 from Apple.
>> Downloaded radiance-HEAD.tgz  and rad3R5supp.tar.gz.
>> In terminal (tcsh)
>> cd Desktop
>> tar xzf  radiance-HEAD.tgz
>> tar xzf  rad3R5supp.tar.gz
>> both files unpacked into a single ray directory
>> cd ray
>> su
>> ./makeall install
>>
>> What is your preferred editor [vi]?  enter (really its BBedit)
>> Where do you want the executables [/usr/local/bin]? enter
>> Please select your system type from the following list:
>>
>>         1)      Sun Solaris
>>         2)      HP workstation
>>         3)      Silicon Graphics
>>         4)      AIX (RS/6000)
>>         5)      BSDI BSD/386
>>         6)      Linux
>>         7)      MacOS X
>>         8)      FreeBSD
>>         9)      Other
>>
>> Choice? 7 enter
>>
>> Where do you want the library files [/usr/local/lib/ray]? enter
>> (directory not found but I opened a second shell and created it)
>> Install library files now [n]? enter
>> Current rmake command is:
>> #!/bin/sh
>> exec make "SPECIAL=ogl" \
>>         "OPT=-O2 -DSPEED=200" \
>>         "MACH=-DBSD -DNOSTEREO -Dfreebsd -I/usr/X11R6/include 
>> -L/usr/X11R6/lib" \
>>         ARCH=PowerPC "COMPAT=bmalloc.o" \
>>         INSTDIR=/usr/local/bin \
>>         LIBDIR=/usr/local/lib/ray \
>>         CC=cc CONFIGURE_ARCH=powerpc "$@" -f Rmakefile
>> Do you want to change it? n
>>
>> the shell spews text for several minutes, and I'm seeing lots of 
>> error messages
>>
>> make: Target `install' not remade because of errors.
>> /Users/myusrname/Desktop/ray/src
>> There were some errors.
>>
>> That's nice.
>>
>> ./makeall clean (this cleans up stuff left by the install?)
>>
>> cd /usr/local/
>>
>> rm -r bin
>> rm -r radbin
>>
>> hum... doesn't look like FINK was the problem.
>>
>> See this link for full text of install, with errors:
>> http://jefferson.village.virginia.edu/~cj8n/radiance/cubeinstall.txt
>>
>> Take care,
>>
>> Chris Jessee
>> jessee@virginia.edu
>>
>> _______________________________________________
>> Radiance-dev mailing list
>> Radiance-dev@radiance-online.org
>> http://www.radiance-online.org/mailman/listinfo/radiance-dev
>>
>>
>
> _______________________________________________
> Radiance-dev mailing list
> Radiance-dev@radiance-online.org
> http://www.radiance-online.org/mailman/listinfo/radiance-dev


From radiance-dev@radiance-online.org  Fri Jul 18 22:28:51 2003
From: radiance-dev@radiance-online.org (Greg Ward)
Date: Fri, 18 Jul 2003 14:28:51 -0700
Subject: [Radiance-dev] Re: OSX installs, more attempts
In-Reply-To: <9201896B-B92E-11D7-A64D-000A95902986@virginia.edu>
Message-ID: <D3920D22-B966-11D7-A9C9-000A956D40C8@lmi.net>

Most of your problems stem from the build of the OpenGL utilities in 
src/common failing, which then causes the rest of the build to fail 
because the main library doesn't get installed in src/lib/librt.a.

Apparently, I assumed in makeall that the X11 headers were installed, 
which they are not on the default system.  Even folks who download the 
X11 server from Apple do not get these headers by default I believe, so 
I should not count on their presence in makeall.  Unfortunately, 
without them you end up with a very hobbled version of Radiance, so 
there's no really good solution other than installing from the OS X 
binaries from the website, or preinstalling the X11 headers, which are 
freely downloadable from a number of places.  Including them with 
Radiance would be a breach of good programming practice, however.

-Greg


From radiance-dev@radiance-online.org  Mon Jul 21 22:11:53 2003
From: radiance-dev@radiance-online.org (Randolph Fritz)
Date: Mon, 21 Jul 2003 14:11:53 -0700
Subject: [Radiance-dev] Opening the question: Radiance test suite
Message-ID: <F3EF7B08-BBBF-11D7-AD89-0030658EA95E@panix.com>

As the development of Radiance continues, and we contemplate major 
changes in the code base, as well as cross-platform operation, it seems 
more and more necessary to have a test suite, so that, at least, 
obvious problems are caught before release.

In broad outline, it seems to me that unit tests--tests of particular 
software modules--and system tests--tests of whole programs, and 
program groups--are needed.  I personally would also choose to do 
usability testing for user interface development, as well.

Some of these can be completely automated, but it is going to be very 
hard to automate those tests that involve user interaction; a scripted 
test will often not provide the behavioral variability of a human 
operator.

Going by source directory, Radiance can be broadly broken down like 
this:

-------------------------------------------
Dir.		Component
-------------------------------------------
cal     	Function definition language
common	Common library routines
cv      	Special-purpose object generators--ies2rad, for instance
gen     	Modelling language tools: gen*
hd		The holodeck
meta 	Plotting language and tools
ot      	Octree generation and manipulation tools
px      	Conversion, post-processing, and viewing tools
rt      	Rendering core--rview and rpict.
util    	Rendering scripting utilities

I've been using the cabin scene in the objects directory as rough 
system tests for some of the scripting utilities, the rendering core, 
and the holodeck.  Running it, I am assured that, at least, I have not 
introduced any outright crashes in my work on the Radiance core, but it 
really is not enough.  I think a test scene that contains all possible 
object types is called for, as well as tests for individual objects.  
But there's a lot more to do--probably test plans and designs for test 
utilities are needed for each component.  Then, of course, tests must 
be written and, finally, they must be run before each major release on 
each supported platform.  There's a lot of grunt work in this, and I 
don't want to do it all--I don't want to spend that much time, and I 
would end up hating Radiance.

Randolph

For some introductory information on testing practices, I refer anyone 
interested to the comp.software.testing FAQ, 
<http://www.faqs.org/faqs/software-eng/testing-faq/>.


From radiance-dev@radiance-online.org  Mon Jul 21 22:12:33 2003
From: radiance-dev@radiance-online.org (Randolph Fritz)
Date: Mon, 21 Jul 2003 14:12:33 -0700
Subject: [Radiance-dev] Radiance quality assurance suggestions
Message-ID: <0B7DA3F1-BBC0-11D7-AD89-0030658EA95E@panix.com>

Let me here put in a plea and proposal for two particular coding 
practices that I believe will greatly ease the work of Radiance testing 
and debugging:

1. Use conditional compilation only in isolated source files, and not 
at all in header files.

Why?  The more conditional compilation and platform-dependence there is 
in the code, the more test development and testing is required.  Each 
combination of compilation conditionals creates a different version of 
the program.  If conditional compilation is scattered throughout the 
code, there is a combinatoric explosion of program versions--4 
variables means 16 versions, 5 means 32, and so on.  If we wish to 
claim that we have tested Radiance we must either test for all 
combinations of conditionals, or specify particular conditionals which 
we test.  If conditional compilation is used only in isolated source 
files, those files can be thorougly unit-tested, and we have some 
assurance that the whole of Radiance does not need to be thorougly 
tested for each possible combination of conditionals.

2. Keep most of Radiance to ISO C90.

Why?  The more platform dependencies are spread through the code, the 
more platforms need to be tested.  Moreover, platforms themselves vary 
internally--thus, there are multiple variants of POSIX, BSD Unix, and 
MS-Windows and each is a potential testing problem.  The less 
platform-dependent code, the fewer places for the code to have 
unexpected bugs on different platforms.

Randolph


From radiance-dev@radiance-online.org  Tue Jul 22 09:27:06 2003
From: radiance-dev@radiance-online.org (Peter Apian-Bennewitz)
Date: Tue, 22 Jul 2003 10:27:06 +0200
Subject: [Radiance-dev] Radiance quality assurance suggestions
In-Reply-To: <0B7DA3F1-BBC0-11D7-AD89-0030658EA95E@panix.com>
References: <0B7DA3F1-BBC0-11D7-AD89-0030658EA95E@panix.com>
Message-ID: <3F1CF55A.60703@pab-opto.de>

Randolph Fritz wrote:

> Let me here put in a plea and proposal for two particular coding 
> practices that I believe will greatly ease the work of Radiance 
> testing and debugging:
>
> 1. Use conditional compilation only in isolated source files, and not 
> at all in header files. 

My two-cents thoughts: Not scatterig ifdefs through the code is 
certainly a good thing. IMHO all architecture depending ifdefs may be in 
one file (or files of a library, including header files), effectively 
providing an abstraction layer between different underlaying  
architectures and Radiance. At least that worked on my other projects 
for not time critical calls.

> 2. Keep most of Radiance to ISO C90.
>
> Why?  The more platform dependencies are spread through the code, the 
> more platforms need to be tested.  Moreover, platforms themselves vary 
> internally--thus, there are multiple variants of POSIX, BSD Unix, and 
> MS-Windows and each is a potential testing problem.  The less 
> platform-dependent code, the fewer places for the code to have 
> unexpected bugs on different platforms. 

I haven't felt many differences between UNIXes lately. And Radiance is 
not close to the system for a very great part of the code.

An automated test suite is certainly brilliant to have. Something like 
'makeall test'.  Running rtrace,rpict (rview in an automated, finite 
rendering time, screen-dump mode ?) and rholo in a fixed scene and 
comparing results with stored references is worth setting up.

-Peter

-- 
 pab-opto, Freiburg, Germany, www.pab-opto.de



From radiance-dev@radiance-online.org  Wed Jul 23 21:04:45 2003
From: radiance-dev@radiance-online.org (Randolph Fritz)
Date: Wed, 23 Jul 2003 13:04:45 -0700
Subject: [Radiance-dev] Install script problem "d1: Subscript out of range. "
Message-ID: <E7A0673E-BD48-11D7-BC6F-0030658EA95E@panix.com>

Problem is, if a file named "lib" doesn't already exist in the 
directory where the library files are to be installed, the csh script 
tries to subscript an empty variable.  The following hack fixes it:

--- installib.old       Fri Feb 28 12:06:51 2003
+++ installib   Wed Jul 23 12:41:21 2003
@@ -23,10 +23,13 @@
                         goto again2
                 endif
         endif
         set d1=(`ls -id lib`)
         set d2=(`ls -id $ldir`)
+       if ($#d1 < 1 ) then
+           set d1 = (-1)
+       endif
         if ($d1[1] != $d2[1]) then
                 echo -n "Install library files now [n]? "
                 if ( "$<" =~ [yY]* ) then
                         echo -n "Copying library files to $ldir... "
                         (cd lib ; tar -cf - *) | (cd $ldir ; tar -xf -)


From radiance-dev@radiance-online.org  Mon Jul 28 06:07:18 2003
From: radiance-dev@radiance-online.org (Randolph Fritz)
Date: Sun, 27 Jul 2003 22:07:18 -0700
Subject: [Radiance-dev] Radiance quality assurance suggestions
In-Reply-To: <3F1CF55A.60703@pab-opto.de>
Message-ID: <5C74E190-C0B9-11D7-B1BC-0030658EA95E@panix.com>

[Sorry this has taken so long to answer]

On Tuesday, July 22, 2003, at 01:27  AM, Peter Apian-Bennewitz wrote:

> Randolph Fritz wrote:
>
>> Let me here put in a plea and proposal for two particular coding 
>> practices that I believe will greatly ease the work of Radiance 
>> testing and debugging:
>>
>> 1. Use conditional compilation only in isolated source files, and not 
>> at all in header files.
>
> My two-cents thoughts: Not scatterig ifdefs through the code is 
> certainly a good thing. IMHO all architecture depending ifdefs may be 
> in one file (or files of a library, including header files), 
> effectively providing an abstraction layer between different 
> underlaying  architectures and Radiance. At least that worked on my 
> other projects for not time critical calls.

I'm glad we mostly agree.  I want to go a bit further, though; the 
problem of testing multiple versions pops up if one has conditional 
compilation in a widely-included header file, so I think it's important 
not to do that.

>
>> 2. Keep most of Radiance to ISO C90.
>>
>> Why?  The more platform dependencies are spread through the code, the 
>> more platforms need to be tested.  Moreover, platforms themselves 
>> vary internally--thus, there are multiple variants of POSIX, BSD 
>> Unix, and MS-Windows and each is a potential testing problem.  The 
>> less platform-dependent code, the fewer places for the code to have 
>> unexpected bugs on different platforms.
>
> I haven't felt many differences between UNIXes lately. And Radiance is 
> not close to the system for a very great part of the code.

There is a surprising amount of system dependency, however.  (Well, it 
surprised me, anyway.)  And there are annoying subtle differences 
between BSD Unix (the Mac OS X base), POSIX, and the various vendor 
Unices.  With the G5 Macs we have a widely-available 64-bit platform.  
The conflicts with MS-Windows are much greater and it would be valuable 
to give some code a native Mac OS X interface, as well.

> An automated test suite is certainly brilliant to have. Something like 
> 'makeall test'.  Running rtrace,rpict (rview in an automated, finite 
> rendering time, screen-dump mode ?) and rholo in a fixed scene and 
> comparing results with stored references is worth setting up.

One question that comes up is the seeding of the random number 
generators in that circumstance.  I think it may be useful to use 
multiple seeds, and have a special-purpose file-comparison utility that 
accepts modest variations.  The holodeck, on the other hand, requires 
interface scripting.

Randolph


From radiance-dev@radiance-online.org  Mon Jul 28 14:18:22 2003
From: radiance-dev@radiance-online.org (Georg Mischler)
Date: Mon, 28 Jul 2003 09:18:22 -0400 (EDT)
Subject: [Radiance-dev] Radiance quality assurance suggestions
In-Reply-To: <5C74E190-C0B9-11D7-B1BC-0030658EA95E@panix.com>
Message-ID: <Pine.BSF.4.44.0307280851170.16960-100000@emancholl.pair.com>

Randolph Fritz wrote:

> PAB wrote:
>> My two-cents thoughts: Not scatterig ifdefs through the code is
>> certainly a good thing. IMHO all architecture depending ifdefs may be
>> in one file (or files of a library, including header files),
>> effectively providing an abstraction layer between different
>> underlaying  architectures and Radiance. At least that worked on my
>> other projects for not time critical calls.
>
> I'm glad we mostly agree.  I want to go a bit further, though; the
> problem of testing multiple versions pops up if one has conditional
> compilation in a widely-included header file, so I think it's important
> not to do that.

There's only a very small number of feature based conditionals
around in Radiance, most prominently the GL stereo/nostereo stuff.
Most of the others distinguish between platforms. Since your
biggest worry with conditionals is about having to test many
seperate versions, that kind of makes those a moot point. We'll
have to run all the tests on all the seperate platforms anyway.


>> I haven't felt many differences between UNIXes lately. And Radiance is
>> not close to the system for a very great part of the code.
>
> There is a surprising amount of system dependency, however. (Well, it
> surprised me, anyway.)  And there are annoying subtle differences
> between BSD Unix (the Mac OS X base), POSIX, and the various vendor
> Unices.

Radiance still carries code (and conditionals) from a time when
the differences between unixes were much bigger than they are
today, and we're continuously reducing that historical ballast.

Peter is right: If we stick with posix, then there's hardly any
noticeable difference between current BSD and other unix systems,
except in rare and pathological cases. In fact, in some cases
it's harder to get the code to work on more than one Windows
version than on all the unix/BSD versions from a dozen different
manufacturers.


> With the G5 Macs we have a widely-available 64-bit platform.

64 bit systems are a can of worms that I'd like to open as late
as possible, after all other aspects of the code base have been
cleaned up. Once that is the case, we'll *first* have to
systematically identify all the parts of the code where the CPU
type actually makes a difference, and think hard about each
individual one.


> The conflicts with MS-Windows are much greater and it would be valuable
> to give some code a native Mac OS X interface, as well.

Let's keep things simple. OS X supports posix and X11, so we
don't need to provide any proprietary interfaces for it.


>> An automated test suite is certainly brilliant to have. Something like
>> 'makeall test'.

How to trigger the tests is a somewhat seperate topic from
creating them first. Anyway, "makeall test" would require to
seperate the building and installing stages in the Rmakefiles.
This is something that I'm missing anyway at the moment, because
it would make testing small changes in a contained environment
much simpler.

Other than Randolph, I don't think this is a difficult change.
"Make build" will have to move all the binaries into a local
ray/bin directory, for "make install" to pick them up there.
There are two possibilities how to organize the library files.
Either we collect them into a local ray/share directory right
away (they're scattered all around the source tree right now),
or "make build" will have to do that as well.

The basis to this should be a new strategy on where Radiance
searches it's binaries and library files. We had a first stab at
this discussion already a few weeks back. I think a reasonable
strategy would go like this:

- For binaries, first look in the directory where the current
  executable was loaded from, then look in the $PATH.
- For library files, first look in ../share/ (again based on
  the location of the current executable), then in
  ../share/radiance-<ver>/, and then on $RAYPATH.

Doing this would simplify both testing within the build tree, and
installation according to LSB standards without the need to set
up any environment variables. Valid installations could then look
like this:

/opt/radiance-3.6/bin/*
/opt/radiance-3.6/share/*.(cal|pic)
/opt/radiance-3.6/man/man.*/*
/opt/radiance-3.6/doc/*.(ps|pdf)

/usr/local/bin/*    # not really recommended, but possible
/usr/local/share/radiance-3.6/*.(cal|pic)
/usr/local/man/man.*/*
/usr/local/doc/*.(ps|pdf)

C:\program files\radiance-3.6\bin\*.exe
C:\program files\radiance-3.6\share\*.(cal|pic)
C:\program files\radiance-3.6\man\man.*\*
C:\program files\radiance-3.6\doc\*.(ps|pdf)

Note that "share" is used for the library files, because those
are platform independent. According to LSB (and other related
standards), "lib" is reserved for platform specific files.
To include parts of the code as (shared) libraries, we can simply
add the respective "lib" directories without any further changes.


-schorsch

-- 
Georg Mischler  --  simulations developer  --  schorsch at schorsch com
+schorsch.com+  --  lighting design tools  --  http://www.schorsch.com/


From radiance-dev@radiance-online.org  Thu Jul 31 08:15:18 2003
From: radiance-dev@radiance-online.org (Randolph Fritz)
Date: Thu, 31 Jul 2003 00:15:18 -0700
Subject: [Radiance-dev] Radiance quality assurance suggestions
In-Reply-To: <Pine.BSF.4.44.0307280851170.16960-100000@emancholl.pair.com>
Message-ID: <BDA29A95-C326-11D7-972A-0030658EA95E@panix.com>

>> With the G5 Macs we have a widely-available 64-bit platform.
>
> 64 bit systems are a can of worms that I'd like to open as late
> as possible, after all other aspects of the code base have been
> cleaned up. Once that is the case, we'll *first* have to
> systematically identify all the parts of the code where the CPU
> type actually makes a difference, and think hard about each
> individual one.

Too late, I think; it was open the minute the G5 shipped.  If we're  
lucky, we won't have someone pop up on this list with "I compiled  
Radiance on my shiny new G5 with -mpowerpc64 and ...".  But likely  
there will be someone out there, even if we don't hear.

> Radiance still carries code (and conditionals) from a time when
> the differences between unixes were much bigger than they are
> today, and we're continuously reducing that historical ballast.

I'm all for that.  But let's not make the next leg of the journey in  
ballast, hunh?  Want to carry pay cargo, I do.

>
>> The conflicts with MS-Windows are much greater and it would be  
>> valuable
>> to give some code a native Mac OS X interface, as well.
>
> Let's keep things simple. OS X supports posix and X11, so we
> don't need to provide any proprietary interfaces for it.

And Cygwin (or Red Hat GNUpro, if that's what it's called now) runs on  
Microsoft Windows, no need to provide any proprietary interfaces for  
that system.

If only!

Apple's comments on this:
> If you want your application to look identical on all platforms then  
> you should make the abstraction layer thin. However, this tends to  
> result in Mac OS X users throwing your application in a dumpster  
> because it doesnt feel like a Mac application. Mac OS X has common  
> GUI style rules that most X11 applications dont follow.

And this also applies to MS-Windows, of course.

By the way, this is from Apple's portability guide, at  
<http://developer.apple.com/documentation/Porting/Conceptual/ 
PortingUnix/portability/chapter_3_section_1.html>.  I recommend that  
document.

> Peter is right: If we stick with posix, then there's hardly any
> noticeable difference between current BSD and other unix systems,
> except in rare and pathological cases. In fact, in some cases
> it's harder to get the code to work on more than one Windows
> version than on all the unix/BSD versions from a dozen different
> manufacturers.

In fact, Mac OS X does not support POSIX (I looked it up two days  
ago--I was hoping it did.)  It *provides* some POSIX system calls and  
programs.  Apple makes no promises to *support* POSIX at all (except  
POSIX threads, go figure).  That means no POSIX certification testing  
and therefore subtle differences that will lead to bugs.

Ironically, Windows POSIX.1 capabilities are certified.  It may be that  
#define'ing "POSIX_SOURCE" to 1 in the compiler will allow the non-X  
portions of Radiance compile without change on Windows.

I see the following likely platforms:

   POSIX (Sun, IBM, DEC Alpha/Compaq), Mac OS X, various Linux, various  
BSD, SGI
   Plan 9 ANSI/POSIX Emulation
   various MS-Windows versions
   Special-purpose servers (a holodeck server is a likely possibility)

Which to test?  Wihtout a user survey, I'd guess the most-used  
platforms will be Mac OS X, Red Hat and SUSE Linux, and Windows NT and  
XP.  SGI, if we can find an SGI system to test on--later SGIs are  
64-bit, btw.  POSIX, you will notice, isn't even the list--one doesn't  
buy Sun and IBM systems for rendering, usually, and the Alpha (another  
64-bit platform) has been let to go obsolete by Intel.  If someone  
steps forward and offers to do another platform, I'd be all for signing  
them up.

> There's only a very small number of feature based conditionals
> around in Radiance, most prominently the GL stereo/nostereo stuff.
> Most of the others distinguish between platforms. Since your
> biggest worry with conditionals is about having to test many
> seperate versions, that kind of makes those a moot point. We'll
> have to run all the tests on all the seperate platforms anyway.

The more of the code is platform-independent, however, the more tests  
will apply across platforms, providing additional testing for free.   
Conversely, the more platform dependence (and any file which includes a  
platform-dependent header is platform dependent) the more possibilities  
for platform-dependent bugs.

I am not too much concerned with Radiance feature variants, as long as  
the number is modest and the conditionals manageable; my concern is  
with the kind of fine-grained platform dependence that the GNU build  
utilities enable.  There are so many variants of such software that  
most of the configurations it is used in are never tested by the  
development team at all--much of the testing work falls on the end  
users or integrators further on in the development process.

> Other than Randolph, I don't think this is a difficult change.
> "Make build" will have to move all the binaries into a local
> ray/bin directory, for "make install" to pick them up there.
> There are two possibilities how to organize the library files.
> Either we collect them into a local ray/share directory right
> away (they're scattered all around the source tree right now),
> or "make build" will have to do that as well.

Mmmm...common practice is to simply build in the source directory, then  
find and move the files for install.  But practice varies.

A much more serious problem to my mind is the problem of conditional  
build--as with the OpenGL support, which I have been wrestling with.   
One of the biggest porting problems I am aware of is the variant  
versions of "make" and associated utilities.  BSD, POSIX, and GNU all  
have very different versions of make (doesn't Windows have one, too?),  
and the only things one can count on--still!--are the features of the  
25-year old Unix v7 make.  Basic make doesn't provide any conditional  
building or automatic dependency tracking at all (find the .h files  
referenced by .c files.)  BSD Unix and, usually, Linux, has "mkdep"  
which can be hacked into providing dependency tracking--it is not part  
of POSIX--but it's pretty much of a kludge.  I have hacked out a GNU  
makefile for the "common" subdirectory, which allows for conditional  
building of the OpenGL component; I can find no way to do it on v7 make  
without changes to the controlling script, and I don't know about BSD  
or POSIX make--GNU make was quite enough trouble for me.

All of which leads me to think we need more work on the controlling  
scripts, a decision to use one make (probably GNU) or an improved build  
tool.  I have a friend who thinks well of SCONS  
<http://www.scons.org/>, but that's a big shift.

> How to trigger the tests is a somewhat seperate topic from
> creating them first. Anyway, "makeall test" would require to
> seperate the building and installing stages in the Rmakefiles.
> This is something that I'm missing anyway at the moment, because
> it would make testing small changes in a contained environment
> much simpler.

Me too.  I'm really not testing adequately, and that worries me  
muchly--field test is *not* the time to find out about all the problems  
I introduce.

> The basis to this should be a new strategy on where Radiance
> searches it's binaries and library files. We had a first stab at
> this discussion already a few weeks back. I think a reasonable
> strategy would go like this:
>
> - For binaries, first look in the directory where the current
>   executable was loaded from, then look in the $PATH.
> - For library files, first look in ../share/ (again based on
>   the location of the current executable), then in
>   ../share/radiance-<ver>/, and then on $RAYPATH.

How does this work on Mac OS X and MS-Windows?

Thanks for the long & thoughtful reply.

Randolph



