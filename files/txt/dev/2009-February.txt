From rfritz at u.washington.edu  Mon Feb  2 15:28:37 2009
From: rfritz at u.washington.edu (R Fritz)
Date: Mon Feb  2 15:28:37 2009
Subject: [Radiance-dev] Radiane MIME types
In-Reply-To: <007554F9-87C1-442A-BBED-D0319347373E@gmail.com>
References: <100441490810251133i276ee9a5ge3d9fe77dd342edd@mail.gmail.com>
	<76ECF890-A5DC-4665-B870-CDF9B7B49241@u.washington.edu>
	<DCF6D806-9EE1-49BC-9805-745C223116AA@gmail.com>
	<3C7AA773-2AA7-4838-A93C-C1754B20BBF3@u.washington.edu>
	<007554F9-87C1-442A-BBED-D0319347373E@gmail.com>
Message-ID: <CE6C2FD8-2FF7-4B1B-8505-E1B095A12547@u.washington.edu>

I just contacted the IANA to request a status update on this.  They're  
apparently swamped with requests, so it's still pending after a  
month.  I hope they're not *too* swamped.

Randolph

On Jan 8, 2009, at 9:52 AM, Gregory J. Ward wrote:

> Well done.   Thanks, Randolph!
>
> -Greg
>
>> From: R Fritz <rfritz@u.washington.edu>
>> Date: January 6, 2009 11:22:09 AM PST
>>
>> Mark Baker on the IETF list thinks we're good to go.  I'm ready to  
>> submit the attached to the IANA on behalf of Greg Ward and "The  
>> Radiance Lighting Simulation Group" (which means us) & will do so  
>> tomorrow.
>>
>> Randolph
>
> _______________________________________________
> Radiance-dev mailing list
> Radiance-dev@radiance-online.org
> http://www.radiance-online.org/mailman/listinfo/radiance-dev


From gregoryjward at gmail.com  Fri Feb  6 08:57:07 2009
From: gregoryjward at gmail.com (Greg Ward)
Date: Fri Feb  6 08:56:58 2009
Subject: [Radiance-dev] Re: [Radiance-general] raypcalls
In-Reply-To: <498C542E.9040102@aisarquitectura.com>
References: <498BE4F6.70600@nus.edu.sg>
	<20090206.13521400.53308121@gyor.oxdrove.co.uk>
	<498C542E.9040102@aisarquitectura.com>
Message-ID: <15580FD2-0A9E-41D7-BFBB-3C326C7460A3@lmi.net>

Hi Ignacio,

This thread probably belongs on the development group, where I'm  
cross-posting.  Please respond from that list.

There is no call to explicitly kill child processes in raypcalls, but  
you could add one.  It would also be possible to modify the ray_pclose 
() call to explicitly kill its children rather than waiting for them  
to return after end-of-input.  We wouldn't be able to report status,  
but it would be unusual (and probably irrelevant) for an error to  
occur during process termination, anyway.

In a command-line program, using Control-C normally kills all  
processes in a group, and so would lead to early termination for  
children without the wait.  In the latest version of rvu, rather than  
killing the child processes when the user begins input, I take their  
input while the children crank away in the background, then process  
the user command after waiting for the remaining rays.  Normally, the  
delay is not noticeable with this approach.

Best,
-Greg

> From: Ignacio Munarriz <info@aisarquitectura.com>
> Date: February 6, 2009 7:15:58 AM PST
>
>
> I am using raypcalls library, and i was wondering if there is any  
> way to stop the calculation without waiting to the rays in the  
> queue to finish and discard (ray_pdone), i mean, there are  
> sometimes that you have high rendering parameters and the first few  
> rays are very slow, so i would like  to "kill"  the processes or  
> something similar ...

From bernd at bzed.de  Sat Feb 21 06:53:16 2009
From: bernd at bzed.de (Bernd Zeimetz)
Date: Sat Feb 21 06:51:19 2009
Subject: [Radiance-dev] Daily CVS Head in git
In-Reply-To: <495AE79C.204@bzed.de>
References: <495AE79C.204@bzed.de>
Message-ID: <49A0155C.3010408@bzed.de>

Hi,

I've changed my git repository layout a bit - if there's anybody pulling from
it, you'll probably have to update your branches:

1. Remove the upstream branch. It was more or less a tagged version of the
upstream-cvs branch, there're better ways to achieve this.

2. Rename the 'upstream-debian' branch to upstream. This just makes life more
easy with git-buildpackage and similar tools, and is less confusing.


Cheers,

Bernd

-- 
 Bernd Zeimetz                           Debian GNU/Linux Developer
 GPG Fingerprint: 06C8 C9A2 EAAD E37E 5B2C BE93 067A AD04 C93B FF79

From rfritz at u.washington.edu  Mon Feb 23 17:29:33 2009
From: rfritz at u.washington.edu (R Fritz)
Date: Mon Feb 23 17:29:30 2009
Subject: [Radiance-dev] Radiance file type registration
Message-ID: <8470C570-3442-4D08-9E23-F0C43152C8C9@u.washington.edu>

Finally got a reply on this.  They think it's pretty good but want  
more on security for the type.  I'm puzzled as to their questions, but  
will endeavor to address them in a further reply.

Randolph


From grobe at gmx.net  Mon Feb 23 17:55:08 2009
From: grobe at gmx.net (Lars O. Grobe)
Date: Mon Feb 23 17:55:13 2009
Subject: [Radiance-dev] Radiance file type registration
In-Reply-To: <8470C570-3442-4D08-9E23-F0C43152C8C9@u.washington.edu>
References: <8470C570-3442-4D08-9E23-F0C43152C8C9@u.washington.edu>
Message-ID: <49A3537C.8050301@gmx.net>

 > Finally got a reply on this.  They think it's pretty good but want 
more on security for the type.

Hi,

did you only submit the hdr or also the scene description types? 
Security-wise, the rad-files have to be treated as scripts, as they 
allow any command to be executed from within (using the !-prefix), so I 
guess this leads to a very different classification then hdr's. Not sure 
what kind of nonsense an attacker could hide inside an octree though (I 
doubt that there are any security checks in Radiance about memory 
protection here?) - but I am just a non-developer on the wrong list, 
without inside-knowledge on the implementation here ;-)

CU Lars.

From rfritz at u.washington.edu  Wed Feb 25 20:34:54 2009
From: rfritz at u.washington.edu (Randolph Fritz)
Date: Wed Feb 25 20:34:40 2009
Subject: [Radiance-dev] Radiance file type registration
In-Reply-To: <49A3537C.8050301@gmx.net>
References: <8470C570-3442-4D08-9E23-F0C43152C8C9@u.washington.edu>
	<49A3537C.8050301@gmx.net>
Message-ID: <49A61BEE.8040609@u.washington.edu>

Just the HDR type. It's simplest, and the type I think it's most 
important to register. The specific section and reply is:

> Security considerations: The Radiance HDR file format does not include
> > executable code or scripts; it is a graphics file with an ASCII
> > header. Compression is used, which could crash an image
> > viewer. There is no way to completely rule out the possibility of
> > malicious content, however HDR viewer applications do not usually
> > run with administrator privileges--they seem poor targets for such
> > attacks.
>   
Response:
> This is all good info but it would also be good to comment on whether
> or not the type in typical use needs integrity or confidentiality protection,
> and if it does how it might be provided (internal to the type or some sort
> of external service).
This is two-thirds of the "CIA triad" of security issues. These are 
usually raised with regard to critical database and control data. I am 
puzzled as to why these are being brought up for an image file format 
and I have written back asking for an example of what is desired.

Randolph

Lars O. Grobe wrote:
> > Finally got a reply on this.  They think it's pretty good but want 
> more on security for the type.
>
> did you only submit the hdr or also the scene description types? 
> Security-wise, the rad-files have to be treated as scripts, as they 
> allow any command to be executed from within (using the !-prefix), so 
> I guess this leads to a very different classification then hdr's. Not 
> sure what kind of nonsense an attacker could hide inside an octree 
> though (I doubt that there are any security checks in Radiance about 
> memory protection here?) - but I am just a non-developer on the wrong 
> list, without inside-knowledge on the implementation here ;-)


From jedev at visarc.com  Thu Feb 26 05:19:31 2009
From: jedev at visarc.com (Jack de Valpine)
Date: Thu Feb 26 05:19:36 2009
Subject: [Radiance-dev] Radiance file type registration
In-Reply-To: <49A61BEE.8040609@u.washington.edu>
References: <8470C570-3442-4D08-9E23-F0C43152C8C9@u.washington.edu>	<49A3537C.8050301@gmx.net>
	<49A61BEE.8040609@u.washington.edu>
Message-ID: <49A696E3.5000809@visarc.com>

Hi Randolph,

Just a thought on this. Would it be worth looking at how this question 
is managed in other image types? That way you can construct an 
appropriate response?

Regards,

-Jack

Randolph Fritz wrote:
> Just the HDR type. It's simplest, and the type I think it's most 
> important to register. The specific section and reply is:
>
>> Security considerations: The Radiance HDR file format does not include
>> > executable code or scripts; it is a graphics file with an ASCII
>> > header. Compression is used, which could crash an image
>> > viewer. There is no way to completely rule out the possibility of
>> > malicious content, however HDR viewer applications do not usually
>> > run with administrator privileges--they seem poor targets for such
>> > attacks.
>>   
> Response:
>> This is all good info but it would also be good to comment on whether
>> or not the type in typical use needs integrity or confidentiality 
>> protection,
>> and if it does how it might be provided (internal to the type or some 
>> sort
>> of external service).
> This is two-thirds of the "CIA triad" of security issues. These are 
> usually raised with regard to critical database and control data. I am 
> puzzled as to why these are being brought up for an image file format 
> and I have written back asking for an example of what is desired.
>
> Randolph
>
> Lars O. Grobe wrote:
>> > Finally got a reply on this.  They think it's pretty good but want 
>> more on security for the type.
>>
>> did you only submit the hdr or also the scene description types? 
>> Security-wise, the rad-files have to be treated as scripts, as they 
>> allow any command to be executed from within (using the !-prefix), so 
>> I guess this leads to a very different classification then hdr's. Not 
>> sure what kind of nonsense an attacker could hide inside an octree 
>> though (I doubt that there are any security checks in Radiance about 
>> memory protection here?) - but I am just a non-developer on the wrong 
>> list, without inside-knowledge on the implementation here ;-)
>
>
> _______________________________________________
> Radiance-dev mailing list
> Radiance-dev@radiance-online.org
> http://www.radiance-online.org/mailman/listinfo/radiance-dev
>

-- 
# Jack de Valpine
# president
#
# visarc incorporated
# http://www.visarc.com
#
# channeling technology for superior design and construction


From rfritz at u.washington.edu  Thu Feb 26 10:24:13 2009
From: rfritz at u.washington.edu (R Fritz)
Date: Thu Feb 26 10:24:12 2009
Subject: [Radiance-dev] Radiance file type registration
In-Reply-To: <49A696E3.5000809@visarc.com>
References: <8470C570-3442-4D08-9E23-F0C43152C8C9@u.washington.edu>	<49A3537C.8050301@gmx.net>
	<49A61BEE.8040609@u.washington.edu> <49A696E3.5000809@visarc.com>
Message-ID: <891659F2-EF2D-473E-BC68-8B02A1473919@u.washington.edu>

I'll probably do that soon.  I've also written back, asking for  
examples.

Randolph

On Feb 26, 2009, at 5:19 AM, Jack de Valpine wrote:

> Hi Randolph,
>
> Just a thought on this. Would it be worth looking at how this  
> question is managed in other image types? That way you can construct  
> an appropriate response?
>
> Regards,
>
> -Jack
>
> Randolph Fritz wrote:
>> Just the HDR type. It's simplest, and the type I think it's most  
>> important to register. The specific section and reply is:
>>
>>> Security considerations: The Radiance HDR file format does not  
>>> include
>>> > executable code or scripts; it is a graphics file with an ASCII
>>> > header. Compression is used, which could crash an image
>>> > viewer. There is no way to completely rule out the possibility of
>>> > malicious content, however HDR viewer applications do not usually
>>> > run with administrator privileges--they seem poor targets for such
>>> > attacks.
>>>
>> Response:
>>> This is all good info but it would also be good to comment on  
>>> whether
>>> or not the type in typical use needs integrity or confidentiality  
>>> protection,
>>> and if it does how it might be provided (internal to the type or  
>>> some sort
>>> of external service).
>> This is two-thirds of the "CIA triad" of security issues. These are  
>> usually raised with regard to critical database and control data. I  
>> am puzzled as to why these are being brought up for an image file  
>> format and I have written back asking for an example of what is  
>> desired.
>>
>> Randolph
>>
>> Lars O. Grobe wrote:
>>> > Finally got a reply on this.  They think it's pretty good but  
>>> want more on security for the type.
>>>
>>> did you only submit the hdr or also the scene description types?  
>>> Security-wise, the rad-files have to be treated as scripts, as  
>>> they allow any command to be executed from within (using the !- 
>>> prefix), so I guess this leads to a very different classification  
>>> then hdr's. Not sure what kind of nonsense an attacker could hide  
>>> inside an octree though (I doubt that there are any security  
>>> checks in Radiance about memory protection here?) - but I am just  
>>> a non-developer on the wrong list, without inside-knowledge on the  
>>> implementation here ;-)
>>
>>
>> _______________________________________________
>> Radiance-dev mailing list
>> Radiance-dev@radiance-online.org
>> http://www.radiance-online.org/mailman/listinfo/radiance-dev
>>
>
> -- 
> # Jack de Valpine
> # president
> #
> # visarc incorporated
> # http://www.visarc.com
> #
> # channeling technology for superior design and construction
>
>
> _______________________________________________
> Radiance-dev mailing list
> Radiance-dev@radiance-online.org
> http://www.radiance-online.org/mailman/listinfo/radiance-dev


