From lars.grobe at nus.edu.sg  Tue Jul 21 20:13:00 2009
From: lars.grobe at nus.edu.sg (Lars O. Grobe)
Date: Tue Jul 21 20:13:06 2009
Subject: [Radiance-dev] hard-coded path in objpict
Message-ID: <4A6683BC.7060409@nus.edu.sg>

Hi,

I think the path objdir=/usr/local/lib/ray/lib is hard-coded in the 
script and not modified by the make scripts, so the tool will not work 
on most systems when radiance is not installed under /usr/local.

Cheers, Lars.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lars_grobe.vcf
Type: text/x-vcard
Size: 299 bytes
Desc: not available
Url : http://radiance-online.org/pipermail/radiance-dev/attachments/20090722/b35d79ab/lars_grobe.vcf
From gregoryjward at gmail.com  Wed Jul 22 10:35:44 2009
From: gregoryjward at gmail.com (Gregory J. Ward)
Date: Wed Jul 22 10:35:50 2009
Subject: [Radiance-dev] hard-coded path in objpict
In-Reply-To: <4A6683BC.7060409@nus.edu.sg>
References: <4A6683BC.7060409@nus.edu.sg>
Message-ID: <4A8BBE45-F910-43E7-A4CF-6BD90103F6D1@gmail.com>

Yes, good point.  This is one of my "forgotten" scripts.  I've  
updated it not to depend on the testroom file.

-Greg

> From: "Lars O. Grobe" <lars.grobe@nus.edu.sg>
> Date: July 21, 2009 8:13:00 PM PDT
>
> Hi,
>
> I think the path objdir=/usr/local/lib/ray/lib is hard-coded in the  
> script and not modified by the make scripts, so the tool will not  
> work on most systems when radiance is not installed under /usr/local.
>
> Cheers, Lars.

From grobe at gmx.net  Sat Jul 25 09:15:45 2009
From: grobe at gmx.net (Lars O. Grobe)
Date: Sat Jul 25 09:15:57 2009
Subject: [Radiance-dev] Re: [Radiance-general] Problems with Ubuntu's
 radiance distribution on amd64 platform
In-Reply-To: <ACF16862-34E0-4AFF-A330-AF72F8845357@lmi.net>
References: <4A6B2B38.3080007@gmx.net>
	<ACF16862-34E0-4AFF-A330-AF72F8845357@lmi.net>
Message-ID: <4A6B2FB1.6020708@gmx.net>

Hi Greg!

> Your backtrace is missing symbolic information telling what call was
> last made in Radiance.  It seems to have crashed in a sprintf()
> statement, which means it could have bombed while trying to print an
> error message.  You should recompile with the -g option and crash it again.

Well, this is the ONE time that I had not compiled myself, so I will see
whether I can reproduce this.

> Just as a guess, you wouldn't happen to have any strings longer than 127
> characters in your material descriptions, would you?

No, but possibly in file names included by xform, in mesh objects and
such. Errrrr does your question mean that there is no overflow
protection for modifier names that exceed the maximum string length?

Currently downloading the latest snapshot for a -g build ;-)

Cheers, Lars.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3740 bytes
Desc: S/MIME Cryptographic Signature
Url : http://radiance-online.org/pipermail/radiance-dev/attachments/20090726/362bbd14/smime.bin
From gregoryjward at gmail.com  Sat Jul 25 09:32:25 2009
From: gregoryjward at gmail.com (Gregory J. Ward)
Date: Sat Jul 25 09:32:34 2009
Subject: [Radiance-dev] Re: [Radiance-general] Problems with Ubuntu's
	radiance distribution on amd64 platform
In-Reply-To: <4A6B2FB1.6020708@gmx.net>
References: <4A6B2B38.3080007@gmx.net>
	<ACF16862-34E0-4AFF-A330-AF72F8845357@lmi.net>
	<4A6B2FB1.6020708@gmx.net>
Message-ID: <B6642065-9659-4A5A-A49F-021F96A65C6B@gmail.com>

Hi Lars,

The code in oconv checks modifier and string lengths, though there  
may be problems in xform with long names.  That shouldn't crash  
oconv, however.  It's difficult to guess without a traceback.

-Greg

> From: "Lars O. Grobe" <grobe@gmx.net>
> Date: July 25, 2009 9:15:45 AM PDT
>
> Hi Greg!
>
>> Your backtrace is missing symbolic information telling what call was
>> last made in Radiance.  It seems to have crashed in a sprintf()
>> statement, which means it could have bombed while trying to print an
>> error message.  You should recompile with the -g option and crash  
>> it again.
>
> Well, this is the ONE time that I had not compiled myself, so I  
> will see
> whether I can reproduce this.
>
>> Just as a guess, you wouldn't happen to have any strings longer  
>> than 127
>> characters in your material descriptions, would you?
>
> No, but possibly in file names included by xform, in mesh objects and
> such. Errrrr does your question mean that there is no overflow
> protection for modifier names that exceed the maximum string length?
>
> Currently downloading the latest snapshot for a -g build ;-)
>
> Cheers, Lars.

From bernd at bzed.de  Sat Jul 25 11:35:32 2009
From: bernd at bzed.de (Bernd Zeimetz)
Date: Sat Jul 25 11:35:43 2009
Subject: [Radiance-dev] Re: [Radiance-general] Problems with Ubuntu's
	radiance distribution on amd64 platform
In-Reply-To: <4A6B2FB1.6020708@gmx.net>
References: <4A6B2B38.3080007@gmx.net>	<ACF16862-34E0-4AFF-A330-AF72F8845357@lmi.net>
	<4A6B2FB1.6020708@gmx.net>
Message-ID: <4A6B5074.3040403@bzed.de>

Lars O. Grobe wrote:
> Currently downloading the latest snapshot for a -g build ;-)

If I remember right there is some way to retrieve the external debug symbols in
Ubuntu... But I could add a -dbg package in any case.

If you want to give the latest Debian package a try and compile it with debug
symbols, do the following:

git clone git://git.recluse.de/debian/pkg-radiance.git
cd pkg-radiance
export DEB_BUILD_OPTIONS=nostrip,noopt
git-buildpackage
(if you don't have git-buildpackage, use dpkg-buildpackage -i.git -I.git)

That should give you some .deb files with included debug symbols.

Then try to get a core dump, or run the executable in gdb.
ulimit -c unlimited
will help:)

In gdb please use
bt full

to get a full backtrace.
Then file it as bug in the Debian bts or send it to this list :)

Cheers,

Bernd

-- 
 Bernd Zeimetz                             Debian GNU/Linux Developer
 GPG Fingerprints: 06C8 C9A2 EAAD E37E 5B2C BE93 067A AD04 C93B FF79
                   ECA1 E3F2 8E11 2432 D485 DD95 EB36 171A 6FF9 435F

